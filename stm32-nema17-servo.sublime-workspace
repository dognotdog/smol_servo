{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"numS",
				"NUM_STATIC_MEASUREMENTS"
			],
			[
				"num",
				"numSampleExceedingCurrentLimit"
			],
			[
				"MCTRL_ID_A",
				"MCTRL_ID_ALIGN_START"
			],
			[
				"MCTRL_RAMPTI",
				"MCTRL_RAMPTIME_ID_FINISH"
			],
			[
				"MCTRL_ID_AL",
				"MCTRL_ID_ALIGN_WAIT"
			],
			[
				"MCTRL_RAMPT",
				"MCTRL_RAMPTIME_ID_WAIT"
			],
			[
				"sys",
				"sysIdMaxCurrent"
			],
			[
				"ADC2",
				"ADC2_OVERSAMPLING_FACTOR"
			],
			[
				"taiv",
				"tauValid0"
			],
			[
				"tau",
				"tauValid1"
			],
			[
				"_cacl",
				"_calculateInductance"
			],
			[
				"ssf_get",
				"ssf_getVdda"
			],
			[
				"indu",
				"inductanceVariance"
			],
			[
				"kalm",
				"kalmanInductanceVars"
			],
			[
				"inductan",
				"inductanceVariance"
			],
			[
				"meas",
				"measurementMean"
			],
			[
				"measureme",
				"measurementVar"
			],
			[
				"induca",
				"inductanceVariance"
			],
			[
				"induc",
				"inductanceEstimate"
			],
			[
				"NUM",
				"NUM_IDENTIFICATION_RUNS"
			],
			[
				"MEAS_S",
				"MEAS_SAMPLES"
			],
			[
				"_c",
				"_convertAdcToCurrent"
			],
			[
				"MC",
				"MCTRL_INDUCTANCE_IDA_RUN"
			],
			[
				"MCTRL_IN",
				"MCTRL_INDUCTANCE_IDA_RUN"
			],
			[
				"MCTRL",
				"MCTRL_DEMO"
			],
			[
				"MCT",
				"MCTRL_ANALOG_CALIBRATION_FINISH"
			],
			[
				"adc",
				"adcCounts"
			],
			[
				"EN",
				"ENABLE"
			],
			[
				"_",
				"_phasedCurrents"
			],
			[
				"sen",
				"currentSensed"
			],
			[
				"curre",
				"currentSensed"
			],
			[
				"HTMD",
				"HTIM_DRV_CH_B"
			],
			[
				"ssf_spi",
				"ssf_spiRW"
			],
			[
				"usb_lie",
				"usb_linebufCount"
			],
			[
				"mspi_",
				"mspi_as5047_state_t"
			],
			[
				"MP",
				"MPWM_BITS"
			],
			[
				"fix",
				"fix1p30_t"
			],
			[
				"mpwm_set",
				"mpwm_setPeriodAndDuty"
			],
			[
				"wt",
				"writeHello"
			],
			[
				"ca",
				"callTime"
			],
			[
				"uhat",
				"uhat_idle"
			],
			[
				"highs",
				"highsideR"
			],
			[
				"current",
				"currentDutyCycle"
			],
			[
				"measure",
				"measuredCurrent"
			],
			[
				"pdcu",
				"pdCurrent"
			],
			[
				"laser",
				"laserCurrentPtr"
			],
			[
				"lowsi",
				"lowsideCurrent"
			],
			[
				"low",
				"lowsideCurrent"
			],
			[
				"lowsid",
				"lowsideR"
			],
			[
				"STM",
				"STM32F070x6"
			],
			[
				"S",
				"STM32F070x6"
			],
			[
				"uartx",
				"uartRxBuf"
			],
			[
				"uartrx",
				"uartRxBuf"
			],
			[
				"uart",
				"uartReceiveLine"
			],
			[
				"so",
				"sizeof"
			],
			[
				"uartRx",
				"uartRxBufDataBegin"
			],
			[
				"uartR",
				"uartRxBuf"
			],
			[
				"SPIS",
				"SPISLAVE_ENABLED"
			],
			[
				"temper",
				"temperatureMean"
			],
			[
				"_spi",
				"_spiChainId"
			],
			[
				"MS_",
				"MS_SPI_BUFSIZE"
			],
			[
				"MS_SPI",
				"MS_SPI_BUFSIZE"
			],
			[
				"enab",
				"callEnabled"
			],
			[
				"_sp",
				"_spiChainId"
			],
			[
				"spi",
				"_spiChainId"
			],
			[
				"minispeck",
				"minispeck_transmitData"
			],
			[
				"MS_SPI_TRANSFER_COMPLETE_",
				"MS_SPI_TRANSFER_COMPLETE_LONG"
			],
			[
				"MS_SP",
				"MS_SPI_IDLE"
			],
			[
				"MS",
				"MS_SPI_WAITING"
			],
			[
				"T",
				"TARGET_NAME"
			],
			[
				"fw",
				"u8FirmwareMajor"
			],
			[
				"FLASH",
				"FLASH_SECTORSIZE"
			],
			[
				"image",
				"imageMagic"
			],
			[
				"rst",
				"rstc_start_software_reset"
			],
			[
				"_file",
				"_fileLen"
			],
			[
				"beed",
				"beedance_encodeLeb128"
			],
			[
				"beedance_ss",
				"beedance_sendDebugMessage"
			],
			[
				"req",
				"requestId"
			],
			[
				"BEED",
				"BEEDANCE_FILE_DST_INVALID"
			],
			[
				"start",
				"startAddr"
			],
			[
				"BEDS",
				"BEEDANCE_FILE_DST_INVALID"
			],
			[
				"ref",
				"refChecksum"
			],
			[
				"_fi",
				"_fileLen"
			],
			[
				"chunk",
				"chunkOffset"
			],
			[
				"_fil",
				"_fileStartAddr"
			],
			[
				"_i",
				"_fileStartAddr"
			],
			[
				"_s",
				"_fileStartAddr"
			],
			[
				"respon",
				"responseLen"
			],
			[
				"BEEDANCE_MSG",
				"BEEDANCE_MSG_REQ_INFO"
			],
			[
				"bytes",
				"bytesRead"
			],
			[
				"_blem",
				"_bleMsgHandler"
			],
			[
				"_ble",
				"_bleMsgHandler"
			],
			[
				"bluetooth_send",
				"bluetooth_sendData"
			],
			[
				"bee",
				"beedance_packAndEncodeMessage"
			],
			[
				"data",
				"dataLen"
			],
			[
				"HB_UPL",
				"HB_UPLOAD_WAIT"
			],
			[
				"datalog_init",
				"datalog_initCollector"
			],
			[
				"pr",
				"programmed"
			],
			[
				"hb_getf",
				"hb_getFeedKey"
			],
			[
				"ch",
				"_channelNames"
			],
			[
				"MPFAR",
				"MSGPACK_FORMAT_ARY16"
			],
			[
				"MSGPACK_FORMAT_AR",
				"MSGPACK_FORMAT_ARY16"
			],
			[
				"MPFST",
				"MSGPACK_FORMAT_STR8"
			],
			[
				"MPFFL",
				"MSGPACK_FORMAT_FLOAT64"
			],
			[
				"MPFMTU",
				"MSGPACK_FORMAT_UINT8"
			],
			[
				"MPFUI",
				"MSGPACK_FORMAT_UINT8"
			],
			[
				"MPFMN",
				"MSGPACK_FORMAT_NIL"
			],
			[
				"MPFMTST",
				"MSGPACK_FORMAT_STR16"
			],
			[
				"_d",
				"_decodeLeb128"
			],
			[
				"packet",
				"packetlen"
			],
			[
				"COBS_DEC",
				"COBSD_DECODE_NZ"
			],
			[
				"datalog_in",
				"datalog_initCollector"
			],
			[
				"dfuDow",
				"dfuDownloadLength"
			],
			[
				"DFU_FE",
				"DFU_FETCH_WINC_START"
			],
			[
				"HSOCK_STA",
				"HSOCK_STATUS_ERROR"
			],
			[
				"dfud",
				"dfuDownloadLength"
			],
			[
				"HSOCK_ST",
				"HSOCK_STATUS_ERROR"
			],
			[
				"DFU_F",
				"DFU_FETCH_WINC_RECV"
			],
			[
				"dfu",
				"dfuDownloadLength"
			],
			[
				"dfu_data",
				"dfu_dataSteam"
			],
			[
				"DFU_FET",
				"DFU_FETCH_WINC_RECV"
			],
			[
				"DFU_",
				"DFU_FETCH_WINC_CONNECT"
			],
			[
				"DFU_WINC",
				"DFU_WINC1500_PATH"
			],
			[
				"DFU_FETCH_WINC_WAI",
				"DFU_FETCH_WINC_WAITCONNECT"
			],
			[
				"winc",
				"wincServerIpAddress"
			],
			[
				"DFU_WIN",
				"DFU_WINC1500_HOST"
			],
			[
				"received",
				"receivedContentLength"
			],
			[
				"host",
				"hostName"
			]
		]
	},
	"buffers":
	[
		{
			"file": "README.md",
			"settings":
			{
				"buffer_size": 9239,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "firmware48/Makefile",
			"settings":
			{
				"buffer_size": 10174,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "firmware48/Middlewares/USBDevice4Cube/Src/usb_device.c",
			"settings":
			{
				"buffer_size": 1985,
				"line_ending": "Unix"
			}
		},
		{
			"file": "firmware48/Middlewares/USBDevice4Cube/Src/main.c",
			"settings":
			{
				"buffer_size": 5133,
				"line_ending": "Unix"
			}
		},
		{
			"file": "firmware48/Middlewares/USBDevice4Cube/Src/hal_usb.c",
			"settings":
			{
				"buffer_size": 1798,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "stm32-servo-firmware/src/ssf_main.c",
			"settings":
			{
				"buffer_size": 12157,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "stm32-servo-firmware/src/usbd/hal_usb.c",
			"settings":
			{
				"buffer_size": 1615,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "firmware48/Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_cortex.h",
			"settings":
			{
				"buffer_size": 17571,
				"line_ending": "Windows"
			}
		},
		{
			"file": "stm32-servo-firmware/src/debug.h",
			"settings":
			{
				"buffer_size": 834,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Searching 1201 files for \"delay\" (case sensitive)\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g431xx.h:\n  704    uint32_t      RESERVED[16]; /*!< Reserved,                         Address offset: 0x04 to 0x40 */\n  705    __IO uint32_t PDMCR;        /*!< SAI PDM control register,                 Address offset: 0x44 */\n  706:   __IO uint32_t PDMDLY;       /*!< SAI PDM delay register,                   Address offset: 0x48 */\n  707  } SAI_TypeDef;\n  708  \n  ...\n 2137  #define ADC_CCR_DELAY_Pos              (8U)\n 2138  #define ADC_CCR_DELAY_Msk              (0xFUL << ADC_CCR_DELAY_Pos)            /*!< 0x00000F00 */\n 2139: #define ADC_CCR_DELAY                  ADC_CCR_DELAY_Msk                       /*!< ADC multimode delay between 2 sampling phases */\n 2140  #define ADC_CCR_DELAY_0                (0x1UL << ADC_CCR_DELAY_Pos)            /*!< 0x00000100 */\n 2141  #define ADC_CCR_DELAY_1                (0x2UL << ADC_CCR_DELAY_Pos)            /*!< 0x00000200 */\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g441xx.h:\n  705    uint32_t      RESERVED[16]; /*!< Reserved,                         Address offset: 0x04 to 0x40 */\n  706    __IO uint32_t PDMCR;        /*!< SAI PDM control register,                 Address offset: 0x44 */\n  707:   __IO uint32_t PDMDLY;       /*!< SAI PDM delay register,                   Address offset: 0x48 */\n  708  } SAI_TypeDef;\n  709  \n  ...\n 2171  #define ADC_CCR_DELAY_Pos              (8U)\n 2172  #define ADC_CCR_DELAY_Msk              (0xFUL << ADC_CCR_DELAY_Pos)            /*!< 0x00000F00 */\n 2173: #define ADC_CCR_DELAY                  ADC_CCR_DELAY_Msk                       /*!< ADC multimode delay between 2 sampling phases */\n 2174  #define ADC_CCR_DELAY_0                (0x1UL << ADC_CCR_DELAY_Pos)            /*!< 0x00000100 */\n 2175  #define ADC_CCR_DELAY_1                (0x2UL << ADC_CCR_DELAY_Pos)            /*!< 0x00000200 */\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g471xx.h:\n  738    uint32_t      RESERVED[16]; /*!< Reserved,                         Address offset: 0x04 to 0x40 */\n  739    __IO uint32_t PDMCR;        /*!< SAI PDM control register,                 Address offset: 0x44 */\n  740:   __IO uint32_t PDMDLY;       /*!< SAI PDM delay register,                   Address offset: 0x48 */\n  741  } SAI_TypeDef;\n  742  \n  ...\n 2201  #define ADC_CCR_DELAY_Pos              (8U)\n 2202  #define ADC_CCR_DELAY_Msk              (0xFUL << ADC_CCR_DELAY_Pos)            /*!< 0x00000F00 */\n 2203: #define ADC_CCR_DELAY                  ADC_CCR_DELAY_Msk                       /*!< ADC multimode delay between 2 sampling phases */\n 2204  #define ADC_CCR_DELAY_0                (0x1UL << ADC_CCR_DELAY_Pos)            /*!< 0x00000100 */\n 2205  #define ADC_CCR_DELAY_1                (0x2UL << ADC_CCR_DELAY_Pos)            /*!< 0x00000200 */\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g473xx.h:\n  801    uint32_t      RESERVED[16]; /*!< Reserved,                         Address offset: 0x04 to 0x40 */\n  802    __IO uint32_t PDMCR;        /*!< SAI PDM control register,                 Address offset: 0x44 */\n  803:   __IO uint32_t PDMDLY;       /*!< SAI PDM delay register,                   Address offset: 0x48 */\n  804  } SAI_TypeDef;\n  805  \n  ...\n 2306  #define ADC_CCR_DELAY_Pos              (8U)\n 2307  #define ADC_CCR_DELAY_Msk              (0xFUL << ADC_CCR_DELAY_Pos)            /*!< 0x00000F00 */\n 2308: #define ADC_CCR_DELAY                  ADC_CCR_DELAY_Msk                       /*!< ADC multimode delay between 2 sampling phases */\n 2309  #define ADC_CCR_DELAY_0                (0x1UL << ADC_CCR_DELAY_Pos)            /*!< 0x00000100 */\n 2310  #define ADC_CCR_DELAY_1                (0x2UL << ADC_CCR_DELAY_Pos)            /*!< 0x00000200 */\n ....\n 5564  #define FMC_PCR_TCLR_Pos           (9U)\n 5565  #define FMC_PCR_TCLR_Msk           (0xFUL << FMC_PCR_TCLR_Pos)                 /*!< 0x00001E00 */\n 5566: #define FMC_PCR_TCLR               FMC_PCR_TCLR_Msk                            /*!<TCLR[3:0] bits (CLE to RE delay)          */\n 5567  #define FMC_PCR_TCLR_0             (0x1UL << FMC_PCR_TCLR_Pos)                 /*!< 0x00000200 */\n 5568  #define FMC_PCR_TCLR_1             (0x2UL << FMC_PCR_TCLR_Pos)                 /*!< 0x00000400 */\n ....\n 5572  #define FMC_PCR_TAR_Pos            (13U)\n 5573  #define FMC_PCR_TAR_Msk            (0xFUL << FMC_PCR_TAR_Pos)                  /*!< 0x0001E000 */\n 5574: #define FMC_PCR_TAR                FMC_PCR_TAR_Msk                             /*!<TAR[3:0] bits (ALE to RE delay)           */\n 5575  #define FMC_PCR_TAR_0              (0x1UL << FMC_PCR_TAR_Pos)                  /*!< 0x00002000 */\n 5576  #define FMC_PCR_TAR_1              (0x2UL << FMC_PCR_TAR_Pos)                  /*!< 0x00004000 */\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g474xx.h:\n  809    uint32_t      RESERVED[16]; /*!< Reserved,                         Address offset: 0x04 to 0x40 */\n  810    __IO uint32_t PDMCR;        /*!< SAI PDM control register,                 Address offset: 0x44 */\n  811:   __IO uint32_t PDMDLY;       /*!< SAI PDM delay register,                   Address offset: 0x48 */\n  812  } SAI_TypeDef;\n  813  \n  ...\n 2441  #define ADC_CCR_DELAY_Pos              (8U)\n 2442  #define ADC_CCR_DELAY_Msk              (0xFUL << ADC_CCR_DELAY_Pos)            /*!< 0x00000F00 */\n 2443: #define ADC_CCR_DELAY                  ADC_CCR_DELAY_Msk                       /*!< ADC multimode delay between 2 sampling phases */\n 2444  #define ADC_CCR_DELAY_0                (0x1UL << ADC_CCR_DELAY_Pos)            /*!< 0x00000100 */\n 2445  #define ADC_CCR_DELAY_1                (0x2UL << ADC_CCR_DELAY_Pos)            /*!< 0x00000200 */\n ....\n 5702  #define FMC_PCR_TCLR_Pos           (9U)\n 5703  #define FMC_PCR_TCLR_Msk           (0xFUL << FMC_PCR_TCLR_Pos)                 /*!< 0x00001E00 */\n 5704: #define FMC_PCR_TCLR               FMC_PCR_TCLR_Msk                            /*!<TCLR[3:0] bits (CLE to RE delay)          */\n 5705  #define FMC_PCR_TCLR_0             (0x1UL << FMC_PCR_TCLR_Pos)                 /*!< 0x00000200 */\n 5706  #define FMC_PCR_TCLR_1             (0x2UL << FMC_PCR_TCLR_Pos)                 /*!< 0x00000400 */\n ....\n 5710  #define FMC_PCR_TAR_Pos            (13U)\n 5711  #define FMC_PCR_TAR_Msk            (0xFUL << FMC_PCR_TAR_Pos)                  /*!< 0x0001E000 */\n 5712: #define FMC_PCR_TAR                FMC_PCR_TAR_Msk                             /*!<TAR[3:0] bits (ALE to RE delay)           */\n 5713  #define FMC_PCR_TAR_0              (0x1UL << FMC_PCR_TAR_Pos)                  /*!< 0x00002000 */\n 5714  #define FMC_PCR_TAR_1              (0x2UL << FMC_PCR_TAR_Pos)                  /*!< 0x00004000 */\n ....\n 7129  #define HRTIM_TIMCR_DELCMP2_Pos       (12U)\n 7130  #define HRTIM_TIMCR_DELCMP2_Msk       (0x3UL << HRTIM_TIMCR_DELCMP2_Pos)       /*!< 0x00003000 */\n 7131: #define HRTIM_TIMCR_DELCMP2           HRTIM_TIMCR_DELCMP2_Msk                  /*!< Slave delayed compartor 2 mode mask */\n 7132  #define HRTIM_TIMCR_DELCMP2_0         (0x1UL << HRTIM_TIMCR_DELCMP2_Pos)       /*!< 0x00001000 */\n 7133  #define HRTIM_TIMCR_DELCMP2_1         (0x2UL << HRTIM_TIMCR_DELCMP2_Pos)       /*!< 0x00002000 */\n 7134  #define HRTIM_TIMCR_DELCMP4_Pos       (14U)\n 7135  #define HRTIM_TIMCR_DELCMP4_Msk       (0x3UL << HRTIM_TIMCR_DELCMP4_Pos)       /*!< 0x0000C000 */\n 7136: #define HRTIM_TIMCR_DELCMP4           HRTIM_TIMCR_DELCMP4_Msk                  /*!< Slave delayed compartor 4 mode mask */\n 7137  #define HRTIM_TIMCR_DELCMP4_0         (0x1UL << HRTIM_TIMCR_DELCMP4_Pos)       /*!< 0x00004000 */\n 7138  #define HRTIM_TIMCR_DELCMP4_1         (0x2UL << HRTIM_TIMCR_DELCMP4_Pos)       /*!< 0x00008000 */\n ....\n 7222  #define HRTIM_TIMISR_DLYPRT_Pos       (14U)\n 7223  #define HRTIM_TIMISR_DLYPRT_Msk       (0x1UL << HRTIM_TIMISR_DLYPRT_Pos)       /*!< 0x00004000 */\n 7224: #define HRTIM_TIMISR_DLYPRT           HRTIM_TIMISR_DLYPRT_Msk                  /*!< Slave output 1 delay protection interrupt flag */\n 7225  #define HRTIM_TIMISR_CPPSTAT_Pos      (16U)\n 7226  #define HRTIM_TIMISR_CPPSTAT_Msk      (0x1UL << HRTIM_TIMISR_CPPSTAT_Pos)      /*!< 0x00010000 */\n ....\n 7284  #define HRTIM_TIMICR_DLYPRTC_Pos      (14U)\n 7285  #define HRTIM_TIMICR_DLYPRTC_Msk      (0x1UL << HRTIM_TIMICR_DLYPRTC_Pos)      /*!< 0x00004000 */\n 7286: #define HRTIM_TIMICR_DLYPRTC          HRTIM_TIMICR_DLYPRTC_Msk                 /*!< Slave output delay protection clear flag */\n 7287  \n 7288  /******************** Slave DMA/Interrupt enable register *********************/\n ....\n 7328  #define HRTIM_TIMDIER_DLYPRTIE_Pos    (14U)\n 7329  #define HRTIM_TIMDIER_DLYPRTIE_Msk    (0x1UL << HRTIM_TIMDIER_DLYPRTIE_Pos)    /*!< 0x00004000 */\n 7330: #define HRTIM_TIMDIER_DLYPRTIE        HRTIM_TIMDIER_DLYPRTIE_Msk               /*!< Slave delay protection interrupt enable */\n 7331  \n 7332  #define HRTIM_TIMDIER_CMP1DE_Pos      (16U)\n ....\n 7371  #define HRTIM_TIMDIER_DLYPRTDE_Pos    (30U)\n 7372  #define HRTIM_TIMDIER_DLYPRTDE_Msk    (0x1UL << HRTIM_TIMDIER_DLYPRTDE_Pos)    /*!< 0x40000000 */\n 7373: #define HRTIM_TIMDIER_DLYPRTDE        HRTIM_TIMDIER_DLYPRTDE_Msk               /*!< Slavedelay protection request enable */\n 7374  \n 7375  /******************  Bit definition for HRTIM_CNTR register  ****************/\n ....\n 8378  #define HRTIM_OUTR_DLYPRTEN_Pos       (9U)\n 8379  #define HRTIM_OUTR_DLYPRTEN_Msk       (0x1UL << HRTIM_OUTR_DLYPRTEN_Pos)       /*!< 0x00000200 */\n 8380: #define HRTIM_OUTR_DLYPRTEN           HRTIM_OUTR_DLYPRTEN_Msk                  /*!< Slave output delay protection enable */\n 8381  #define HRTIM_OUTR_DLYPRT_Pos         (10U)\n 8382  #define HRTIM_OUTR_DLYPRT_Msk         (0x7UL << HRTIM_OUTR_DLYPRT_Pos)         /*!< 0x00001C00 */\n 8383: #define HRTIM_OUTR_DLYPRT             HRTIM_OUTR_DLYPRT_Msk                    /*!< Slave output delay protection */\n 8384  #define HRTIM_OUTR_DLYPRT_0           (0x1UL << HRTIM_OUTR_DLYPRT_Pos)         /*!< 0x00000400 */\n 8385  #define HRTIM_OUTR_DLYPRT_1           (0x2UL << HRTIM_OUTR_DLYPRT_Pos)         /*!< 0x00000800 */\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g483xx.h:\n  802    uint32_t      RESERVED[16]; /*!< Reserved,                         Address offset: 0x04 to 0x40 */\n  803    __IO uint32_t PDMCR;        /*!< SAI PDM control register,                 Address offset: 0x44 */\n  804:   __IO uint32_t PDMDLY;       /*!< SAI PDM delay register,                   Address offset: 0x48 */\n  805  } SAI_TypeDef;\n  806  \n  ...\n 2340  #define ADC_CCR_DELAY_Pos              (8U)\n 2341  #define ADC_CCR_DELAY_Msk              (0xFUL << ADC_CCR_DELAY_Pos)            /*!< 0x00000F00 */\n 2342: #define ADC_CCR_DELAY                  ADC_CCR_DELAY_Msk                       /*!< ADC multimode delay between 2 sampling phases */\n 2343  #define ADC_CCR_DELAY_0                (0x1UL << ADC_CCR_DELAY_Pos)            /*!< 0x00000100 */\n 2344  #define ADC_CCR_DELAY_1                (0x2UL << ADC_CCR_DELAY_Pos)            /*!< 0x00000200 */\n ....\n 5786  #define FMC_PCR_TCLR_Pos           (9U)\n 5787  #define FMC_PCR_TCLR_Msk           (0xFUL << FMC_PCR_TCLR_Pos)                 /*!< 0x00001E00 */\n 5788: #define FMC_PCR_TCLR               FMC_PCR_TCLR_Msk                            /*!<TCLR[3:0] bits (CLE to RE delay)          */\n 5789  #define FMC_PCR_TCLR_0             (0x1UL << FMC_PCR_TCLR_Pos)                 /*!< 0x00000200 */\n 5790  #define FMC_PCR_TCLR_1             (0x2UL << FMC_PCR_TCLR_Pos)                 /*!< 0x00000400 */\n ....\n 5794  #define FMC_PCR_TAR_Pos            (13U)\n 5795  #define FMC_PCR_TAR_Msk            (0xFUL << FMC_PCR_TAR_Pos)                  /*!< 0x0001E000 */\n 5796: #define FMC_PCR_TAR                FMC_PCR_TAR_Msk                             /*!<TAR[3:0] bits (ALE to RE delay)           */\n 5797  #define FMC_PCR_TAR_0              (0x1UL << FMC_PCR_TAR_Pos)                  /*!< 0x00002000 */\n 5798  #define FMC_PCR_TAR_1              (0x2UL << FMC_PCR_TAR_Pos)                  /*!< 0x00004000 */\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g484xx.h:\n  810    uint32_t      RESERVED[16]; /*!< Reserved,                         Address offset: 0x04 to 0x40 */\n  811    __IO uint32_t PDMCR;        /*!< SAI PDM control register,                 Address offset: 0x44 */\n  812:   __IO uint32_t PDMDLY;       /*!< SAI PDM delay register,                   Address offset: 0x48 */\n  813  } SAI_TypeDef;\n  814  \n  ...\n 2475  #define ADC_CCR_DELAY_Pos              (8U)\n 2476  #define ADC_CCR_DELAY_Msk              (0xFUL << ADC_CCR_DELAY_Pos)            /*!< 0x00000F00 */\n 2477: #define ADC_CCR_DELAY                  ADC_CCR_DELAY_Msk                       /*!< ADC multimode delay between 2 sampling phases */\n 2478  #define ADC_CCR_DELAY_0                (0x1UL << ADC_CCR_DELAY_Pos)            /*!< 0x00000100 */\n 2479  #define ADC_CCR_DELAY_1                (0x2UL << ADC_CCR_DELAY_Pos)            /*!< 0x00000200 */\n ....\n 5924  #define FMC_PCR_TCLR_Pos           (9U)\n 5925  #define FMC_PCR_TCLR_Msk           (0xFUL << FMC_PCR_TCLR_Pos)                 /*!< 0x00001E00 */\n 5926: #define FMC_PCR_TCLR               FMC_PCR_TCLR_Msk                            /*!<TCLR[3:0] bits (CLE to RE delay)          */\n 5927  #define FMC_PCR_TCLR_0             (0x1UL << FMC_PCR_TCLR_Pos)                 /*!< 0x00000200 */\n 5928  #define FMC_PCR_TCLR_1             (0x2UL << FMC_PCR_TCLR_Pos)                 /*!< 0x00000400 */\n ....\n 5932  #define FMC_PCR_TAR_Pos            (13U)\n 5933  #define FMC_PCR_TAR_Msk            (0xFUL << FMC_PCR_TAR_Pos)                  /*!< 0x0001E000 */\n 5934: #define FMC_PCR_TAR                FMC_PCR_TAR_Msk                             /*!<TAR[3:0] bits (ALE to RE delay)           */\n 5935  #define FMC_PCR_TAR_0              (0x1UL << FMC_PCR_TAR_Pos)                  /*!< 0x00002000 */\n 5936  #define FMC_PCR_TAR_1              (0x2UL << FMC_PCR_TAR_Pos)                  /*!< 0x00004000 */\n ....\n 7351  #define HRTIM_TIMCR_DELCMP2_Pos       (12U)\n 7352  #define HRTIM_TIMCR_DELCMP2_Msk       (0x3UL << HRTIM_TIMCR_DELCMP2_Pos)       /*!< 0x00003000 */\n 7353: #define HRTIM_TIMCR_DELCMP2           HRTIM_TIMCR_DELCMP2_Msk                  /*!< Slave delayed compartor 2 mode mask */\n 7354  #define HRTIM_TIMCR_DELCMP2_0         (0x1UL << HRTIM_TIMCR_DELCMP2_Pos)       /*!< 0x00001000 */\n 7355  #define HRTIM_TIMCR_DELCMP2_1         (0x2UL << HRTIM_TIMCR_DELCMP2_Pos)       /*!< 0x00002000 */\n 7356  #define HRTIM_TIMCR_DELCMP4_Pos       (14U)\n 7357  #define HRTIM_TIMCR_DELCMP4_Msk       (0x3UL << HRTIM_TIMCR_DELCMP4_Pos)       /*!< 0x0000C000 */\n 7358: #define HRTIM_TIMCR_DELCMP4           HRTIM_TIMCR_DELCMP4_Msk                  /*!< Slave delayed compartor 4 mode mask */\n 7359  #define HRTIM_TIMCR_DELCMP4_0         (0x1UL << HRTIM_TIMCR_DELCMP4_Pos)       /*!< 0x00004000 */\n 7360  #define HRTIM_TIMCR_DELCMP4_1         (0x2UL << HRTIM_TIMCR_DELCMP4_Pos)       /*!< 0x00008000 */\n ....\n 7444  #define HRTIM_TIMISR_DLYPRT_Pos       (14U)\n 7445  #define HRTIM_TIMISR_DLYPRT_Msk       (0x1UL << HRTIM_TIMISR_DLYPRT_Pos)       /*!< 0x00004000 */\n 7446: #define HRTIM_TIMISR_DLYPRT           HRTIM_TIMISR_DLYPRT_Msk                  /*!< Slave output 1 delay protection interrupt flag */\n 7447  #define HRTIM_TIMISR_CPPSTAT_Pos      (16U)\n 7448  #define HRTIM_TIMISR_CPPSTAT_Msk      (0x1UL << HRTIM_TIMISR_CPPSTAT_Pos)      /*!< 0x00010000 */\n ....\n 7506  #define HRTIM_TIMICR_DLYPRTC_Pos      (14U)\n 7507  #define HRTIM_TIMICR_DLYPRTC_Msk      (0x1UL << HRTIM_TIMICR_DLYPRTC_Pos)      /*!< 0x00004000 */\n 7508: #define HRTIM_TIMICR_DLYPRTC          HRTIM_TIMICR_DLYPRTC_Msk                 /*!< Slave output delay protection clear flag */\n 7509  \n 7510  /******************** Slave DMA/Interrupt enable register *********************/\n ....\n 7550  #define HRTIM_TIMDIER_DLYPRTIE_Pos    (14U)\n 7551  #define HRTIM_TIMDIER_DLYPRTIE_Msk    (0x1UL << HRTIM_TIMDIER_DLYPRTIE_Pos)    /*!< 0x00004000 */\n 7552: #define HRTIM_TIMDIER_DLYPRTIE        HRTIM_TIMDIER_DLYPRTIE_Msk               /*!< Slave delay protection interrupt enable */\n 7553  \n 7554  #define HRTIM_TIMDIER_CMP1DE_Pos      (16U)\n ....\n 7593  #define HRTIM_TIMDIER_DLYPRTDE_Pos    (30U)\n 7594  #define HRTIM_TIMDIER_DLYPRTDE_Msk    (0x1UL << HRTIM_TIMDIER_DLYPRTDE_Pos)    /*!< 0x40000000 */\n 7595: #define HRTIM_TIMDIER_DLYPRTDE        HRTIM_TIMDIER_DLYPRTDE_Msk               /*!< Slavedelay protection request enable */\n 7596  \n 7597  /******************  Bit definition for HRTIM_CNTR register  ****************/\n ....\n 8600  #define HRTIM_OUTR_DLYPRTEN_Pos       (9U)\n 8601  #define HRTIM_OUTR_DLYPRTEN_Msk       (0x1UL << HRTIM_OUTR_DLYPRTEN_Pos)       /*!< 0x00000200 */\n 8602: #define HRTIM_OUTR_DLYPRTEN           HRTIM_OUTR_DLYPRTEN_Msk                  /*!< Slave output delay protection enable */\n 8603  #define HRTIM_OUTR_DLYPRT_Pos         (10U)\n 8604  #define HRTIM_OUTR_DLYPRT_Msk         (0x7UL << HRTIM_OUTR_DLYPRT_Pos)         /*!< 0x00001C00 */\n 8605: #define HRTIM_OUTR_DLYPRT             HRTIM_OUTR_DLYPRT_Msk                    /*!< Slave output delay protection */\n 8606  #define HRTIM_OUTR_DLYPRT_0           (0x1UL << HRTIM_OUTR_DLYPRT_Pos)         /*!< 0x00000400 */\n 8607  #define HRTIM_OUTR_DLYPRT_1           (0x2UL << HRTIM_OUTR_DLYPRT_Pos)         /*!< 0x00000800 */\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32gbk1cb.h:\n  703    uint32_t      RESERVED[16]; /*!< Reserved,                         Address offset: 0x04 to 0x40 */\n  704    __IO uint32_t PDMCR;        /*!< SAI PDM control register,                 Address offset: 0x44 */\n  705:   __IO uint32_t PDMDLY;       /*!< SAI PDM delay register,                   Address offset: 0x48 */\n  706  } SAI_TypeDef;\n  707  \n  ...\n 2123  #define ADC_CCR_DELAY_Pos              (8U)\n 2124  #define ADC_CCR_DELAY_Msk              (0xFUL << ADC_CCR_DELAY_Pos)            /*!< 0x00000F00 */\n 2125: #define ADC_CCR_DELAY                  ADC_CCR_DELAY_Msk                       /*!< ADC multimode delay between 2 sampling phases */\n 2126  #define ADC_CCR_DELAY_0                (0x1UL << ADC_CCR_DELAY_Pos)            /*!< 0x00000100 */\n 2127  #define ADC_CCR_DELAY_1                (0x2UL << ADC_CCR_DELAY_Pos)            /*!< 0x00000200 */\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/CMSIS/DSP/DSP_Lib_TestSuite/Common/inc/filtering_tests/filtering_test_data.h:\n   73  \n   74  /* Tap Delay Lists */\n   75: extern const int32_t filtering_tap_delay[FILTERING_MAX_NUMTAPS];\n   76  \n   77  /* Numbers */\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/CMSIS/DSP/DSP_Lib_TestSuite/Common/src/filtering_tests/filtering_test_common_data.c:\n  738  /* Tap Delay Lists */\n  739  /*--------------------------------------------------------------------------------*/\n  740: //const int32_t filtering_tap_delay[FILTERING_MAX_NUMTAPS] = {\n  741  //\t0xEE, 0x00, 0x10, 0x0B, 0xF6, 0xD9,\n  742  //\t0x1D, 0xFF, 0xDD, 0x1A, 0xEF, 0xE8,\n  ...\n  747  //};\n  748  \n  749: const int32_t filtering_tap_delay[FILTERING_MAX_NUMTAPS] = {\n  750  \t0x00, 0x01, 0x10, 0x0B, 0x03, 0x05,\n  751  \t0x1D, 0x21, 0x11, 0x1A, 0x1F, 0x07,\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/CMSIS/DSP/DSP_Lib_TestSuite/Common/src/filtering_tests/fir_tests.c:\n  248                       (output_type*)filtering_coeffs_##suffix,           \\\n  249                       (void *) filtering_pState,                         \\\n  250:                      (int32_t*)filtering_tap_delay,                     \\\n  251                       FILTERING_MAX_TAP_DELAY, blockSize);               \\\n  252                                                                          \\\n  ...\n  263                       (output_type*)filtering_coeffs_##suffix,           \\\n  264                       (void *) filtering_pState,                         \\\n  265:                      (int32_t*)filtering_tap_delay,                     \\\n  266                       FILTERING_MAX_TAP_DELAY, blockSize);               \\\n  267                                                                          \\\n  ...\n  306                       (output_type*)filtering_coeffs_##suffix,           \\\n  307                       (void *) filtering_pState,                         \\\n  308:                      (int32_t*)filtering_tap_delay,                     \\\n  309                       FILTERING_MAX_TAP_DELAY, blockSize);               \\\n  310                                                                          \\\n  ...\n  322                       (output_type*)filtering_coeffs_##suffix,           \\\n  323                       (void *) filtering_pState,                         \\\n  324:                      (int32_t*)filtering_tap_delay,                     \\\n  325                       FILTERING_MAX_TAP_DELAY, blockSize);               \\\n  326                                                                          \\\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/CMSIS/DSP/DSP_Lib_TestSuite/RefLibs/src/FilteringFunctions/fir_sparse.c:\n   15    float32_t *pOut;                               /* Destination pointer */\n   16    int32_t *pTapDelay = S->pTapDelay;             /* Pointer to the array containing offset of the non-zero tap values. */\n   17:   uint32_t delaySize = S->maxDelay + blockSize;  /* state length */\n   18    uint16_t numTaps = S->numTaps;                 /* Number of filter coefficients in the filter  */\n   19    int32_t readIndex;                             /* Read index of the state buffer */\n   ..\n   24    /* BlockSize of Input samples are copied into the state buffer */\n   25    /* StateIndex points to the starting position to write in the state buffer */\n   26:   arm_circularWrite_f32((int32_t *) py, delaySize, &S->stateIndex, 1,\n   27                          (int32_t *) pSrc, 1, blockSize);\n   28  \n   ..\n   34    if (readIndex < 0)\n   35    {\n   36:     readIndex += (int32_t) delaySize;\n   37    }\n   38  \n   ..\n   41  \n   42    /* blockSize samples are read from the state buffer */\n   43:   arm_circularRead_f32((int32_t *) py, delaySize, &readIndex, 1,\n   44                         (int32_t *) pb, (int32_t *) pb, blockSize, 1,\n   45                         blockSize);\n   ..\n   77      if (readIndex < 0)\n   78      {\n   79:       readIndex += (int32_t) delaySize;\n   80      }\n   81  \n   ..\n   84  \n   85      /* blockSize samples are read from the state buffer */\n   86:     arm_circularRead_f32((int32_t *) py, delaySize, &readIndex, 1,\n   87                           (int32_t *) pb, (int32_t *) pb, blockSize, 1,\n   88                           blockSize);\n   ..\n  125    q63_t out;                                     /* Temporary output variable */\n  126    int32_t *pTapDelay = S->pTapDelay;             /* Pointer to the array containing offset of the non-zero tap values. */\n  127:   uint32_t delaySize = S->maxDelay + blockSize;  /* state length */\n  128    uint16_t numTaps = S->numTaps;                 /* Filter order */\n  129    int32_t readIndex;                             /* Read index of the state buffer */\n  ...\n  135    /* BlockSize of Input samples are copied into the state buffer */\n  136    /* StateIndex points to the starting position to write in the state buffer */\n  137:   arm_circularWrite_f32((int32_t *) py, delaySize, &S->stateIndex, 1,\n  138                          (int32_t *) pSrc, 1, blockSize);\n  139  \n  ...\n  144    if (readIndex < 0)\n  145    {\n  146:     readIndex += (int32_t) delaySize;\n  147    }\n  148  \n  ...\n  151  \n  152    /* blockSize samples are read from the state buffer */\n  153:   arm_circularRead_f32((int32_t *) py, delaySize, &readIndex, 1,\n  154                         (int32_t *) pb, (int32_t *) pb, blockSize, 1,\n  155                         blockSize);\n  ...\n  187      if (readIndex < 0)\n  188      {\n  189:       readIndex += (int32_t) delaySize;\n  190      }\n  191  \n  ...\n  194  \n  195      /* blockSize samples are read from the state buffer */\n  196:     arm_circularRead_f32((int32_t *) py, delaySize, &readIndex, 1,\n  197                           (int32_t *) pb, (int32_t *) pb, blockSize, 1,\n  198                           blockSize);\n  ...\n  253    q15_t *py = pState;                            /* Temporary pointers for state buffer */\n  254    int32_t *pTapDelay = S->pTapDelay;             /* Pointer to the array containing offset of the non-zero tap values. */\n  255:   uint32_t delaySize = S->maxDelay + blockSize;  /* state length */\n  256    uint16_t numTaps = S->numTaps;                 /* Filter order */\n  257    int32_t readIndex;                             /* Read index of the state buffer */\n  ...\n  262    /* BlockSize of Input samples are copied into the state buffer */\n  263    /* StateIndex points to the starting position to write in the state buffer */\n  264:   arm_circularWrite_q15(py, delaySize, &S->stateIndex, 1, pIn, 1, blockSize);\n  265  \n  266    /* Loop over the number of taps. */\n  ...\n  273    if (readIndex < 0)\n  274    {\n  275:     readIndex += (int32_t) delaySize;\n  276    }\n  277  \n  ...\n  280  \n  281    /* blockSize samples are read from the state buffer */\n  282:   arm_circularRead_q15(py, delaySize, &readIndex, 1,\n  283                         pb, pb, blockSize, 1, blockSize);\n  284  \n  ...\n  315      if (readIndex < 0)\n  316      {\n  317:       readIndex += (int32_t) delaySize;\n  318      }\n  319  \n  ...\n  322  \n  323      /* blockSize samples are read from the state buffer */\n  324:     arm_circularRead_q15(py, delaySize, &readIndex, 1,\n  325                           pb, pb, blockSize, 1, blockSize);\n  326  \n  ...\n  373    q7_t *pOut = pDst;                             /* Destination pointer */\n  374    int32_t *pTapDelay = S->pTapDelay;             /* Pointer to the array containing offset of the non-zero tap values. */\n  375:   uint32_t delaySize = S->maxDelay + blockSize;  /* state length */\n  376    uint16_t numTaps = S->numTaps;                 /* Filter order */\n  377    int32_t readIndex;                             /* Read index of the state buffer */\n  ...\n  383    /* BlockSize of Input samples are copied into the state buffer */\n  384    /* StateIndex points to the starting position to write in the state buffer */\n  385:   arm_circularWrite_q7(py, (int32_t) delaySize, &S->stateIndex, 1, pSrc, 1,\n  386                         blockSize);\n  387  \n  ...\n  395    if (readIndex < 0)\n  396    {\n  397:     readIndex += (int32_t) delaySize;\n  398    }\n  399  \n  ...\n  402  \n  403    /* blockSize samples are read from the state buffer */\n  404:   arm_circularRead_q7(py, (int32_t) delaySize, &readIndex, 1, pb, pb,\n  405                        (int32_t) blockSize, 1, blockSize);\n  406  \n  ...\n  438      if (readIndex < 0)\n  439      {\n  440:       readIndex += (int32_t) delaySize;\n  441      }\n  442  \n  ...\n  445  \n  446      /* blockSize samples are read from the state buffer */\n  447:     arm_circularRead_q7(py, (int32_t) delaySize, &readIndex, 1, pb, pb,\n  448                          (int32_t) blockSize, 1, blockSize);\n  449  \n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/CMSIS/DSP/Examples/ARM/arm_fir_example/arm_fir_example_f32.c:\n   75   * The resulting filter coefficients and are shown below.\n   76   * Note that the filter is symmetric (a property of linear phase FIR filters)\n   77:  * and the point of symmetry is sample 14.  Thus the filter will have a delay of\n   78   * 14 samples for all frequencies.\n   79   * \\par\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/CMSIS/DSP/Include/arm_math.h:\n 4416      float32_t *pCoeffs;           /**< points to the coefficient array. The array is of length numTaps.*/\n 4417      uint16_t maxDelay;            /**< maximum offset specified by the pTapDelay array. */\n 4418:     int32_t *pTapDelay;           /**< points to the array of delay values.  The array is of length numTaps. */\n 4419    } arm_fir_sparse_instance_f32;\n 4420  \n ....\n 4429      q31_t *pCoeffs;               /**< points to the coefficient array. The array is of length numTaps.*/\n 4430      uint16_t maxDelay;            /**< maximum offset specified by the pTapDelay array. */\n 4431:     int32_t *pTapDelay;           /**< points to the array of delay values.  The array is of length numTaps. */\n 4432    } arm_fir_sparse_instance_q31;\n 4433  \n ....\n 4442      q15_t *pCoeffs;               /**< points to the coefficient array. The array is of length numTaps.*/\n 4443      uint16_t maxDelay;            /**< maximum offset specified by the pTapDelay array. */\n 4444:     int32_t *pTapDelay;           /**< points to the array of delay values.  The array is of length numTaps. */\n 4445    } arm_fir_sparse_instance_q15;\n 4446  \n ....\n 4455      q7_t *pCoeffs;                /**< points to the coefficient array. The array is of length numTaps.*/\n 4456      uint16_t maxDelay;            /**< maximum offset specified by the pTapDelay array. */\n 4457:     int32_t *pTapDelay;           /**< points to the array of delay values.  The array is of length numTaps. */\n 4458    } arm_fir_sparse_instance_q7;\n 4459  \n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_f32.c:\n  125    float32_t *pOut;                               /* Destination pointer */\n  126    int32_t *pTapDelay = S->pTapDelay;             /* Pointer to the array containing offset of the non-zero tap values. */\n  127:   uint32_t delaySize = S->maxDelay + blockSize;  /* state length */\n  128    uint16_t numTaps = S->numTaps;                 /* Number of filter coefficients in the filter  */\n  129    int32_t readIndex;                             /* Read index of the state buffer */\n  ...\n  135    /* BlockSize of Input samples are copied into the state buffer */\n  136    /* StateIndex points to the starting position to write in the state buffer */\n  137:   arm_circularWrite_f32((int32_t *) py, delaySize, &S->stateIndex, 1,\n  138                          (int32_t *) pSrc, 1, blockSize);\n  139  \n  ...\n  145    if (readIndex < 0)\n  146    {\n  147:     readIndex += (int32_t) delaySize;\n  148    }\n  149  \n  ...\n  152  \n  153    /* blockSize samples are read from the state buffer */\n  154:   arm_circularRead_f32((int32_t *) py, delaySize, &readIndex, 1,\n  155                         (int32_t *) pb, (int32_t *) pb, blockSize, 1,\n  156                         blockSize);\n  ...\n  206    if (readIndex < 0)\n  207    {\n  208:     readIndex += (int32_t) delaySize;\n  209    }\n  210  \n  ...\n  219  \n  220      /* blockSize samples are read from the state buffer */\n  221:     arm_circularRead_f32((int32_t *) py, delaySize, &readIndex, 1,\n  222                           (int32_t *) pb, (int32_t *) pb, blockSize, 1,\n  223                           blockSize);\n  ...\n  269      if (readIndex < 0)\n  270      {\n  271:       readIndex += (int32_t) delaySize;\n  272      }\n  273  \n  ...\n  282  \n  283  \t/* blockSize samples are read from the state buffer */\n  284: \tarm_circularRead_f32((int32_t *) py, delaySize, &readIndex, 1,\n  285  \t\t\t\t\t\t\t\t\t\t\t (int32_t *) pb, (int32_t *) pb, blockSize, 1,\n  286  \t\t\t\t\t\t\t\t\t\t\t blockSize);\n  ...\n  346    if (readIndex < 0)\n  347    {\n  348:     readIndex += (int32_t) delaySize;\n  349    }\n  350  \n  ...\n  359  \n  360      /* blockSize samples are read from the state buffer */\n  361:     arm_circularRead_f32((int32_t *) py, delaySize, &readIndex, 1,\n  362                           (int32_t *) pb, (int32_t *) pb, blockSize, 1,\n  363                           blockSize);\n  ...\n  391      if (readIndex < 0)\n  392      {\n  393:       readIndex += (int32_t) delaySize;\n  394      }\n  395  \n  ...\n  404  \n  405  \t/* blockSize samples are read from the state buffer */\n  406: \tarm_circularRead_f32((int32_t *) py, delaySize, &readIndex, 1,\n  407  \t\t\t\t\t\t\t\t\t\t\t (int32_t *) pb, (int32_t *) pb, blockSize, 1,\n  408  \t\t\t\t\t\t\t\t\t\t\t blockSize);\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_init_f32.c:\n   54   * <code>pState</code> holds the filter's state variables and must be of length\n   55   * <code>maxDelay + blockSize</code>, where <code>maxDelay</code>\n   56:  * is the maximum number of delay line values.\n   57   * <code>blockSize</code> is the\n   58   * number of samples processed by the <code>arm_fir_sparse_f32()</code> function.\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_init_q15.c:\n   54   * <code>pState</code> holds the filter's state variables and must be of length\n   55   * <code>maxDelay + blockSize</code>, where <code>maxDelay</code>\n   56:  * is the maximum number of delay line values.\n   57   * <code>blockSize</code> is the\n   58   * number of words processed by <code>arm_fir_sparse_q15()</code> function.\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_init_q31.c:\n   54   * <code>pState</code> holds the filter's state variables and must be of length\n   55   * <code>maxDelay + blockSize</code>, where <code>maxDelay</code>\n   56:  * is the maximum number of delay line values.\n   57   * <code>blockSize</code> is the number of words processed by <code>arm_fir_sparse_q31()</code> function.\n   58   */\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_init_q7.c:\n   54   * <code>pState</code> holds the filter's state variables and must be of length\n   55   * <code>maxDelay + blockSize</code>, where <code>maxDelay</code>\n   56:  * is the maximum number of delay line values.\n   57   * <code>blockSize</code> is the\n   58   * number of samples processed by the <code>arm_fir_sparse_q7()</code> function.\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q15.c:\n   72    q15_t *py = pState;                            /* Temporary pointers for state buffer */\n   73    int32_t *pTapDelay = S->pTapDelay;             /* Pointer to the array containing offset of the non-zero tap values. */\n   74:   uint32_t delaySize = S->maxDelay + blockSize;  /* state length */\n   75    uint16_t numTaps = S->numTaps;                 /* Filter order */\n   76    int32_t readIndex;                             /* Read index of the state buffer */\n   ..\n   89    /* BlockSize of Input samples are copied into the state buffer */\n   90    /* StateIndex points to the starting position to write in the state buffer */\n   91:   arm_circularWrite_q15(py, delaySize, &S->stateIndex, 1, pIn, 1, blockSize);\n   92  \n   93    /* Loop over the number of taps. */\n   ..\n  100    if (readIndex < 0)\n  101    {\n  102:     readIndex += (int32_t) delaySize;\n  103    }\n  104  \n  ...\n  107  \n  108    /* blockSize samples are read from the state buffer */\n  109:   arm_circularRead_q15(py, delaySize, &readIndex, 1,\n  110                         pb, pb, blockSize, 1, blockSize);\n  111  \n  ...\n  155    if (readIndex < 0)\n  156    {\n  157:     readIndex += (int32_t) delaySize;\n  158    }\n  159  \n  ...\n  167  \n  168      /* blockSize samples are read from the state buffer */\n  169:     arm_circularRead_q15(py, delaySize, &readIndex, 1,\n  170                           pb, pb, blockSize, 1, blockSize);\n  171  \n  ...\n  215      if (readIndex < 0)\n  216      {\n  217:       readIndex += (int32_t) delaySize;\n  218      }\n  219  \n  ...\n  228  \n  229  \t/* blockSize samples are read from the state buffer */\n  230: \tarm_circularRead_q15(py, delaySize, &readIndex, 1,\n  231  \t\t\t\t\t\t\t\t\t\t\t pb, pb, blockSize, 1, blockSize);\n  232  \n  ...\n  328    /* BlockSize of Input samples are copied into the state buffer */\n  329    /* StateIndex points to the starting position to write in the state buffer */\n  330:   arm_circularWrite_q15(py, delaySize, &S->stateIndex, 1, pIn, 1, blockSize);\n  331  \n  332    /* Loop over the number of taps. */\n  ...\n  339    if (readIndex < 0)\n  340    {\n  341:     readIndex += (int32_t) delaySize;\n  342    }\n  343  \n  ...\n  346  \n  347    /* blockSize samples are read from the state buffer */\n  348:   arm_circularRead_q15(py, delaySize, &readIndex, 1,\n  349                         pb, pb, blockSize, 1, blockSize);\n  350  \n  ...\n  376    if (readIndex < 0)\n  377    {\n  378:     readIndex += (int32_t) delaySize;\n  379    }\n  380  \n  ...\n  388  \n  389      /* blockSize samples are read from the state buffer */\n  390:     arm_circularRead_q15(py, delaySize, &readIndex, 1,\n  391                           pb, pb, blockSize, 1, blockSize);\n  392  \n  ...\n  418      if (readIndex < 0)\n  419      {\n  420:       readIndex += (int32_t) delaySize;\n  421      }\n  422  \n  ...\n  431  \n  432  \t/* blockSize samples are read from the state buffer */\n  433: \tarm_circularRead_q15(py, delaySize, &readIndex, 1,\n  434  \t\t\t\t\t\t\t\t\t\t\t pb, pb, blockSize, 1, blockSize);\n  435  \n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q31.c:\n   69    q63_t out;                                     /* Temporary output variable */\n   70    int32_t *pTapDelay = S->pTapDelay;             /* Pointer to the array containing offset of the non-zero tap values. */\n   71:   uint32_t delaySize = S->maxDelay + blockSize;  /* state length */\n   72    uint16_t numTaps = S->numTaps;                 /* Filter order */\n   73    int32_t readIndex;                             /* Read index of the state buffer */\n   ..\n   79    /* BlockSize of Input samples are copied into the state buffer */\n   80    /* StateIndex points to the starting position to write in the state buffer */\n   81:   arm_circularWrite_f32((int32_t *) py, delaySize, &S->stateIndex, 1,\n   82                          (int32_t *) pSrc, 1, blockSize);\n   83  \n   ..\n   88    if (readIndex < 0)\n   89    {\n   90:     readIndex += (int32_t) delaySize;\n   91    }\n   92  \n   ..\n   95  \n   96    /* blockSize samples are read from the state buffer */\n   97:   arm_circularRead_f32((int32_t *) py, delaySize, &readIndex, 1,\n   98                         (int32_t *) pb, (int32_t *) pb, blockSize, 1,\n   99                         blockSize);\n  ...\n  149    if (readIndex < 0)\n  150    {\n  151:     readIndex += (int32_t) delaySize;\n  152    }\n  153  \n  ...\n  161  \n  162      /* blockSize samples are read from the state buffer */\n  163:     arm_circularRead_f32((int32_t *) py, delaySize, &readIndex, 1,\n  164                           (int32_t *) pb, (int32_t *) pb, blockSize, 1,\n  165                           blockSize);\n  ...\n  222      if (readIndex < 0)\n  223      {\n  224:       readIndex += (int32_t) delaySize;\n  225      }\n  226  \n  ...\n  235  \n  236  \t/* blockSize samples are read from the state buffer */\n  237: \tarm_circularRead_f32((int32_t *) py, delaySize, &readIndex, 1,\n  238  \t\t\t\t\t\t\t\t\t\t\t (int32_t *) pb, (int32_t *) pb, blockSize, 1,\n  239  \t\t\t\t\t\t\t\t\t\t\t blockSize);\n  ...\n  346    if (readIndex < 0)\n  347    {\n  348:     readIndex += (int32_t) delaySize;\n  349    }\n  350  \n  ...\n  358  \n  359      /* blockSize samples are read from the state buffer */\n  360:     arm_circularRead_f32((int32_t *) py, delaySize, &readIndex, 1,\n  361                           (int32_t *) pb, (int32_t *) pb, blockSize, 1,\n  362                           blockSize);\n  ...\n  391      if (readIndex < 0)\n  392      {\n  393:       readIndex += (int32_t) delaySize;\n  394      }\n  395  \n  ...\n  404  \n  405  \t/* blockSize samples are read from the state buffer */\n  406: \tarm_circularRead_f32((int32_t *) py, delaySize, &readIndex, 1,\n  407  \t\t\t\t\t\t\t\t\t\t\t (int32_t *) pb, (int32_t *) pb, blockSize, 1,\n  408  \t\t\t\t\t\t\t\t\t\t\t blockSize);\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c:\n   76    q7_t *pOut = pDst;                             /* Destination pointer */\n   77    int32_t *pTapDelay = S->pTapDelay;             /* Pointer to the array containing offset of the non-zero tap values. */\n   78:   uint32_t delaySize = S->maxDelay + blockSize;  /* state length */\n   79    uint16_t numTaps = S->numTaps;                 /* Filter order */\n   80    int32_t readIndex;                             /* Read index of the state buffer */\n   ..\n   93    /* BlockSize of Input samples are copied into the state buffer */\n   94    /* StateIndex points to the starting position to write in the state buffer */\n   95:   arm_circularWrite_q7(py, (int32_t) delaySize, &S->stateIndex, 1, pSrc, 1,\n   96                         blockSize);\n   97  \n   ..\n  105    if (readIndex < 0)\n  106    {\n  107:     readIndex += (int32_t) delaySize;\n  108    }\n  109  \n  ...\n  112  \n  113    /* blockSize samples are read from the state buffer */\n  114:   arm_circularRead_q7(py, (int32_t) delaySize, &readIndex, 1, pb, pb,\n  115                        (int32_t) blockSize, 1, blockSize);\n  116  \n  ...\n  160    if (readIndex < 0)\n  161    {\n  162:     readIndex += (int32_t) delaySize;\n  163    }\n  164  \n  ...\n  172  \n  173      /* blockSize samples are read from the state buffer */\n  174:     arm_circularRead_q7(py, (int32_t) delaySize, &readIndex, 1, pb, pb,\n  175                          (int32_t) blockSize, 1, blockSize);\n  176  \n  ...\n  226      if (readIndex < 0)\n  227      {\n  228:       readIndex += (int32_t) delaySize;\n  229      }\n  230  \n  ...\n  239  \n  240  \t/* blockSize samples are read from the state buffer */\n  241: \tarm_circularRead_q7(py, (int32_t) delaySize, &readIndex, 1, pb, pb,\n  242  \t\t\t\t\t\t\t\t\t\t\t(int32_t) blockSize, 1, blockSize);\n  243  \n  ...\n  318    /* BlockSize of Input samples are copied into the state buffer */\n  319    /* StateIndex points to the starting position to write in the state buffer */\n  320:   arm_circularWrite_q7(py, (int32_t) delaySize, &S->stateIndex, 1, pSrc, 1,\n  321                         blockSize);\n  322  \n  ...\n  330    if (readIndex < 0)\n  331    {\n  332:     readIndex += (int32_t) delaySize;\n  333    }\n  334  \n  ...\n  337  \n  338    /* blockSize samples are read from the state buffer */\n  339:   arm_circularRead_q7(py, (int32_t) delaySize, &readIndex, 1, pb, pb,\n  340                        (int32_t) blockSize, 1, blockSize);\n  341  \n  ...\n  368    if (readIndex < 0)\n  369    {\n  370:     readIndex += (int32_t) delaySize;\n  371    }\n  372  \n  ...\n  380  \n  381      /* blockSize samples are read from the state buffer */\n  382:     arm_circularRead_q7(py, (int32_t) delaySize, &readIndex, 1, pb, pb,\n  383                          (int32_t) blockSize, 1, blockSize);\n  384  \n  ...\n  413      if (readIndex < 0)\n  414      {\n  415:       readIndex += (int32_t) delaySize;\n  416      }\n  417  \n  ...\n  426  \n  427  \t/* blockSize samples are read from the state buffer */\n  428: \tarm_circularRead_q7(py, (int32_t) delaySize, &readIndex, 1, pb, pb,\n  429  \t\t\t\t\t\t\t\t\t\t\t(int32_t) blockSize, 1, blockSize);\n  430  \n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/CMSIS/RTOS/Template/cmsis_os.h:\n  328   \n  329  /// Wait for Timeout (Time Delay).\n  330: /// \\param[in]     millisec      \\ref CMSIS_RTOS_TimeOutValue \"time delay\" value\n  331  /// \\return status code that indicates the execution status of the function.\n  332  osStatus osDelay (uint32_t millisec);\n  ...\n  375  /// Start or restart a timer.\n  376  /// \\param[in]     timer_id      timer ID obtained by \\ref osTimerCreate.\n  377: /// \\param[in]     millisec      \\ref CMSIS_RTOS_TimeOutValue \"time delay\" value of the timer.\n  378  /// \\return status code that indicates the execution status of the function.\n  379  /// \\note MUST REMAIN UNCHANGED: \\b osTimerStart shall be consistent in every CMSIS-RTOS.\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/CMSIS/RTOS2/Template/cmsis_os.h:\n  543   \n  544  /// Wait for Timeout (Time Delay).\n  545: /// \\param[in]     millisec      \\ref CMSIS_RTOS_TimeOutValue \"time delay\" value\n  546  /// \\return status code that indicates the execution status of the function.\n  547  #if (osCMSIS < 0x20000U)\n  ...\n  596  /// Start or restart a timer.\n  597  /// \\param[in]     timer_id      timer ID obtained by \\ref osTimerCreate.\n  598: /// \\param[in]     millisec      \\ref CMSIS_RTOS_TimeOutValue \"time delay\" value of the timer.\n  599  /// \\return status code that indicates the execution status of the function.\n  600  #if (osCMSIS < 0x20000U)\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_adc.h:\n 1173  \n 1174  /* Delay for temperature sensor stabilization time.                         */\n 1175: /* Maximum delay is 120us (refer device datasheet, parameter tSTART).       */\n 1176  /* Unit: us                                                                 */\n 1177  #define ADC_TEMPSENSOR_DELAY_US         (LL_ADC_DELAY_TEMPSENSOR_STAB_US)\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_adc_ex.h:\n  337    * @{\n  338    */\n  339: #define ADC_TWOSAMPLINGDELAY_1CYCLE        (LL_ADC_MULTI_TWOSMP_DELAY_1CYCLE)   /*!< ADC multimode delay between two sampling phases: 1 ADC clock cycle */\n  340: #define ADC_TWOSAMPLINGDELAY_2CYCLES       (LL_ADC_MULTI_TWOSMP_DELAY_2CYCLES)  /*!< ADC multimode delay between two sampling phases: 2 ADC clock cycles */\n  341: #define ADC_TWOSAMPLINGDELAY_3CYCLES       (LL_ADC_MULTI_TWOSMP_DELAY_3CYCLES)  /*!< ADC multimode delay between two sampling phases: 3 ADC clock cycles */\n  342: #define ADC_TWOSAMPLINGDELAY_4CYCLES       (LL_ADC_MULTI_TWOSMP_DELAY_4CYCLES)  /*!< ADC multimode delay between two sampling phases: 4 ADC clock cycles */\n  343: #define ADC_TWOSAMPLINGDELAY_5CYCLES       (LL_ADC_MULTI_TWOSMP_DELAY_5CYCLES)  /*!< ADC multimode delay between two sampling phases: 5 ADC clock cycles */\n  344: #define ADC_TWOSAMPLINGDELAY_6CYCLES       (LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES)  /*!< ADC multimode delay between two sampling phases: 6 ADC clock cycles */\n  345: #define ADC_TWOSAMPLINGDELAY_7CYCLES       (LL_ADC_MULTI_TWOSMP_DELAY_7CYCLES)  /*!< ADC multimode delay between two sampling phases: 7 ADC clock cycles */\n  346: #define ADC_TWOSAMPLINGDELAY_8CYCLES       (LL_ADC_MULTI_TWOSMP_DELAY_8CYCLES)  /*!< ADC multimode delay between two sampling phases: 8 ADC clock cycles */\n  347: #define ADC_TWOSAMPLINGDELAY_9CYCLES       (LL_ADC_MULTI_TWOSMP_DELAY_9CYCLES)  /*!< ADC multimode delay between two sampling phases: 9 ADC clock cycles */\n  348: #define ADC_TWOSAMPLINGDELAY_10CYCLES      (LL_ADC_MULTI_TWOSMP_DELAY_10CYCLES) /*!< ADC multimode delay between two sampling phases: 10 ADC clock cycles */\n  349: #define ADC_TWOSAMPLINGDELAY_11CYCLES      (LL_ADC_MULTI_TWOSMP_DELAY_11CYCLES) /*!< ADC multimode delay between two sampling phases: 11 ADC clock cycles */\n  350: #define ADC_TWOSAMPLINGDELAY_12CYCLES      (LL_ADC_MULTI_TWOSMP_DELAY_12CYCLES) /*!< ADC multimode delay between two sampling phases: 12 ADC clock cycles */\n  351  /**\n  352    * @}\n  ...\n  514  \n  515  /**\n  516:   * @brief Configure the ADC auto delay mode.\n  517:   * @param __AUTOWAIT__ Auto delay bit enable or disable.\n  518    * @retval None\n  519    */\n  ...\n 1085  \n 1086  /**\n 1087:   * @brief Verify the ADC multimode delay setting.\n 1088:   * @param __DELAY__ programmed ADC multimode delay setting.\n 1089    * @retval SET (__DELAY__ is a valid value) or RESET (__DELAY__ is invalid)\n 1090    */\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_hrtim.h:\n  313                                          This parameter can be a value of @ref HRTIM_Timer_Deadtime_Insertion */\n  314    uint32_t DelayedProtectionMode;  /*!< Relevant for Timer A to Timer F.\n  315:                                         Specifies the delayed protection mode.\n  316                                          This parameter can be a value of @ref HRTIM_Timer_Delayed_Protection_Mode */\n  317    uint32_t BalancedIdleAutomaticResume; /*!< Indicates whether or not outputs are automatically re-enabled after a balanced idle event.\n  ...\n  367                                        The minimum value must be greater than or equal to 3 periods of the fHRTIM clock.\n  368                                        The maximum value must be less than or equal to 0xFFFFU - 1 periods of the fHRTIM clock */\n  369:   uint32_t AutoDelayedMode;      /*!< Specifies the auto delayed mode for compare unit 2 or 4.\n  370                                        This parameter can be a value of @ref HRTIM_Compare_Unit_Auto_Delayed_Mode */\n  371:   uint32_t AutoDelayedTimeout;   /*!< Specifies compare value for timing unit 1 or 3 when auto delayed mode with time out is selected.\n  372                                        CompareValue +  AutoDelayedTimeout must be less than 0xFFFFU */\n  373  } HRTIM_CompareCfgTypeDef;\n  ...\n 1026  /** @defgroup HRTIM_Timer_Delayed_Protection_Mode HRTIM Timer Delayed Protection Mode\n 1027    * @{\n 1028:   * @brief Constants defining all possible delayed protection modes\n 1029:   *        for a timer. Also define the source and outputs on which the delayed\n 1030    *        protection schemes are applied\n 1031    */\n 1032  #define HRTIM_TIMER_A_B_C_DELAYEDPROTECTION_DISABLED          (0x00000000U)                                                                           /*!< No action */\n 1033: #define HRTIM_TIMER_A_B_C_DELAYEDPROTECTION_DELAYEDOUT1_EEV6  (HRTIM_OUTR_DLYPRTEN)                                                                   /*!< Timers A, B, C: Output 1 delayed Idle on external Event 6U */\n 1034: #define HRTIM_TIMER_A_B_C_DELAYEDPROTECTION_DELAYEDOUT2_EEV6  (HRTIM_OUTR_DLYPRT_0 | HRTIM_OUTR_DLYPRTEN)                                             /*!< Timers A, B, C: Output 2 delayed Idle on external Event 6U */\n 1035: #define HRTIM_TIMER_A_B_C_DELAYEDPROTECTION_DELAYEDBOTH_EEV6  (HRTIM_OUTR_DLYPRT_1 | HRTIM_OUTR_DLYPRTEN)                                             /*!< Timers A, B, C: Output 1 and output 2 delayed Idle on external Event 6U */\n 1036  #define HRTIM_TIMER_A_B_C_DELAYEDPROTECTION_BALANCED_EEV6     (HRTIM_OUTR_DLYPRT_1 | HRTIM_OUTR_DLYPRT_0 | HRTIM_OUTR_DLYPRTEN)                       /*!< Timers A, B, C: Balanced Idle on external Event 6U */\n 1037: #define HRTIM_TIMER_A_B_C_DELAYEDPROTECTION_DELAYEDOUT1_DEEV7 (HRTIM_OUTR_DLYPRT_2 | HRTIM_OUTR_DLYPRTEN)                                             /*!< Timers A, B, C: Output 1 delayed Idle on external Event 7U */\n 1038: #define HRTIM_TIMER_A_B_C_DELAYEDPROTECTION_DELAYEDOUT2_DEEV7 (HRTIM_OUTR_DLYPRT_2 | HRTIM_OUTR_DLYPRT_0 | HRTIM_OUTR_DLYPRTEN)                       /*!< Timers A, B, C: Output 2 delayed Idle on external Event 7U */\n 1039: #define HRTIM_TIMER_A_B_C_DELAYEDPROTECTION_DELAYEDBOTH_EEV7  (HRTIM_OUTR_DLYPRT_2 | HRTIM_OUTR_DLYPRT_1 | HRTIM_OUTR_DLYPRTEN)                       /*!< Timers A, B, C: Output 1 and output2 delayed Idle on external Event 7U */\n 1040  #define HRTIM_TIMER_A_B_C_DELAYEDPROTECTION_BALANCED_EEV7     (HRTIM_OUTR_DLYPRT_2 | HRTIM_OUTR_DLYPRT_1 | HRTIM_OUTR_DLYPRT_0 | HRTIM_OUTR_DLYPRTEN) /*!< Timers A, B, C: Balanced Idle on external Event 7U */\n 1041  \n 1042  #define HRTIM_TIMER_D_E_DELAYEDPROTECTION_DISABLED            (0x00000000U)                                                                             /*!< No action */\n 1043: #define HRTIM_TIMER_D_E_DELAYEDPROTECTION_DELAYEDOUT1_EEV8    (HRTIM_OUTR_DLYPRTEN)                                                                     /*!< Timers D, E: Output 1 delayed Idle on external Event 6U */\n 1044: #define HRTIM_TIMER_D_E_DELAYEDPROTECTION_DELAYEDOUT2_EEV8    (HRTIM_OUTR_DLYPRT_0 | HRTIM_OUTR_DLYPRTEN)                                               /*!< Timers D, E: Output 2 delayed Idle on external Event 6U */\n 1045: #define HRTIM_TIMER_D_E_DELAYEDPROTECTION_DELAYEDBOTH_EEV8    (HRTIM_OUTR_DLYPRT_1 | HRTIM_OUTR_DLYPRTEN)                                               /*!< Timers D, E: Output 1 and output 2 delayed Idle on external Event 6U */\n 1046  #define HRTIM_TIMER_D_E_DELAYEDPROTECTION_BALANCED_EEV8       (HRTIM_OUTR_DLYPRT_1 | HRTIM_OUTR_DLYPRT_0 | HRTIM_OUTR_DLYPRTEN)                         /*!< Timers D, E: Balanced Idle on external Event 6U */\n 1047: #define HRTIM_TIMER_D_E_DELAYEDPROTECTION_DELAYEDOUT1_DEEV9   (HRTIM_OUTR_DLYPRT_2 | HRTIM_OUTR_DLYPRTEN)                                               /*!< Timers D, E: Output 1 delayed Idle on external Event 7U */\n 1048: #define HRTIM_TIMER_D_E_DELAYEDPROTECTION_DELAYEDOUT2_DEEV9   (HRTIM_OUTR_DLYPRT_2 | HRTIM_OUTR_DLYPRT_0 | HRTIM_OUTR_DLYPRTEN)                         /*!< Timers D, E: Output 2 delayed Idle on external Event 7U */\n 1049: #define HRTIM_TIMER_D_E_DELAYEDPROTECTION_DELAYEDBOTH_EEV9    (HRTIM_OUTR_DLYPRT_2 | HRTIM_OUTR_DLYPRT_1 | HRTIM_OUTR_DLYPRTEN)                         /*!< Timers D, E: Output 1 and output2 delayed Idle on external Event 7U */\n 1050  #define HRTIM_TIMER_D_E_DELAYEDPROTECTION_BALANCED_EEV9       (HRTIM_OUTR_DLYPRT_2 | HRTIM_OUTR_DLYPRT_1 | HRTIM_OUTR_DLYPRT_0 | HRTIM_OUTR_DLYPRTEN)   /*!< Timers D, E: Balanced Idle on external Event 7U */\n 1051  \n 1052  #define HRTIM_TIMER_F_DELAYEDPROTECTION_DISABLED              (0x00000000U)                                                                             /*!< No action */\n 1053: #define HRTIM_TIMER_F_DELAYEDPROTECTION_DELAYEDOUT1_EEV8      (HRTIM_OUTR_DLYPRTEN)                                                                     /*!< Timers F: Output 1 delayed Idle on external Event 6U */\n 1054: #define HRTIM_TIMER_F_DELAYEDPROTECTION_DELAYEDOUT2_EEV8      (HRTIM_OUTR_DLYPRT_0 | HRTIM_OUTR_DLYPRTEN)                                               /*!< Timers F: Output 2 delayed Idle on external Event 6U */\n 1055: #define HRTIM_TIMER_F_DELAYEDPROTECTION_DELAYEDBOTH_EEV8      (HRTIM_OUTR_DLYPRT_1 | HRTIM_OUTR_DLYPRTEN)                                               /*!< Timers F: Output 1 and output 2 delayed Idle on external Event 6U */\n 1056  #define HRTIM_TIMER_F_DELAYEDPROTECTION_BALANCED_EEV8         (HRTIM_OUTR_DLYPRT_1 | HRTIM_OUTR_DLYPRT_0 | HRTIM_OUTR_DLYPRTEN)                         /*!< Timers F: Balanced Idle on external Event 6U */\n 1057: #define HRTIM_TIMER_F_DELAYEDPROTECTION_DELAYEDOUT1_DEEV9     (HRTIM_OUTR_DLYPRT_2 | HRTIM_OUTR_DLYPRTEN)                                               /*!< Timers F: Output 1 delayed Idle on external Event 7U */\n 1058: #define HRTIM_TIMER_F_DELAYEDPROTECTION_DELAYEDOUT2_DEEV9     (HRTIM_OUTR_DLYPRT_2 | HRTIM_OUTR_DLYPRT_0 | HRTIM_OUTR_DLYPRTEN)                         /*!< Timers F: Output 2 delayed Idle on external Event 7U */\n 1059: #define HRTIM_TIMER_F_DELAYEDPROTECTION_DELAYEDBOTH_EEV9      (HRTIM_OUTR_DLYPRT_2 | HRTIM_OUTR_DLYPRT_1 | HRTIM_OUTR_DLYPRTEN)                         /*!< Timers F: Output 1 and output2 delayed Idle on external Event 7U */\n 1060  #define HRTIM_TIMER_F_DELAYEDPROTECTION_BALANCED_EEV9         (HRTIM_OUTR_DLYPRT_2 | HRTIM_OUTR_DLYPRT_1 | HRTIM_OUTR_DLYPRT_0 | HRTIM_OUTR_DLYPRTEN)   /*!< Timers F: Balanced Idle on external Event 7U */\n 1061  /**\n ....\n 1170    * @brief Constants defining whether the compare register is behaving in\n 1171    *        regular mode (compare match issued as soon as counter equal compare),\n 1172:   *        or in auto-delayed mode\n 1173    */\n 1174  #define HRTIM_AUTODELAYEDMODE_REGULAR                 (0x00000000U)                                   /*!< standard compare mode */\n ....\n 1437  /** @defgroup HRTIM_Output_Burst_Mode_Entry_Delayed HRTIM Output Burst Mode Entry Delayed\n 1438    * @{\n 1439:   * @brief Constants defining the idle mode entry is delayed by forcing a\n 1440             dead-time insertion before switching the outputs to their idle state\n 1441    */\n ....\n 1591    */\n 1592  #define HRTIM_TIMEVENTLATCH_DISABLED    (0x00000000U)           /*!< Event is ignored if it happens during a blank, or passed through during a window */\n 1593: #define HRTIM_TIMEVENTLATCH_ENABLED     HRTIM_EEFR1_EE1LTCH     /*!< Event is latched and delayed till the end of the blanking or windowing period */\n 1594  /**\n 1595    * @}\n ....\n 2527    * @{\n 2528    * @brief Constants defining on which output the signal was applied, in\n 2529:   *        push-pull mode balanced fault mode or delayed idle mode, when the\n 2530    *        protection was triggered\n 2531    */\n ....\n 2585  #define HRTIM_TIM_IT_RST2       HRTIM_TIMDIER_RST2IE      /*!< Timer output 2 reset interrupt enable */\n 2586  #define HRTIM_TIM_IT_RST        HRTIM_TIMDIER_RSTIE       /*!< Timer reset interrupt enable */\n 2587: #define HRTIM_TIM_IT_DLYPRT     HRTIM_TIMDIER_DLYPRTIE    /*!< Timer delay protection interrupt enable */\n 2588  /**\n 2589    * @}\n ....\n 2636  #define HRTIM_TIM_FLAG_RST2       HRTIM_TIMISR_RST2      /*!< Timer output 2 reset interrupt flag */\n 2637  #define HRTIM_TIM_FLAG_RST        HRTIM_TIMISR_RST       /*!< Timer reset interrupt flag */\n 2638: #define HRTIM_TIM_FLAG_DLYPRT     HRTIM_TIMISR_DLYPRT    /*!< Timer delay protection interrupt flag */\n 2639  /**\n 2640    * @}\n ....\n 2673  #define HRTIM_TIM_DMA_RST2       HRTIM_TIMDIER_RST2DE      /*!< Timer output 2 reset DMA request enable */\n 2674  #define HRTIM_TIM_DMA_RST        HRTIM_TIMDIER_RSTDE       /*!< Timer reset DMA request enable */\n 2675: #define HRTIM_TIM_DMA_DLYPRT     HRTIM_TIMDIER_DLYPRTDE    /*!< Timer delay protection DMA request enable */\n 2676  /**\n 2677    * @}\n ....\n 2945                 ((AUTODELAYEDMODE) == HRTIM_AUTODELAYEDMODE_AUTODELAYED_TIMEOUTCMP3))\n 2946  \n 2947: /* Auto delayed mode is only available for compare units 2 and 4U */\n 2948  #define IS_HRTIM_COMPAREUNIT_AUTODELAYEDMODE(COMPAREUNIT, AUTODELAYEDMODE)     \\\n 2949      ((((COMPAREUNIT) == HRTIM_COMPAREUNIT_2) &&                                 \\\n ....\n 4246    *            @arg HRTIM_TIM_IT_RST2: Timer output 2 reset interrupt enable\n 4247    *            @arg HRTIM_TIM_IT_RST: Timer reset interrupt enable\n 4248:   *            @arg HRTIM_TIM_IT_DLYPRT: Timer delay protection interrupt enable\n 4249    * @retval None\n 4250    */\n ....\n 4309    *            @arg HRTIM_TIM_IT_RST2: Timer output 2 reset interrupt enable\n 4310    *            @arg HRTIM_TIM_IT_RST: Timer reset interrupt enable\n 4311:   *            @arg HRTIM_TIM_IT_DLYPRT: Timer delay protection interrupt enable\n 4312    * @retval The new state of __INTERRUPT__ (TRUE or FALSE).\n 4313    */\n ....\n 4364    *            @arg HRTIM_TIM_IT_RST2: Timer output 2 reset interrupt clear flag\n 4365    *            @arg HRTIM_TIM_IT_RST: Timer reset interrupt clear flag\n 4366:   *            @arg HRTIM_TIM_IT_DLYPRT: Timer output 1 delay protection interrupt clear flag\n 4367    * @retval None\n 4368    */\n ....\n 4404    *            @arg HRTIM_TIM_DMA_RST2: Timer output 2 reset DMA request enable\n 4405    *            @arg HRTIM_TIM_DMA_RST: Timer reset DMA request enable\n 4406:   *            @arg HRTIM_TIM_DMA_DLYPRT: Timer delay protection DMA request enable\n 4407    * @retval None\n 4408    */\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_qspi.h:\n   53    uint32_t FifoThreshold;      /* Specifies the threshold number of bytes in the FIFO (used only in indirect mode)\n   54                                    This parameter can be a value between 1 and 16 */\n   55:   uint32_t SampleShifting;     /* Specifies the Sample Shift. The data is sampled 1/2 clock cycle delay later to\n   56:                                   take in account external signal delays. (It should be QSPI_SAMPLE_SHIFTING_NONE in DDR mode)\n   57                                    This parameter can be a value of @ref QSPI_SampleShifting */\n   58    uint32_t FlashSize;          /* Specifies the Flash Size. FlashSize+1 is effectively the number of address bits\n   ..\n  157    uint32_t DdrMode;            /* Specifies the double data rate mode for address, alternate byte and data phase\n  158                                    This parameter can be a value of @ref QSPI_DdrMode */\n  159:   uint32_t DdrHoldHalfCycle;   /* Specifies if the DDR hold is enabled. When enabled it delays the data\n  160                                    output by one quarter of QUADSPI output clock in DDR mode.\n  161                                    This parameter can be a value of @ref QSPI_DdrHoldHalfCycle */\n  ...\n  373    * @{\n  374    */\n  375: #define QSPI_DDR_HHC_ANALOG_DELAY      0x00000000U                  /*!<Delay the data output using analog delay in DDR mode*/\n  376  #define QSPI_DDR_HHC_HALF_CLK_DELAY    ((uint32_t)QUADSPI_CCR_DHHC) /*!<Delay the data output by one quarter of QUADSPI output clock in DDR mode*/\n  377  /**\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_sai_ex.h:\n   43  \n   44  /**\n   45:   * @brief  PDM microphone delay structure definition\n   46    */\n   47  typedef struct\n   ..\n   50                               This parameter must be a number between Min_Data = 1 and Max_Data = 3. */\n   51  \n   52:   uint32_t LeftDelay;   /*!< Specifies the delay in PDM clock unit to apply on left microphone.\n   53                               This parameter must be a number between Min_Data = 0 and Max_Data = 7. */\n   54  \n   55:   uint32_t RightDelay;  /*!< Specifies the delay in PDM clock unit to apply on right microphone.\n   56                               This parameter must be a number between Min_Data = 0 and Max_Data = 7. */\n   57  } SAIEx_PdmMicDelayParamTypeDef;\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_tim.h:\n  245                                          This parameter can be a value of @ref TIM_Master_Slave_Mode\n  246                                          @note When the Master/slave mode is enabled, the effect of\n  247:                                         an event on the trigger input (TRGI) is delayed to allow a\n  248                                          perfect synchronization between the current timer and its\n  249                                          slaves (through TRGO). It is not mandatory in case of timer\n  ...\n 1672    * @note  When fast mode is disabled CCx output behaves normally depending\n 1673    *        on counter and CCRx values even when the trigger is ON. The minimum\n 1674:   *        delay to activate CCx output when an active edge occurs on the\n 1675    *        trigger input is 5 clock cycles.\n 1676    * @retval None\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_tim_ex.h:\n  605  \n  606  /**\n  607:   * @brief  HELPER macro calculating the compare value required to achieve the required timer output compare active/inactive delay.\n  608    * @note   ex: @ref __HAL_TIM_CALC_PULSE(1000000, 0, 10);\n  609    * @param  __TIMCLK__ timer input clock frequency (in Hz)\n  610    * @param  __PSC__ prescaler\n  611:   * @param  __DELAY__ timer output compare active/inactive delay (in us)\n  612    * @retval Compare value  (between Min_Data=0 and Max_Data=65535)\n  613    */\n  ...\n  617  \n  618  /**\n  619:   * @brief  HELPER macro calculating the compare value, with dithering feature enabled, to achieve the required timer output compare active/inactive delay.\n  620    * @note   ex: @ref __HAL_TIM_CALC_PULSE_DITHER(1000000, 0, 10);\n  621    * @note   This macro should be used only if ditehring is already enabled\n  622    * @param  __TIMCLK__ timer input clock frequency (in Hz)\n  623    * @param  __PSC__ prescaler\n  624:   * @param  __DELAY__ timer output compare active/inactive delay (in us)\n  625    * @retval Compare value  (between Min_Data=0 and Max_Data=65519)\n  626    */\n  ...\n  634    * @param  __TIMCLK__ timer input clock frequency (in Hz)\n  635    * @param  __PSC__ prescaler\n  636:   * @param  __DELAY__ timer output compare active/inactive delay (in us)\n  637    * @param  __PULSE__ pulse duration (in us)\n  638    * @retval Auto-reload value  (between Min_Data=0 and Max_Data=65535)\n  ...\n  648    * @param  __TIMCLK__ timer input clock frequency (in Hz)\n  649    * @param  __PSC__ prescaler\n  650:   * @param  __DELAY__ timer output compare active/inactive delay (in us)\n  651    * @param  __PULSE__ pulse duration (in us)\n  652    * @retval Auto-reload value  (between Min_Data=0 and Max_Data=65519)\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h:\n  412                                               This feature can be modified afterwards using unitary function @ref LL_ADC_SetMultiDMATransfer(). */\n  413  \n  414:   uint32_t MultiTwoSamplingDelay;       /*!< Set ADC multimode delay between 2 sampling phases.\n  415                                               This parameter can be a value of @ref ADC_LL_EC_MULTI_TWOSMP_DELAY\n  416  \n  ...\n  716    */\n  717  #define LL_ADC_LP_MODE_NONE                (0x00000000UL)                      /*!< No ADC low power mode activated */\n  718: #define LL_ADC_LP_AUTOWAIT                 (ADC_CFGR_AUTDLY)                   /*!< ADC low power mode auto delay: Dynamic low power mode, ADC conversions are performed only when necessary (when previous ADC conversion data is read). See description with function @ref LL_ADC_SetLowPowerMode(). */\n  719  /**\n  720    * @}\n  ...\n 1457    * @{\n 1458    */\n 1459: #define LL_ADC_MULTI_TWOSMP_DELAY_1CYCLE   (0x00000000UL)                                                          /*!< ADC multimode delay between two sampling phases: 1 ADC clock cycle */\n 1460: #define LL_ADC_MULTI_TWOSMP_DELAY_2CYCLES  (                                                      ADC_CCR_DELAY_0) /*!< ADC multimode delay between two sampling phases: 2 ADC clock cycles */\n 1461: #define LL_ADC_MULTI_TWOSMP_DELAY_3CYCLES  (                                    ADC_CCR_DELAY_1                  ) /*!< ADC multimode delay between two sampling phases: 3 ADC clock cycles */\n 1462: #define LL_ADC_MULTI_TWOSMP_DELAY_4CYCLES  (                                    ADC_CCR_DELAY_1 | ADC_CCR_DELAY_0) /*!< ADC multimode delay between two sampling phases: 4 ADC clock cycles */\n 1463: #define LL_ADC_MULTI_TWOSMP_DELAY_5CYCLES  (                  ADC_CCR_DELAY_2                                    ) /*!< ADC multimode delay between two sampling phases: 5 ADC clock cycles */\n 1464: #define LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES  (                  ADC_CCR_DELAY_2                   | ADC_CCR_DELAY_0) /*!< ADC multimode delay between two sampling phases: 6 ADC clock cycles */\n 1465: #define LL_ADC_MULTI_TWOSMP_DELAY_7CYCLES  (                  ADC_CCR_DELAY_2 | ADC_CCR_DELAY_1                  ) /*!< ADC multimode delay between two sampling phases: 7 ADC clock cycles */\n 1466: #define LL_ADC_MULTI_TWOSMP_DELAY_8CYCLES  (                  ADC_CCR_DELAY_2 | ADC_CCR_DELAY_1 | ADC_CCR_DELAY_0) /*!< ADC multimode delay between two sampling phases: 8 ADC clock cycles */\n 1467: #define LL_ADC_MULTI_TWOSMP_DELAY_9CYCLES  (ADC_CCR_DELAY_3                                                      ) /*!< ADC multimode delay between two sampling phases: 9 ADC clock cycles */\n 1468: #define LL_ADC_MULTI_TWOSMP_DELAY_10CYCLES (ADC_CCR_DELAY_3                                     | ADC_CCR_DELAY_0) /*!< ADC multimode delay between two sampling phases: 10 ADC clock cycles */\n 1469: #define LL_ADC_MULTI_TWOSMP_DELAY_11CYCLES (ADC_CCR_DELAY_3                   | ADC_CCR_DELAY_1                  ) /*!< ADC multimode delay between two sampling phases: 11 ADC clock cycles */\n 1470: #define LL_ADC_MULTI_TWOSMP_DELAY_12CYCLES (ADC_CCR_DELAY_3                   | ADC_CCR_DELAY_1 | ADC_CCR_DELAY_0) /*!< ADC multimode delay between two sampling phases: 12 ADC clock cycles */\n 1471  /**\n 1472    * @}\n ....\n 1486  \n 1487  \n 1488: /** @defgroup ADC_LL_EC_HW_DELAYS  Definitions of ADC hardware constraints delays\n 1489:   * @note   Only ADC peripheral HW delays are defined in ADC LL driver driver,\n 1490    *         not timeout values.\n 1491:   *         For details on delays values, refer to descriptions in source code\n 1492    *         above each literal definition.\n 1493    * @{\n 1494    */\n 1495  \n 1496: /* Note: Only ADC peripheral HW delays are defined in ADC LL driver driver,   */\n 1497  /*       not timeout values.                                                  */\n 1498  /*       Timeout values for ADC operations are dependent to device clock      */\n 1499  /*       configuration (system clock versus ADC clock),                       */\n 1500  /*       and therefore must be defined in user application.                   */\n 1501: /*       Indications for estimation of ADC timeout delays, for this           */\n 1502  /*       STM32 serie:                                                         */\n 1503: /*       - ADC calibration time: maximum delay is 112/fADC.                   */\n 1504  /*         (refer to device datasheet, parameter \"tCAL\")                      */\n 1505: /*       - ADC enable time: maximum delay is 1 conversion cycle.              */\n 1506  /*         (refer to device datasheet, parameter \"tSTAB\")                     */\n 1507: /*       - ADC disable time: maximum delay should be a few ADC clock cycles   */\n 1508: /*       - ADC stop conversion time: maximum delay should be a few ADC clock  */\n 1509  /*         cycles                                                             */\n 1510  /*       - ADC conversion time: duration depending on ADC clock and ADC       */\n ....\n 2742    * @note   Stabilization time of measurement path to internal channel:\n 2743    *         After enabling internal paths, before starting ADC conversion,\n 2744:   *         a delay is required for internal voltage reference and\n 2745    *         temperature sensor stabilization time.\n 2746    *         Refer to device datasheet.\n ....\n 2968    * @note   With ADC low power mode \"auto wait\", the ADC conversion data read\n 2969    *         is corresponding to previous ADC conversion start, independently\n 2970:   *         of delay during which ADC was idle.\n 2971    *         Therefore, the ADC conversion data may be outdated: does not\n 2972    *         correspond to the current voltage level on the selected\n ....\n 3021    * @note   With ADC low power mode \"auto wait\", the ADC conversion data read\n 3022    *         is corresponding to previous ADC conversion start, independently\n 3023:   *         of delay during which ADC was idle.\n 3024    *         Therefore, the ADC conversion data may be outdated: does not\n 3025    *         correspond to the current voltage level on the selected\n ....\n 6385  \n 6386  /**\n 6387:   * @brief  Set ADC multimode delay between 2 sampling phases.\n 6388:   * @note   The sampling delay range depends on ADC resolution:\n 6389:   *         - ADC resolution 12 bits can have maximum delay of 12 cycles.\n 6390:   *         - ADC resolution 10 bits can have maximum delay of 10 cycles.\n 6391:   *         - ADC resolution  8 bits can have maximum delay of  8 cycles.\n 6392:   *         - ADC resolution  6 bits can have maximum delay of  6 cycles.\n 6393    * @note   On this STM32 serie, setting of this feature is conditioned to\n 6394    *         ADC state:\n ....\n 6425  \n 6426  /**\n 6427:   * @brief  Get ADC multimode delay between 2 sampling phases.\n 6428    * @rmtoll CCR      DELAY          LL_ADC_GetMultiTwoSamplingDelay\n 6429    * @param  ADCxy_COMMON ADC common instance\n ....\n 6518    * @brief  Enable ADC instance internal voltage regulator.\n 6519    * @note   On this STM32 serie, after ADC internal voltage regulator enable,\n 6520:   *         a delay for ADC internal voltage regulator stabilization\n 6521    *         is required before performing a ADC calibration or ADC enable.\n 6522    *         Refer to device datasheet, parameter tADCVREG_STUP.\n ....\n 6566  /**\n 6567    * @brief  Enable the selected ADC instance.\n 6568:   * @note   On this STM32 serie, after ADC enable, a delay for\n 6569    *         ADC internal analog stabilization is required before performing a\n 6570    *         ADC conversion start.\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h:\n    9    ==============================================================================\n   10      [..]\n   11:       A delay between an RCC peripheral clock enable and the effective peripheral\n   12        enabling should be taken into account in order to manage the peripheral read/write\n   13        from/to registers.\n   14:       (+) This delay depends on the peripheral mapping.\n   15          (++) AHB & APB peripherals, 1 dummy read is necessary\n   16  \n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h:\n  198    */\n  199  \n  200: /** @defgroup COMP_LL_EC_HW_DELAYS  Definitions of COMP hardware constraints delays\n  201:   * @note   Only COMP peripheral HW delays are defined in COMP LL driver driver,\n  202    *         not timeout values.\n  203:   *         For details on delays values, refer to descriptions in source code\n  204    *         above each literal definition.\n  205    * @{\n  ...\n  207  \n  208  /* Delay for comparator startup time.                                         */\n  209: /* Note: Delay required to reach propagation delay specification.             */\n  210  /* Literal set to maximum value (refer to device datasheet,                   */\n  211  /* parameter \"tSTART\").                                                       */\n  ...\n  290    *         - For scaler bridge power consumption values,\n  291    *           refer to device datasheet, parameter \"IDDA(SCALER)\".\n  292:   *         - Voltage scaler requires a delay for voltage stabilization.\n  293    *           Refer to device datasheet, parameter \"tSTART_SCALER\".\n  294    *         - Scaler bridge is common for all comparator instances,\n  ...\n  373    *         - For scaler bridge power consumption values,\n  374    *           refer to device datasheet, parameter \"IDDA(SCALER)\".\n  375:   *         - Voltage scaler requires a delay for voltage stabilization.\n  376    *           Refer to device datasheet, parameter \"tSTART_SCALER\".\n  377    *         - Scaler bridge is common for all comparator instances,\n  ...\n  626  /**\n  627    * @brief  Enable comparator instance.\n  628:   * @note   After enable from off state, comparator requires a delay\n  629:   *         to reach reach propagation delay specification.\n  630    *         Refer to device datasheet, parameter \"tSTART\".\n  631    * @rmtoll CSR      EN             LL_COMP_Enable\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h:\n  410    */\n  411  \n  412: /** @defgroup DAC_LL_EC_HW_DELAYS  Definitions of DAC hardware constraints delays\n  413:   * @note   Only DAC peripheral HW delays are defined in DAC LL driver driver,\n  414    *         not timeout values.\n  415:   *         For details on delays values, refer to descriptions in source code\n  416    *         above each literal definition.\n  417    * @{\n  ...\n  422  /* Note: DAC channel startup time depends on board application environment:   */\n  423  /*       impedance connected to DAC channel output.                           */\n  424: /*       The delay below is specified under conditions:                       */\n  425  /*        - voltage maximum transition (lowest to highest value)              */\n  426  /*        - until voltage reaches final value +-1LSB                          */\n  ...\n  435  /* Note: DAC channel startup time depends on board application environment:   */\n  436  /*       impedance connected to DAC channel output.                           */\n  437: /*       The delay below is specified under conditions:                       */\n  438  /*        - voltage maximum transition (lowest to highest value)              */\n  439  /*        - until voltage reaches final value +-1LSB                          */\n  ...\n 1983    * @rmtoll CR       EN1            LL_DAC_Enable\\n\n 1984    *         CR       EN2            LL_DAC_Enable\n 1985:   * @note   After enable from off state, DAC channel requires a delay\n 1986    *         for output voltage to reach accuracy +/- 1 LSB.\n 1987    *         Refer to device datasheet, parameter \"tWAKEUP\".\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_fmc.h:\n  300  \n  301    uint32_t TCLRSetupTime;          /*!< Defines the number of HCLK cycles to configure the\n  302:                                         delay between CLE low and RE low.\n  303                                          This parameter can be a value between Min_Data = 0 and Max_Data = 255  */\n  304  \n  305    uint32_t TARSetupTime;           /*!< Defines the number of HCLK cycles to configure the\n  306:                                         delay between ALE low and RE low.\n  307                                          This parameter can be a number between Min_Data = 0 and Max_Data = 255 */\n  308  }FMC_NAND_InitTypeDef;\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_hrtim.h:\n  988  /** @defgroup HRTIM_LL_EC_COMPAREMODE  COMPARE MODE\n  989    * @{\n  990:   * @brief Constants defining whether the compare register is behaving in regular mode (compare match issued as soon as counter equal compare) or in auto-delayed mode.\n  991    */\n  992  #define LL_HRTIM_COMPAREMODE_REGULAR          0x00000000U                         /*!< standard compare mode */\n  ...\n 1087  /** @defgroup HRTIM_LL_EC_DLYPRT  DELAYED PROTECTION (DLYPRT) MODE\n 1088    * @{\n 1089:   * @brief Constants defining all possible delayed protection modes for a timer (also define the source and outputs on which the delayed protection schemes are applied).\n 1090    */\n 1091: #define LL_HRTIM_DLYPRT_DELAYOUT1_EEV6  0x00000000U                                            /*!< Timers A, B, C: Output 1 delayed Idle on external Event 6 */\n 1092: #define LL_HRTIM_DLYPRT_DELAYOUT2_EEV6  (HRTIM_OUTR_DLYPRT_0)                                             /*!< Timers A, B, C: Output 2 delayed Idle on external Event 6 */\n 1093: #define LL_HRTIM_DLYPRT_DELAYBOTH_EEV6  (HRTIM_OUTR_DLYPRT_1)                                             /*!< Timers A, B, C: Output 1 and output 2 delayed Idle on external Event 6 */\n 1094  #define LL_HRTIM_DLYPRT_BALANCED_EEV6   (HRTIM_OUTR_DLYPRT_1 | HRTIM_OUTR_DLYPRT_0)                       /*!< Timers A, B, C: Balanced Idle on external Event 6 */\n 1095: #define LL_HRTIM_DLYPRT_DELAYOUT1_EEV7  (HRTIM_OUTR_DLYPRT_2)                                             /*!< Timers A, B, C: Output 1 delayed Idle on external Event 7 */\n 1096: #define LL_HRTIM_DLYPRT_DELAYOUT2_EEV7  (HRTIM_OUTR_DLYPRT_2 | HRTIM_OUTR_DLYPRT_0)                       /*!< Timers A, B, C: Output 2 delayed Idle on external Event 7 */\n 1097: #define LL_HRTIM_DLYPRT_DELAYBOTH_EEV7  (HRTIM_OUTR_DLYPRT_2 | HRTIM_OUTR_DLYPRT_1)                       /*!< Timers A, B, C: Output 1 and output2 delayed Idle on external Event 7 */\n 1098  #define LL_HRTIM_DLYPRT_BALANCED_EEV7   (HRTIM_OUTR_DLYPRT_2 | HRTIM_OUTR_DLYPRT_1 | HRTIM_OUTR_DLYPRT_0) /*!< Timers A, B, C: Balanced Idle on external Event 7 */\n 1099  \n 1100: #define LL_HRTIM_DLYPRT_DELAYOUT1_EEV8  0x00000000U                                             /*!< Timers D, E: Output 1 delayed Idle on external Event 8 */\n 1101: #define LL_HRTIM_DLYPRT_DELAYOUT2_EEV8  (HRTIM_OUTR_DLYPRT_0)                                               /*!< Timers D, E: Output 2 delayed Idle on external Event 8 */\n 1102: #define LL_HRTIM_DLYPRT_DELAYBOTH_EEV8  (HRTIM_OUTR_DLYPRT_1)                                               /*!< Timers D, E: Output 1 and output 2 delayed Idle on external Event 8 */\n 1103  #define LL_HRTIM_DLYPRT_BALANCED_EEV8   (HRTIM_OUTR_DLYPRT_1 | HRTIM_OUTR_DLYPRT_0)                         /*!< Timers D, E: Balanced Idle on external Event 8 */\n 1104: #define LL_HRTIM_DLYPRT_DELAYOUT1_EEV9  (HRTIM_OUTR_DLYPRT_2)                                               /*!< Timers D, E: Output 1 delayed Idle on external Event 9 */\n 1105: #define LL_HRTIM_DLYPRT_DELAYOUT2_EEV9  (HRTIM_OUTR_DLYPRT_2 | HRTIM_OUTR_DLYPRT_0)                         /*!< Timers D, E: Output 2 delayed Idle on external Event 9 */\n 1106: #define LL_HRTIM_DLYPRT_DELAYBOTH_EEV9  (HRTIM_OUTR_DLYPRT_2 | HRTIM_OUTR_DLYPRT_1)                         /*!< Timers D, E: Output 1 and output2 delayed Idle on external Event 9 */\n 1107  #define LL_HRTIM_DLYPRT_BALANCED_EEV9   (HRTIM_OUTR_DLYPRT_2 | HRTIM_OUTR_DLYPRT_1 | HRTIM_OUTR_DLYPRT_0)   /*!< Timers D, E: Balanced Idle on external Event 9 */\n 1108  /**\n ....\n 1174  /** @defgroup HRTIM_LL_EC_IPPSTAT  IDLE PUSH-PULL STATUS\n 1175    * @{\n 1176:   * @brief Constants defining on which output the signal was applied, in push-pull mode balanced fault mode or delayed idle mode, when the protection was triggered.\n 1177    */\n 1178  #define LL_HRTIM_IPPSTAT_OUTPUT1   ((uint32_t) 0x00000000U)    /*!< Protection occurred when the output 1 was active and output 2 forced inactive */\n ....\n 1259    */\n 1260  #define LL_HRTIM_EELATCH_DISABLED    0x00000000U             /*!< Event is ignored if it happens during a blank, or passed through during a window */\n 1261: #define LL_HRTIM_EELATCH_ENABLED     HRTIM_EEFR1_EE1LTCH     /*!< Event is latched and delayed till the end of the blanking or windowing period */\n 1262  /**\n 1263    * @}\n ....\n 1623  /** @defgroup HRTIM_LL_EC_OUT_BM_ENTRYMODE OUTPUT BURST MODE ENTRY MODE\n 1624    * @{\n 1625:   * @brief Constants defining the idle state entry mode during a burst mode operation. It is possible to delay the burst mode entry and force the output to an inactive state\n 1626  during a programmable period before the output takes its idle state.\n 1627    */\n ....\n 4542  \n 4543  /**\n 4544:   * @brief  Set the functioning mode of the compare unit (CMP2 or CMP4 can operate in standard mode or in auto delayed mode).\n 4545    * @rmtoll TIMxCR        DELCMP2       LL_HRTIM_TIM_SetCompareMode\\n\n 4546    *         TIMxCR        DELCMP4       LL_HRTIM_TIM_SetCompareMode\n 4547:   * @note In auto-delayed mode  the compare match occurs independently from the timer counter value.\n 4548    * @param  HRTIMx High Resolution Timer instance\n 4549    * @param  Timer This parameter can be one of the following values:\n ....\n 5492  \n 5493  /**\n 5494:   * @brief  Set the delayed protection (DLYPRT) mode.\n 5495    * @rmtoll OUTxR      DLYPRTEN       LL_HRTIM_TIM_SetDLYPRTMode\\n\n 5496    *         OUTxR      DLYPRT         LL_HRTIM_TIM_SetDLYPRTMode\n 5497:   * @note   This function must be called prior enabling the delayed protection\n 5498    * @note   Balanced Idle mode is only available in push-pull mode\n 5499    * @param  HRTIMx High Resolution Timer instance\n ....\n 5537  \n 5538  /**\n 5539:   * @brief  Get the delayed protection (DLYPRT) mode.\n 5540    * @rmtoll OUTxR      DLYPRTEN       LL_HRTIM_TIM_GetDLYPRTMode\\n\n 5541    *         OUTxR      DLYPRT         LL_HRTIM_TIM_GetDLYPRTMode\n ....\n 5579  \n 5580  /**\n 5581:   * @brief  Enable delayed protection (DLYPRT) for a given timer.\n 5582    * @rmtoll OUTxR      DLYPRTEN       LL_HRTIM_TIM_EnableDLYPRT\n 5583    * @note   This function must not be called once the concerned timer is enabled\n ....\n 5601  \n 5602  /**\n 5603:   * @brief  Disable delayed protection (DLYPRT) for a given timer.\n 5604    * @rmtoll OUTxR      DLYPRTEN       LL_HRTIM_TIM_DisableDLYPRT\n 5605    * @note   This function must not be called once the concerned timer is enabled\n ....\n 5623  \n 5624  /**\n 5625:   * @brief  Indicate whether delayed protection (DLYPRT) is enabled for a given timer.\n 5626    * @rmtoll OUTxR      DLYPRTEN       LL_HRTIM_TIM_IsEnabledDLYPRT\n 5627    * @param  HRTIMx High Resolution Timer instance\n ....\n 6015  \n 6016  /**\n 6017:   * @brief  Indicate on which output the signal was applied, in push-pull mode, balanced fault mode or delayed idle mode, when the protection was triggered.\n 6018    * @rmtoll TIMxISR      IPPSTAT        LL_HRTIM_TIM_GetIdlePushPullStatus\n 6019    * @param  HRTIMx High Resolution Timer instance\n ....\n 8980  /**\n 8981    * @brief  Get the level (active or inactive) of the designated output when the\n 8982:   *         delayed protection was triggered.\n 8983    * @rmtoll TIMxISR      O1SRSR          LL_HRTIM_OUT_GetDLYPRTOutStatus\\n\n 8984    *         TIMxISR      O2SRSR          LL_HRTIM_OUT_GetDLYPRTOutStatus\n ....\n 11580  \n 11581  /**\n 11582:   * @brief  Clear the delayed protection interrupt flag for a given timer.\n 11583    * @rmtoll TIMxICR     DLYPRTC           LL_HRTIM_ClearFlag_DLYPRT\n 11584    * @param  HRTIMx High Resolution Timer instance\n .....\n 11601  \n 11602  /**\n 11603:   * @brief  Indicate whether the  delayed protection interrupt occurred for a given timer.\n 11604    * @rmtoll TIMxISR     DLYPRT           LL_HRTIM_IsActiveFlag_DLYPRT\n 11605    * @param  HRTIMx High Resolution Timer instance\n .....\n 12829  \n 12830  /**\n 12831:   * @brief  Enable the delayed protection interrupt for a given timer.\n 12832    * @rmtoll TIMxDIER     DLYPRTIE            LL_HRTIM_EnableIT_DLYPRT\n 12833    * @param  HRTIMx High Resolution Timer instance\n .....\n 12850  \n 12851  /**\n 12852:   * @brief  Disable the delayed protection interrupt for a given timer.\n 12853    * @rmtoll TIMxDIER     DLYPRTIE            LL_HRTIM_DisableIT_DLYPRT\n 12854    * @param  HRTIMx High Resolution Timer instance\n .....\n 12871  \n 12872  /**\n 12873:   * @brief  Indicate whether the delayed protection interrupt is enabled for a given timer.\n 12874    * @rmtoll TIMxDIER     DLYPRTIE            LL_HRTIM_IsEnabledIT_DLYPRT\n 12875    * @param  HRTIMx High Resolution Timer instance\n .....\n 13802  \n 13803  /**\n 13804:   * @brief  Enable the delayed protection DMA request for a given timer.\n 13805    * @rmtoll TIMxDIER     DLYPRTDE             LL_HRTIM_EnableDMAReq_DLYPRT\n 13806    * @param  HRTIMx High Resolution Timer instance\n .....\n 13823  \n 13824  /**\n 13825:   * @brief  Disable the delayed protection DMA request for a given timer.\n 13826    * @rmtoll TIMxDIER     DLYPRTDE             LL_HRTIM_DisableDMAReq_DLYPRT\n 13827    * @param  HRTIMx High Resolution Timer instance\n .....\n 13844  \n 13845  /**\n 13846:   * @brief  Indicate whether the delayed protection DMA request is enabled for a given timer.\n 13847    * @rmtoll TIMxDIER     DLYPRTDE             LL_HRTIM_IsEnabledDMAReq_DLYPRT\n 13848    * @param  HRTIMx High Resolution Timer instance\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_lptim.h:\n  365  /**\n  366    * @brief  Enable the LPTIM instance\n  367:   * @note After setting the ENABLE bit, a delay of two counter clock is needed\n  368    *       before the LPTIM instance is actually enabled.\n  369    * @rmtoll CR           ENABLE        LL_LPTIM_Enable\n  ...\n  443    * @brief  Reset of the LPTIM_CNT counter register (synchronous).\n  444    * @note Due to the synchronous nature of this reset, it only takes\n  445:   *       place after a synchronization delay of 3 LPTIM core clock cycles\n  446    *      (LPTIM core clock may be different from APB clock).\n  447    * @note COUNTRST is automatically cleared by hardware\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h:\n  326    */\n  327  \n  328: /** @defgroup OPAMP_LL_EC_HW_DELAYS  Definitions of OPAMP hardware constraints delays\n  329:   * @note   Only OPAMP IP HW delays are defined in OPAMP LL driver driver,\n  330    *         not timeout values.\n  331:   *         For details on delays values, refer to descriptions in source code\n  332    *         above each literal definition.\n  333    * @{\n  ...\n  337  /* Note: OPAMP startup time depends on board application environment:         */\n  338  /*       impedance connected to OPAMP output.                                 */\n  339: /*       The delay below is specified under conditions:                       */\n  340  /*        - OPAMP in functional mode follower                                 */\n  341  /*        - load impedance of 4kOhm (min), 50pF (max)                         */\n  ...\n  897  /**\n  898    * @brief  Enable OPAMP instance.\n  899:   * @note   After enable from off state, OPAMP requires a delay\n  900    *         to fullfill wake up time specification.\n  901    *         Refer to device datasheet, parameter \"tWAKEUP\".\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rtc.h:\n 1462  /**\n 1463    * @brief  Synchronize to a remote clock with a high degree of precision.\n 1464:   * @note   This operation effectively subtracts from (delays) or advance the clock of a fraction of a second.\n 1465    * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called before.\n 1466    * @note   When REFCKON is set, firmware must not write to Shift control register.\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h:\n  437  \n  438    uint32_t CommutationDelay;   /*!< Specifies the compare value to be loaded into the Capture Compare Register.\n  439:                                     A positive pulse (TRGO event) is generated with a programmable delay every time\n  440                                      a change occurs on the Hall inputs.\n  441                                      This parameter can be a number between Min_Data = 0x0000 and Max_Data = 0xFFFF.\n  ...\n  469                                              has been written, their content is frozen until the next reset.*/\n  470  \n  471:   uint8_t DeadTime;              /*!< Specifies the delay time between the switching-off and the\n  472                                        switching-on of the outputs.\n  473                                        This parameter can be a number between Min_Data = 0x00 and Max_Data = 0xFF.\n  ...\n 1893  \n 1894  /**\n 1895:   * @brief  HELPER macro calculating the compare value required to achieve the required timer output compare active/inactive delay.\n 1896    * @note ex: @ref __LL_TIM_CALC_DELAY (1000000, @ref LL_TIM_GetPrescaler (), 10);\n 1897    * @param  __TIMCLK__ timer input clock frequency (in Hz)\n 1898    * @param  __PSC__ prescaler\n 1899:   * @param  __DELAY__ timer output compare active/inactive delay (in us)\n 1900    * @retval Compare value  (between Min_Data=0 and Max_Data=65535)\n 1901    */\n ....\n 1905  \n 1906  /**\n 1907:   * @brief  HELPER macro calculating the compare value, with dithering feature enabled, to achieve the required timer output compare active/inactive delay.\n 1908    * @note ex: @ref __LL_TIM_CALC_DELAY_DITHER (1000000, @ref LL_TIM_GetPrescaler (), 10);\n 1909    * @param  __TIMCLK__ timer input clock frequency (in Hz)\n 1910    * @param  __PSC__ prescaler\n 1911:   * @param  __DELAY__ timer output compare active/inactive delay (in us)\n 1912    * @retval Compare value  (between Min_Data=0 and Max_Data=65535)\n 1913    */\n ....\n 1921    * @param  __TIMCLK__ timer input clock frequency (in Hz)\n 1922    * @param  __PSC__ prescaler\n 1923:   * @param  __DELAY__ timer output compare active/inactive delay (in us)\n 1924    * @param  __PULSE__ pulse duration (in us)\n 1925    * @retval Auto-reload value  (between Min_Data=0 and Max_Data=65535)\n ....\n 1934    * @param  __TIMCLK__ timer input clock frequency (in Hz)\n 1935    * @param  __PSC__ prescaler\n 1936:   * @param  __DELAY__ timer output compare active/inactive delay (in us)\n 1937    * @param  __PULSE__ pulse duration (in us)\n 1938    * @retval Auto-reload value  (between Min_Data=0 and Max_Data=65535)\n ....\n 3111  \n 3112  /**\n 3113:   * @brief  Set the dead-time delay (delay inserted between the rising edge of the OCxREF signal and the rising edge of the Ocx and OCxN signals).\n 3114    * @note Macro IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not\n 3115    *       dead-time insertion feature is supported by a timer instance.\n ....\n 4762  \n 4763  /**\n 4764:   * @brief  Set the falling egde dead-time delay (delay inserted between the falling edge of the OCxREF signal and the rising edge of OCxN signals).\n 4765    * @note Macro IS_TIM_DEADTIME_ASYMMETRICAL_INSTANCE(TIMx) can be used to check whether or not\n 4766    *       asymmetrical dead-time insertion feature is supported by a timer instance.\n ....\n 4779  \n 4780  /**\n 4781:   * @brief  Get the falling egde dead-time delay (delay inserted between the falling edge of the OCxREF signal and the rising edge of OCxN signals).\n 4782    * @note Macro IS_TIM_DEADTIME_ASYMMETRICAL_INSTANCE(TIMx) can be used to check whether or not\n 4783    *       asymmetrical dead-time insertion feature is supported by a timer instance.\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_utils.h:\n   57    */\n   58  \n   59: /* Max delay can be used in LL_mDelay */\n   60  #define LL_MAX_DELAY                  0xFFFFFFFFU\n   61  \n   ..\n  264    * @param  HCLKFrequency HCLK frequency in Hz (can be calculated thanks to RCC helper macro)\n  265    * @note   When a RTOS is used, it is recommended to avoid changing the SysTick\n  266:   *         configuration by calling this function, for a delay use rather osDelay RTOS service.\n  267    * @param  Ticks Number of ticks\n  268    * @retval None\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal.c:\n  301      [..]  This section provides functions allowing to:\n  302        (+) Provide a tick value in millisecond\n  303:       (+) Provide a blocking delay in millisecond\n  304        (+) Suspend the time base source interrupt\n  305        (+) Resume the time base source interrupt\n  ...\n  378  \n  379  /**\n  380:   * @brief This function provides minimum delay (in milliseconds) based\n  381    *        on variable incremented.\n  382    * @note In the default implementation , SysTick timer is the source of time base.\n  ...\n  385    * @note This function is declared as __weak to be overwritten in case of other\n  386    *       implementations in user file.\n  387:   * @param Delay specifies the delay time length, in milliseconds.\n  388    * @retval None\n  389    */\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c:\n   42    (+) DMA request generation for transfer of conversions data of regular group.\n   43  \n   44:   (+) Configurable delay between conversions in Dual interleaved mode.\n   45  \n   46    (+) ADC channels selectable single/differential input.\n   ..\n 2978    *         the programmed threshold values are effective from the next\n 2979    *         ADC EOC (end of unitary conversion).\n 2980:   *         Considering that registers write delay may happen due to\n 2981    *         bus activity, this might cause an uncertainty on the\n 2982    *         effective timing of the new programmed threshold values.\n ....\n 3306    {\n 3307      /* Particular case of continuous auto-injection mode combined with        */\n 3308:     /* auto-delay mode.                                                       */\n 3309      /* In auto-injection mode, regular group stop ADC_CR_ADSTP is used (not   */\n 3310      /* injected group stop ADC_CR_JADSTP).                                    */\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc_ex.c:\n 2132        /* Parameters that can be updated only when ADC is disabled:                */\n 2133        /*  - Multimode mode selection                                              */\n 2134:       /*  - Multimode delay                                                       */\n 2135        /*    Note: Delay range depends on selected resolution:                     */\n 2136        /*      from 1 to 12 clock cycles for 12 bits                               */\n ....\n 2138        /*      from 1 to 8 clock cycles for 8 bits                                 */\n 2139        /*      from 1 to 6 clock cycles for 6 bits                                 */\n 2140:       /*    If a higher delay is selected, it will be clipped to maximum delay    */\n 2141        /*    range                                                                 */\n 2142        if (__LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) == 0UL)\n ....\n 2156        /* Parameters that can be updated only when ADC is disabled:                */\n 2157        /*  - Multimode mode selection                                              */\n 2158:       /*  - Multimode delay                                                       */\n 2159        if (__LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) == 0UL)\n 2160        {\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_comp.c:\n  178  \n  179  /* Delay for COMP startup time.                                               */\n  180: /* Note: Delay required to reach propagation delay specification.             */\n  181  /* Literal set to maximum value (refer to device datasheet,                   */\n  182  /* parameter \"tSTART\").                                                       */\n  ...\n  307  \n  308      /* Delay for COMP scaler bridge voltage stabilization */\n  309:     /* Apply the delay if voltage scaler bridge is required and not already enabled */\n  310      if ((READ_BIT(hcomp->Instance->CSR, COMP_CSR_SCALEN) != 0UL) &&\n  311          (comp_voltage_scaler_initialized == 0UL)               )\n  ...\n  809        /* Note: Variable divided by 2 to compensate partially                  */\n  810        /*       CPU processing cycles.                                         */\n  811:       /* Note: In case of system low frequency (below 1Mhz), short delay      */\n  812        /*       of startup time (few us) is within CPU processing cycles       */\n  813        /*       of following instructions.                                     */\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_dac_ex.c:\n  844        MODIFY_REG(hdac->Instance->CCR, (DAC_CCR_OTRIM1 << (Channel & 0x10UL)), (trimmingvalue << (Channel & 0x10UL)));\n  845  \n  846:       /* tOFFTRIMmax delay x ms as per datasheet (electrical characteristics */\n  847        /* i.e. minimum time needed between two calibration steps */\n  848        HAL_Delay(1);\n  ...\n  866      MODIFY_REG(hdac->Instance->CCR, (DAC_CCR_OTRIM1 << (Channel & 0x10UL)), (trimmingvalue << (Channel & 0x10UL)));\n  867  \n  868:     /* tOFFTRIMmax delay x ms as per datasheet (electrical characteristics */\n  869      /* i.e. minimum time needed between two calibration steps */\n  870      HAL_Delay(1U);\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_fdcan.c:\n 1254          (+) HAL_FDCAN_GetTimeoutCounter             : Get the timeout counter value\n 1255          (+) HAL_FDCAN_ResetTimeoutCounter           : Reset the timeout counter to its start value\n 1256:       (+) HAL_FDCAN_ConfigTxDelayCompensation     : Configure the transmitter delay compensation\n 1257:         (+) HAL_FDCAN_EnableTxDelayCompensation     : Enable the transmitter delay compensation\n 1258:         (+) HAL_FDCAN_DisableTxDelayCompensation    : Disable the transmitter delay compensation\n 1259        (+) HAL_FDCAN_EnableISOMode                 : Enable ISO 11898-1 protocol mode\n 1260        (+) HAL_FDCAN_DisableISOMode                : Disable ISO 11898-1 protocol mode\n ....\n 1743  \n 1744  /**\n 1745:   * @brief  Configure the transmitter delay compensation.\n 1746    * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains\n 1747    *         the configuration information for the specified FDCAN.\n ....\n 1776  \n 1777  /**\n 1778:   * @brief  Enable the transmitter delay compensation.\n 1779    * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains\n 1780    *         the configuration information for the specified FDCAN.\n ....\n 1785    if (hfdcan->State == HAL_FDCAN_STATE_READY)\n 1786    {\n 1787:     /* Enable transmitter delay compensation */\n 1788      SET_BIT(hfdcan->Instance->DBTP, FDCAN_DBTP_TDC);\n 1789  \n ....\n 1801  \n 1802  /**\n 1803:   * @brief  Disable the transmitter delay compensation.\n 1804    * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains\n 1805    *         the configuration information for the specified FDCAN.\n ....\n 1810    if (hfdcan->State == HAL_FDCAN_STATE_READY)\n 1811    {\n 1812:     /* Disable transmitter delay compensation */\n 1813      CLEAR_BIT(hfdcan->Instance->DBTP, FDCAN_DBTP_TDC);\n 1814  \n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_hrtim.c:\n  127                       external event channel: source, polarity, edge-sensitivity.\n  128                       External event can be used as triggers (timer reset, input\n  129:                      capture, burst mode, ADC triggers, delayed protection)\n  130                       They can also be used to set or reset timer outputs. Up to\n  131                       10 event channels are available.\n  ...\n  190                  (+++)Enabling the fault channels for the HRTIM timer.\n  191                  (+++)Enabling the dead-time insertion for the HRTIM timer.\n  192:                 (+++)Setting the delayed protection mode for the HRTIM timer (source and outputs\n  193:                      on which the delayed protection are applied).\n  194                  (+++)Specifying the HRTIM timer update and reset triggers.\n  195                  (+++)Specifying the HRTIM timer registers update policy (e.g. pre-load enabling).\n  ...\n  201                    unit for a HRTIM timer. Allows to generate a couple of\n  202                    complementary signals from a single reference waveform,\n  203:                   with programmable delays between active state.\n  204                (++)HAL_HRTIM_ChopperModeConfig(): configures the parameters of\n  205                    the high-frequency carrier signal added on top of the timing\n  ...\n  212                (++)HAL_HRTIM_WaveformCompareConfig():configures the compare unit\n  213                    of a HRTIM timer. This operation consists in setting the\n  214:                   compare value and possibly specifying the auto delayed mode\n  215                    for compare units 2 and 4 (allows to have compare events\n  216                    generated relatively to capture events). Note that when auto\n  217:                   delayed mode is needed, the capture unit associated to the\n  218                    compare unit must be configured separately.\n  219                (++)HAL_HRTIM_WaveformCaptureConfig(): configures the capture unit\n  ...\n  264                   (IDLE/RUN/FAULT) of the designated timer output.\n  265                (++)HAL_HRTIM_GetDelayedProtectionStatus():returns actual level\n  266:                  (ACTIVE/INACTIVE) of the designated output when the delayed\n  267                    protection was triggered.\n  268                (++)HAL_HRTIM_GetBurstStatus(): returns the actual status\n  ...\n  276                   is enabled for the HRTIM timer (see HAL_HRTIM_WaveformTimerConfig()),\n  277                   the idle push-pull status indicates during which period the\n  278:                  delayed protection request occurred (e.g. protection occurred\n  279                   when the output 1 was active and output 2 forced inactive or\n  280                   vice versa).\n  ...\n 3318            the timer counter is started in response to transition detected\n 3319            on a given external event input to generate a pulse with a\n 3320:           programmable length after a programmable delay.\n 3321  @endverbatim\n 3322    * @{\n ....\n 5776    *                    @arg HRTIM_COMPAREUNIT_4: Compare unit 4\n 5777    * @param  pCompareCfg pointer to the compare unit configuration structure\n 5778:   * @note When auto delayed mode is required for compare unit 2 or compare unit 4,\n 5779    *       application has to configure separately the capture unit. Capture unit\n 5780:   *       to configure in that case depends on the compare unit auto delayed mode\n 5781    *       is applied to (see below):\n 5782:   *         Auto delayed on output compare 2: capture unit 1 must be configured\n 5783:   *         Auto delayed on output compare 4: capture unit 2 must be configured\n 5784    * @retval HAL status\n 5785    * @note This function must be called before starting the timer\n ....\n 5870          if (pCompareCfg->AutoDelayedMode != HRTIM_AUTODELAYEDMODE_REGULAR)\n 5871          {\n 5872:           /* Configure auto-delayed mode */\n 5873            /* DELCMP2 bitfield must be reset when reprogrammed from one value */\n 5874:           /* to the other to reinitialize properly the auto-delayed mechanism */\n 5875            hhrtim->Instance->sTimerxRegs[TimerIdx].TIMxCR &= ~HRTIM_TIMCR_DELCMP2;\n 5876            hhrtim->Instance->sTimerxRegs[TimerIdx].TIMxCR |= pCompareCfg->AutoDelayedMode;\n ....\n 5915          if (pCompareCfg->AutoDelayedMode != HRTIM_AUTODELAYEDMODE_REGULAR)\n 5916          {\n 5917:           /* Configure auto-delayed mode */\n 5918            /* DELCMP4 bitfield must be reset when reprogrammed from one value */\n 5919:           /* to the other to reinitialize properly the auto-delayed mechanism */\n 5920            hhrtim->Instance->sTimerxRegs[TimerIdx].TIMxCR &= ~HRTIM_TIMCR_DELCMP4;\n 5921            hhrtim->Instance->sTimerxRegs[TimerIdx].TIMxCR |= (pCompareCfg->AutoDelayedMode << 2U);\n ....\n 7288        (+) Get HRTIM timer output level\n 7289        (+) Get HRTIM timer output state\n 7290:       (+) Get delayed protection status\n 7291        (+) Get burst status\n 7292        (+) Get current push-pull status\n ....\n 7720  /**\n 7721    * @brief  Return the level (active or inactive) of the designated output\n 7722:   *         when the delayed protection was triggered.\n 7723    * @param  hhrtim pointer to HAL HRTIM handle\n 7724    * @param  TimerIdx Timer index\n ....\n 7750                                                uint32_t Output)\n 7751  {\n 7752:   uint32_t delayed_protection_status = (uint32_t)RESET;\n 7753  \n 7754    /* Check parameters */\n 7755    assert_param(IS_HRTIM_TIMER_OUTPUT(TimerIdx, Output));\n 7756  \n 7757:   /* Read the delayed protection status */\n 7758    switch (Output)\n 7759    {\n ....\n 7767        if ((hhrtim->Instance->sTimerxRegs[TimerIdx].TIMxISR & HRTIM_TIMISR_O1STAT) != (uint32_t)RESET)\n 7768        {\n 7769:         /* Output 1 was active when the delayed idle protection was triggered */\n 7770:         delayed_protection_status = HRTIM_OUTPUTLEVEL_ACTIVE;\n 7771        }\n 7772        else\n 7773        {\n 7774:         /* Output 1 was inactive when the delayed idle protection was triggered */\n 7775:         delayed_protection_status = HRTIM_OUTPUTLEVEL_INACTIVE;\n 7776        }\n 7777        break;\n ....\n 7787        if ((hhrtim->Instance->sTimerxRegs[TimerIdx].TIMxISR & HRTIM_TIMISR_O2STAT) != (uint32_t)RESET)\n 7788        {\n 7789:         /* Output 2 was active when the delayed idle protection was triggered */\n 7790:         delayed_protection_status = HRTIM_OUTPUTLEVEL_ACTIVE;\n 7791        }\n 7792        else\n 7793        {\n 7794:         /* Output 2 was inactive when the delayed idle protection was triggered */\n 7795:         delayed_protection_status = HRTIM_OUTPUTLEVEL_INACTIVE;\n 7796        }\n 7797        break;\n ....\n 7814    }\n 7815  \n 7816:   return delayed_protection_status;\n 7817  }\n 7818  \n ....\n 7863  /**\n 7864    * @brief  Indicate on which output the signal was applied, in push-pull mode,\n 7865:             balanced fault mode or delayed idle mode, when the protection was triggered.\n 7866    * @param  hhrtim pointer to HAL HRTIM handle\n 7867    * @param  TimerIdx Timer index\n ....\n 7939        (+)  Callback function called when a capture 1 interrupt occurs\n 7940        (+)  Callback function called when a capture 2 interrupt occurs\n 7941:       (+)  Callback function called when a delayed protection interrupt occurs\n 7942        (+)  Callback function called when a timer counter reset interrupt occurs\n 7943        (+)  Callback function called when a timer output 1 set interrupt occurs\n ....\n 8345  \n 8346  /**\n 8347:   * @brief  Callback function invoked when the delayed idle or balanced idle mode is\n 8348    *         entered.\n 8349    * @param  hhrtim pointer to HAL HRTIM handle\n ....\n 9310      hrtim_timoutr |= pTimerCfg->DeadTimeInsertion;\n 9311  \n 9312:   /* Enable/Disable delayed protection at timer level\n 9313       Delayed Idle is available whatever the timer operating mode (regular, push-pull)\n 9314       Balanced Idle is only available in push-pull mode\n ....\n 10803        __HAL_HRTIM_TIMER_CLEAR_IT(hhrtim, TimerIdx, HRTIM_TIM_IT_DLYPRT);\n 10804  \n 10805:       /* Invoke delayed protection callback */\n 10806  #if (USE_HAL_HRTIM_REGISTER_CALLBACKS == 1)\n 10807        hhrtim->DelayedProtectionCallback(hhrtim, TimerIdx);\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_opamp.c:\n  717          MODIFY_REG(hopamp->Instance->CSR, OPAMP_CSR_TRIMOFFSETN, trimmingvaluen << OPAMP_INPUT_INVERTING);\n  718  \n  719:         /* OFFTRIMmax delay 2 ms as per datasheet (electrical characteristics */\n  720          /* Offset trim time: during calibration, minimum time needed between */\n  721          /* two steps to have 1 mV accuracy */\n  ...\n  740        MODIFY_REG(hopamp->Instance->CSR, OPAMP_CSR_TRIMOFFSETN, trimmingvaluen << OPAMP_INPUT_INVERTING);\n  741  \n  742:       /* OFFTRIMmax delay 2 ms as per datasheet (electrical characteristics */\n  743        /* Offset trim time: during calibration, minimum time needed between */\n  744        /* two steps to have 1 mV accuracy */\n  ...\n  767          MODIFY_REG(hopamp->Instance->CSR, OPAMP_CSR_TRIMOFFSETP, trimmingvaluep << OPAMP_INPUT_NONINVERTING);\n  768  \n  769:         /* OFFTRIMmax delay 2 ms as per datasheet (electrical characteristics */\n  770          /* Offset trim time: during calibration, minimum time needed between */\n  771          /* two steps to have 1 mV accuracy */\n  ...\n  790        MODIFY_REG(hopamp->Instance->CSR, OPAMP_CSR_TRIMOFFSETP, trimmingvaluep << OPAMP_INPUT_NONINVERTING);\n  791  \n  792:       /* OFFTRIMmax delay 2 ms as per datasheet (electrical characteristics */\n  793        /* Offset trim time: during calibration, minimum time needed between */\n  794        /* two steps to have 1 mV accuracy */\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_opamp_ex.c:\n  231  #endif\n  232  \n  233:       /* OFFTRIMmax delay 2 ms as per datasheet (electrical characteristics */\n  234        /* Offset trim time: during calibration, minimum time needed between */\n  235        /* two steps to have 1 mV accuracy */\n  ...\n  318  #endif\n  319  \n  320:     /* OFFTRIMmax delay 2 ms as per datasheet (electrical characteristics */\n  321      /* Offset trim time: during calibration, minimum time needed between */\n  322      /* two steps to have 1 mV accuracy */\n  ...\n  409  #endif\n  410  \n  411:       /* OFFTRIMmax delay 2 ms as per datasheet (electrical characteristics */\n  412        /* Offset trim time: during calibration, minimum time needed between */\n  413        /* two steps to have 1 mV accuracy */\n  ...\n  491  #endif\n  492  \n  493:     /* OFFTRIMmax delay 2 ms as per datasheet (electrical characteristics */\n  494      /* Offset trim time: during calibration, minimum time needed between */\n  495      /* two steps to have 1 mV accuracy */\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr.c:\n  502    *         the HSI RC oscillator is selected as system clock.\n  503    * @note  When the voltage regulator operates in low power mode (Stop 1), an additional\n  504:   *         startup delay is incurred when waking up.\n  505    *         By keeping the internal regulator ON during Stop mode (Stop 0), the consumption\n  506    *         is higher although the startup time is reduced.\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c:\n  993    *         the HSI RC oscillator is selected as system clock if STOPWUCK bit in RCC_CFGR register\n  994    *         is set.\n  995:   * @note  Due to low power mode, an additional startup delay is incurred when waking up from Stop 1 mode.\n  996    * @param STOPEntry  specifies if Stop mode in entered with WFI or WFE instruction.\n  997    *          This parameter can be one of the following values:\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_qspi.c:\n   48           (++) Dummy-cycles phase : the number of dummy cycles (mode used is same as data phase).\n   49           (++) Data phase : the mode used and if present the number of bytes.\n   50:          (++) Double Data Rate (DDR) mode : the activation (or not) of this mode and the delay\n   51               if activated.\n   52           (++) Sending Instruction Only Once (SIOO) mode : the activation (or not) of this mode.\n   ..\n   80           (++) Dummy-cycles phase : the number of dummy cycles (mode used is same as data phase).\n   81           (++) Data phase : the mode used.\n   82:          (++) Double Data Rate (DDR) mode : the activation (or not) of this mode and the delay\n   83               if activated.\n   84           (++) Sending Instruction Only Once (SIOO) mode : the activation (or not) of this mode.\n   ..\n  101           (++) Dummy-cycles phase : the number of dummy cycles (mode used is same as data phase).\n  102           (++) Data phase : the mode used.\n  103:          (++) Double Data Rate (DDR) mode : the activation (or not) of this mode and the delay\n  104               if activated.\n  105           (++) Sending Instruction Only Once (SIOO) mode : the activation (or not) of this mode.\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c:\n  759    *\n  760    * @note   A switch from one clock source to another occurs only if the target\n  761:   *         clock source is ready (clock stable after startup delay or PLL locked).\n  762    *         If a clock source which is not yet ready is selected, the switch will\n  763    *         occur when the clock source is ready.\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_sai.c:\n   75      (@) PDM interface can be activated through HAL_SAI_Init function.\n   76          Please note that PDM interface is only available for SAI1 sub-block A.\n   77:         PDM microphone delays can be tuned with HAL_SAIEx_ConfigPdmMicDelay function.\n   78  \n   79    [..]\n   ..\n  656    if (hsai->Instance == SAI1_Block_A)\n  657    {\n  658:     /* Reset PDM delays */\n  659      SAI1->PDMDLY = 0U;\n  660  \n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_sai_ex.c:\n    6    *          This file provides firmware functions to manage the following\n    7    *          functionality of the SAI Peripheral Controller:\n    8:   *           + Modify PDM microphone delays.\n    9    *\n   10    ******************************************************************************\n   ..\n   63   ===============================================================================\n   64      [..]  This section provides functions allowing to:\n   65:       (+) Modify PDM microphone delays\n   66  \n   67  @endverbatim\n   ..\n   70  \n   71  /**\n   72:   * @brief  Configure PDM microphone delays.\n   73    * @param  hsai SAI handle.\n   74:   * @param  pdmMicDelay Microphone delays configuration.\n   75    * @retval HAL status\n   76    */\n   ..\n   87    else\n   88    {\n   89:     /* Check microphone delay parameters */\n   90      assert_param(IS_SAI_PDM_MIC_PAIRS_NUMBER(pdmMicDelay->MicPair));\n   91      assert_param(IS_SAI_PDM_MIC_DELAY(pdmMicDelay->LeftDelay));\n   ..\n   98      if ((hsai->State != HAL_SAI_STATE_RESET) && (offset <= 24U))\n   99      {\n  100:       /* Reset current delays for specified microphone */\n  101        SAI1->PDMDLY &= ~(SAI_PDM_DELAY_MASK << offset);\n  102  \n  103:       /* Apply new microphone delays */\n  104        SAI1->PDMDLY |= (((pdmMicDelay->RightDelay << SAI_PDM_RIGHT_DELAY_OFFSET) | pdmMicDelay->LeftDelay) << offset);\n  105      }\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_tim.c:\n 3806    *            @arg TIM_CHANNEL_1: TIM Channel 1 selected\n 3807    *            @arg TIM_CHANNEL_2: TIM Channel 2 selected\n 3808:   * @note  To output a waveform with a minimum delay user can enable the fast\n 3809    *        mode by calling the @ref __HAL_TIM_ENABLE_OCxFAST macro. Then CCx\n 3810    *        output is forced in response to the edge detection on TIx input,\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_tim_ex.c:\n   29      (#) Supports incremental (quadrature) encoder and hall-sensor circuitry for\n   30          positioning purposes\n   31:     (#) In case of Pulse on compare, configure pulse length and delay\n   32      (#) Encoder index configuration\n   33  \n   ..\n 2638    *             (corresponds to 4094 for the integer part and 15 for the dithered part).\n 2639    * @note   Macros @ref __HAL_TIM_CALC_PERIOD_DITHER() __HAL_TIM_CALC_DELAY_DITHER()  __HAL_TIM_CALC_PULSE_DITHER()\n 2640:   *         can be used to calculate period (ARR) and delay (CCRx) value.\n 2641    * @note   Enabling dithering, modifies automatically values of registers ARR/CCRx to keep the same integer part.\n 2642    *         So it may be necessary to read ARR value or CCRx value with macros @ref __HAL_TIM_GET_AUTORELOAD() __HAL_TIM_GET_COMPARE()\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_adc.c:\n   46    */\n   47  \n   48: /* Definitions of ADC hardware constraints delays */\n   49: /* Note: Only ADC peripheral HW delays are defined in ADC LL driver driver,   */\n   50  /*       not timeout values:                                                  */\n   51  /*       Timeout values for ADC operations are dependent to device clock      */\n   ..\n  649      /*    - Set ADC multimode configuration                                   */\n  650      /*    - Set ADC multimode DMA transfer                                    */\n  651:     /*    - Set ADC multimode: delay between 2 sampling phases                */\n  652  #if defined(ADC_MULTIMODE_SUPPORT)\n  653      if (ADC_CommonInitStruct->Multimode != LL_ADC_MULTI_INDEPENDENT)\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_tim.c:\n  603    *       between 2 changes on the inputs. It gives information about motor speed.\n  604    * @note Channel 2 is configured in output PWM 2 mode.\n  605:   * @note Compare value stored in TIMx_CCR2 corresponds to the commutation delay.\n  606    * @note OC2REF is selected as trigger output on TRGO.\n  607    * @note LL_TIM_IC_POLARITY_BOTHEDGE must not be used for TI1 when it is used\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_utils.c:\n  162    * @brief  This function configures the Cortex-M SysTick source to have 1ms time base.\n  163    * @note   When a RTOS is used, it is recommended to avoid changing the Systick\n  164:   *         configuration by calling this function, for a delay use rather osDelay RTOS service.\n  165    * @param  HCLKFrequency HCLK frequency in Hz\n  166    * @note   HCLK frequency can be calculated thanks to RCC helper macro or function @ref LL_RCC_GetSystemClocksFreq\n  ...\n  174  \n  175  /**\n  176:   * @brief  This function provides accurate delay (in milliseconds) based\n  177    *         on SysTick counter flag\n  178:   * @note   When a RTOS is used, it is recommended to avoid using blocking delay\n  179    *         and use rather osDelay service.\n  180    * @note   To respect 1ms timebase, user should call @ref LL_Init1msTick function which\n  181    *         will configure Systick to 1ms\n  182:   * @param  Delay specifies the delay time length, in milliseconds.\n  183    * @retval None\n  184    */\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Inc/usbd_conf.h:\n  108  #define USBD_memcpy         /* Not used */\n  109  \n  110: /** Alias for delay. */\n  111  #define USBD_Delay          HAL_Delay\n  112  \n\n/Users/dog/Documents/electronics/stm32-nema17-servo/mechaduino-firmware/asf_mechaduino/driver_init.c:\n  188  }\n  189  \n  190: void delay_driver_init(void)\n  191  {\n  192: \tdelay_init(SysTick);\n  193  }\n  194  \n  ...\n  404  \tUSART_0_init();\n  405  \n  406: \tdelay_driver_init();\n  407  \n  408  \tTIMER_0_CLOCK_init();\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/mechaduino-firmware/asf_mechaduino/driver_init.h:\n   16  \n   17  #include <hal_atomic.h>\n   18: #include <hal_delay.h>\n   19  #include <hal_gpio.h>\n   20  #include <hal_init.h>\n   ..\n   31  #include <hal_usart_sync.h>\n   32  \n   33: #include <hal_delay.h>\n   34  #include <tc_lite.h>\n   35  \n   ..\n   67  void USART_0_init(void);\n   68  \n   69: void delay_driver_init(void);\n   70  \n   71  void TIMER_0_CLOCK_init(void);\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/mechaduino-firmware/asf_mechaduino/examples/driver_examples.c:\n   85  }\n   86  \n   87: void delay_example(void)\n   88  {\n   89: \tdelay_ms(5000);\n   90  }\n   91  \n\n/Users/dog/Documents/electronics/stm32-nema17-servo/mechaduino-firmware/asf_mechaduino/examples/driver_examples.h:\n   21  void USART_0_example(void);\n   22  \n   23: void delay_example(void);\n   24  \n   25  #ifdef __cplusplus\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/mechaduino-firmware/asf_mechaduino/hal/include/hal_delay.h:\n    2   * \\file\n    3   *\n    4:  * \\brief HAL delay related functionality declaration.\n    5   *\n    6   * Copyright (c) 2014-2018 Microchip Technology Inc. and its subsidiaries.\n    .\n   46  \n   47  /**\n   48:  * \\addtogroup doc_driver_hal_delay Delay Driver\n   49   *\n   50   *@{\n   ..\n   56   * \\param[in] hw The pointer to hardware instance\n   57   */\n   58: void delay_init(void *const hw);\n   59  \n   60  /**\n   61:  * \\brief Perform delay in us\n   62   *\n   63:  * This function performs delay for the given amount of microseconds.\n   64   *\n   65:  * \\param[in] us The amount delay in us\n   66   */\n   67: void delay_us(const uint16_t us);\n   68  \n   69  /**\n   70:  * \\brief Perform delay in ms\n   71   *\n   72:  * This function performs delay for the given amount of milliseconds.\n   73   *\n   74:  * \\param[in] ms The amount delay in ms\n   75   */\n   76: void delay_ms(const uint16_t ms);\n   77  \n   78  /**\n   ..\n   81   * \\return Current driver version.\n   82   */\n   83: uint32_t delay_get_version(void);\n   84  \n   85  /**@}*/\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/mechaduino-firmware/asf_mechaduino/hal/include/hpl_delay.h:\n   38   * \\addtogroup HPL Delay\n   39   *\n   40:  * \\section hpl_delay_rev Revision History\n   41   * - v1.0.0 Initial Release\n   42   *\n   ..\n   58  \n   59  /**\n   60:  * \\brief Initialize delay functionality\n   61   *\n   62   * \\param[in] hw The pointer to hardware instance\n   63   */\n   64: void _delay_init(void *const hw);\n   65  \n   66  /**\n   67:  * \\brief Retrieve the amount of cycles to delay for the given amount of us\n   68   *\n   69:  * \\param[in] us The amount of us to delay for\n   70   *\n   71   * \\return The amount of cycles\n   ..\n   74  \n   75  /**\n   76:  * \\brief Retrieve the amount of cycles to delay for the given amount of ms\n   77   *\n   78:  * \\param[in] ms The amount of ms to delay for\n   79   *\n   80   * \\return The amount of cycles\n   ..\n   83  \n   84  /**\n   85:  * \\brief Delay loop to delay n number of cycles\n   86   *\n   87   * \\param[in] hw The pointer to hardware instance\n   88:  * \\param[in] cycles The amount of cycles to delay for\n   89   */\n   90: void _delay_cycles(void *const hw, uint32_t cycles);\n   91  //@}\n   92  \n\n/Users/dog/Documents/electronics/stm32-nema17-servo/mechaduino-firmware/asf_mechaduino/hal/src/hal_delay.c:\n    2   * \\file\n    3   *\n    4:  * \\brief HAL delay related functionality implementation.\n    5   *\n    6   * Copyright (c) 2014-2018 Microchip Technology Inc. and its subsidiaries.\n    .\n   35  #include <hpl_reset.h>\n   36  #include <hpl_sleep.h>\n   37: #include \"hal_delay.h\"\n   38: #include <hpl_delay.h>\n   39  \n   40  /**\n   ..\n   51   * \\brief Initialize Delay driver\n   52   */\n   53: void delay_init(void *const hw)\n   54  {\n   55: \t_delay_init(hardware = hw);\n   56  }\n   57  \n   58  /**\n   59:  * \\brief Perform delay in us\n   60   */\n   61: void delay_us(const uint16_t us)\n   62  {\n   63: \t_delay_cycles(hardware, _get_cycles_for_us(us));\n   64  }\n   65  \n   66  /**\n   67:  * \\brief Perform delay in ms\n   68   */\n   69: void delay_ms(const uint16_t ms)\n   70  {\n   71: \t_delay_cycles(hardware, _get_cycles_for_ms(ms));\n   72  }\n   73  \n   ..\n   75   * \\brief Retrieve the current driver version\n   76   */\n   77: uint32_t delay_get_version(void)\n   78  {\n   79  \treturn DRIVER_VERSION;\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/mechaduino-firmware/asf_mechaduino/hpl/core/hpl_core_m0plus_base.c:\n   36  #include <hpl_reset.h>\n   37  #include <hpl_sleep.h>\n   38: #include <hpl_delay.h>\n   39  #ifndef _UNIT_TEST_\n   40  #include <utils.h>\n   ..\n  143  \n  144  /**\n  145:  * \\brief Retrieve the amount of cycles to delay for the given amount of us\n  146   */\n  147  static inline uint32_t _get_cycles_for_us_internal(const uint16_t us, const uint32_t freq, const uint8_t power)\n  ...\n  164  \n  165  /**\n  166:  * \\brief Retrieve the amount of cycles to delay for the given amount of us\n  167   */\n  168  uint32_t _get_cycles_for_us(const uint16_t us)\n  ...\n  172  \n  173  /**\n  174:  * \\brief Retrieve the amount of cycles to delay for the given amount of ms\n  175   */\n  176  static inline uint32_t _get_cycles_for_ms_internal(const uint16_t ms, const uint32_t freq, const uint8_t power)\n  ...\n  193  \n  194  /**\n  195:  * \\brief Retrieve the amount of cycles to delay for the given amount of ms\n  196   */\n  197  uint32_t _get_cycles_for_ms(const uint16_t ms)\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/mechaduino-firmware/asf_mechaduino/hpl/systick/hpl_systick.c:\n   47  }\n   48  /**\n   49:  * \\brief Initialize delay functionality\n   50   */\n   51: void _delay_init(void *const hw)\n   52  {\n   53  \t_system_time_init(hw);\n   ..\n   81  }\n   82  /**\n   83:  * \\brief Delay loop to delay n number of cycles\n   84   */\n   85: void _delay_cycles(void *const hw, uint32_t cycles)\n   86  {\n   87  \t(void)hw;\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/mechaduino-firmware/src/main.c:\n  118  \t\tgpio_set_pin_level(MECH_LED, ledOn);\n  119  \t\tledOn = !ledOn;\n  120: \t\tdelay_ms(200);\n  121  \t\t// dbg_println(\"Hi There!\");\n  122  \n\n/Users/dog/Documents/electronics/stm32-nema17-servo/mechaduino-firmware/src/mecha_spi.c:\n   11  BIT15 is an even parity on commands as well as data, and transfers are big endian.\n   12  \n   13: Propagation delay of sensor is spec'd at 100us +-10us from sensing to read via SPI\n   14  \n   15  At 8Mhz, SPI read of 16bits takes 2us nominally, so ~10us for the 4x16bit words seems a reasonable assumption\n   ..\n   59  \tgpio_set_pin_level(HEADER_SS, true);\n   60  \tspi_m_sync_enable(&SPI_0);\n   61: \t// delay_us(1);\n   62  \tfor (size_t i = 0; i < 4; ++i)\n   63  \t{\n   ..\n   68  \t\t};\n   69  \t\tgpio_set_pin_level(HEADER_SS, false);\n   70: \t\t// delay_us(1);\n   71  \t\tspi_m_sync_transfer(&SPI_0, &xfer);\n   72  \t\tgpio_set_pin_level(HEADER_SS, true);\n   73: \t\t// delay_us(1);\n   74  \n   75  \t}\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/stm32-servo-firmware/src/ssf_spi.c:\n   10  BIT15 is an even parity on commands as well as data, and transfers are big endian.\n   11  \n   12: Propagation delay of sensor is spec'd at 100us +-10us from sensing to read via SPI\n   13  \n   14  At 8Mhz, SPI read of 16bits takes 2us nominally, so ~10us for the 4x16bit words seems a reasonable assumption\n   ..\n   36  \n   37  \tHAL_GPIO_WritePin(PIN_DRVSEL, GPIO_PIN_SET);\n   38: \tdelay_us(1);\n   39  \n   40  \tHAL_GPIO_WritePin(PIN_DRVSEL, GPIO_PIN_RESET);\n   41: \t// delay_us(1);\n   42  \n   43  \tHAL_StatusTypeDef txerr = HAL_SPI_TransmitReceive(&hspi2, (void*)cmd, (void*)rx, 8, 1000);\n   ..\n   45  \n   46  \tHAL_GPIO_WritePin(PIN_DRVSEL, GPIO_PIN_SET);\n   47: \t// delay_us(1);\n   48  \n   49  \n   50: \t// delay_us(1);\n   51  \t// for (size_t i = 0; i < 4; ++i)\n   52  \t// {\n   ..\n   57  \t// \t};\n   58  \t// \tHAL_GPIO_WritePin(PIN_DRVSEL, GPIO_PIN_RESET);\n   59: \t// \t// delay_us(1);\n   60  \n   61  \t// \tHAL_StatusTypeDef txerr = HAL_SPI_TransmitReceive(, 1000);\n   ..\n   63  \n   64  \t// \tHAL_GPIO_WritePin(PIN_DRVSEL, GPIO_PIN_SET);\n   65: \t// \t// delay_us(1);\n   66  \n   67  \t// }\n\n/Users/dog/Documents/embedded/projects/Mechaduino-Firmware/Mechaduino/Mechaduino/Utils.cpp:\n   52    SPI.begin();    //AS5047D SPI uses mode=1 (CPOL=0, CPHA=1)\n   53    SerialUSB.println(\"Beginning SPI communication with AS5047 encoder...\");\n   54:   delay(1000);\n   55    SPI.beginTransaction(settingsA);\n   56  \n   ..\n  200    dir = true;\n  201    oneStep();\n  202:   delay(500);\n  203  \n  204    if ((readEncoder() - encoderReading) < 0)   //check which way motor moves when dir = true\n  ...\n  217      }\n  218      oneStep();\n  219:     delay(100);\n  220    }\n  221    dir = true;\n  ...\n  223  \n  224      encoderReading = 0;\n  225:     delay(20);                         //moving too fast may not give accurate readings.  Motor needs time to settle after each step.\n  226      lastencoderReading = readEncoder();\n  227          \n  ...\n  237   \n  238        encoderReading += currentencoderReading;\n  239:       delay(10);\n  240        lastencoderReading = currentencoderReading;\n  241      }\n  ...\n  389    for (int reading = 0; reading < avg; reading++) {  //average multple readings at each step\n  390      encoderReading += readEncoder();\n  391:     delay(10);\n  392      }\n  393  \n  ...\n  580    //output(1.8 * stepNumber, 64); //updata 1.8 to aps..., second number is control effort\n  581    output(aps * stepNumber, (int)(0.33 * uMAX));\n  582:   delay(10);\n  583  }\n  584  \n  ...\n  617  \n  618    CHIPSELECT_HIGH();   //digitalWrite(chipSelectPin, HIGH);\n  619:   delay(1);\n  620    CHIPSELECT_LOW();    //digitalWrite(chipSelectPin, LOW);\n  621  \n  ...\n  644  \n  645    CHIPSELECT_HIGH();   //digitalWrite(chipSelectPin, HIGH);\n  646:   delay(1);\n  647    CHIPSELECT_LOW();    //digitalWrite(chipSelectPin, LOW);\n  648  \n  ...\n  651    CHIPSELECT_HIGH();   //digitalWrite(chipSelectPin, HIGH);\n  652  \n  653:   delay(1);\n  654    CHIPSELECT_LOW();    //digitalWrite(chipSelectPin, LOW);\n  655  \n  ...\n  685  \n  686  \n  687:   delay(1);\n  688  \n  689  }\n  ...\n  774    r = lookup[1];\n  775    enableTCInterrupts();\n  776:   delay(1000);\n  777  \n  778  \n  ...\n  781      SerialUSB.print(r, DEC);\n  782      SerialUSB.print(\" , \");\n  783:     delay(100);\n  784      SerialUSB.println(u, DEC);\n  785    }\n  ...\n  790      SerialUSB.print(r, DEC);\n  791      SerialUSB.print(\" , \");\n  792:     delay(100);\n  793      SerialUSB.println(u, DEC);\n  794    }\n  ...\n 1082       SerialUSB.println(\"The below table should be copied into sine_1 in Parameters.cpp.\");   \n 1083       SerialUSB.println(\"\");\n 1084:      delay(3000);\n 1085       SerialUSB.println(\"Printing sine look up table:...\");\n 1086       SerialUSB.println(\"\");\n ....\n 1106    //mode = 'x';\n 1107    r = 0;\n 1108:   delay(1000);\n 1109    SerialUSB.println(\"9...\");\n 1110:   delay(1000);\n 1111    SerialUSB.println(\"8...\");\n 1112:   delay(1000);\n 1113    SerialUSB.println(\"7...\");\n 1114:   delay(1000);\n 1115    SerialUSB.println(\"6...\");\n 1116:   delay(1000);\n 1117    SerialUSB.println(\"5...\");\n 1118:   delay(1000);\n 1119    SerialUSB.println(\"4...\");\n 1120:   delay(1000);\n 1121    SerialUSB.println(\"3...\");\n 1122:   delay(1000);\n 1123    SerialUSB.println(\"2...\");\n 1124:   delay(1000);\n 1125    SerialUSB.println(\"1...\");\n 1126:   delay(1000);\n 1127    print_yw = true;\n 1128:   delay(100);\n 1129    r = 97.65;      /// choose step size as you like, 97.65 gives a nice plot since 97.65*1024 = 10,000\n 1130:   delay(400);\n 1131    print_yw = false;\n 1132    r = 0;\n 1133:   delay(500);\n 1134    disableTCInterrupts();\n 1135  \n\n503 matches across 76 files\n\n\nSearching 1201 files for \"SPI_CR1_SSM\" (case sensitive)\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g431xx.h:\n 9430  #define SPI_CR1_SSI_Msk             (0x1UL << SPI_CR1_SSI_Pos)                 /*!< 0x00000100 */\n 9431  #define SPI_CR1_SSI                 SPI_CR1_SSI_Msk                            /*!<Internal slave select               */\n 9432: #define SPI_CR1_SSM_Pos             (9U)\n 9433: #define SPI_CR1_SSM_Msk             (0x1UL << SPI_CR1_SSM_Pos)                 /*!< 0x00000200 */\n 9434: #define SPI_CR1_SSM                 SPI_CR1_SSM_Msk                            /*!<Software slave management           */\n 9435  #define SPI_CR1_RXONLY_Pos          (10U)\n 9436  #define SPI_CR1_RXONLY_Msk          (0x1UL << SPI_CR1_RXONLY_Pos)              /*!< 0x00000400 */\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g441xx.h:\n 9661  #define SPI_CR1_SSI_Msk             (0x1UL << SPI_CR1_SSI_Pos)                 /*!< 0x00000100 */\n 9662  #define SPI_CR1_SSI                 SPI_CR1_SSI_Msk                            /*!<Internal slave select               */\n 9663: #define SPI_CR1_SSM_Pos             (9U)\n 9664: #define SPI_CR1_SSM_Msk             (0x1UL << SPI_CR1_SSM_Pos)                 /*!< 0x00000200 */\n 9665: #define SPI_CR1_SSM                 SPI_CR1_SSM_Msk                            /*!<Software slave management           */\n 9666  #define SPI_CR1_RXONLY_Pos          (10U)\n 9667  #define SPI_CR1_RXONLY_Msk          (0x1UL << SPI_CR1_RXONLY_Pos)              /*!< 0x00000400 */\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g471xx.h:\n 9869  #define SPI_CR1_SSI_Msk             (0x1UL << SPI_CR1_SSI_Pos)                 /*!< 0x00000100 */\n 9870  #define SPI_CR1_SSI                 SPI_CR1_SSI_Msk                            /*!<Internal slave select               */\n 9871: #define SPI_CR1_SSM_Pos             (9U)\n 9872: #define SPI_CR1_SSM_Msk             (0x1UL << SPI_CR1_SSM_Pos)                 /*!< 0x00000200 */\n 9873: #define SPI_CR1_SSM                 SPI_CR1_SSM_Msk                            /*!<Software slave management           */\n 9874  #define SPI_CR1_RXONLY_Pos          (10U)\n 9875  #define SPI_CR1_RXONLY_Msk          (0x1UL << SPI_CR1_RXONLY_Pos)              /*!< 0x00000400 */\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g473xx.h:\n 10643  #define SPI_CR1_SSI_Msk             (0x1UL << SPI_CR1_SSI_Pos)                 /*!< 0x00000100 */\n 10644  #define SPI_CR1_SSI                 SPI_CR1_SSI_Msk                            /*!<Internal slave select               */\n 10645: #define SPI_CR1_SSM_Pos             (9U)\n 10646: #define SPI_CR1_SSM_Msk             (0x1UL << SPI_CR1_SSM_Pos)                 /*!< 0x00000200 */\n 10647: #define SPI_CR1_SSM                 SPI_CR1_SSM_Msk                            /*!<Software slave management           */\n 10648  #define SPI_CR1_RXONLY_Pos          (10U)\n 10649  #define SPI_CR1_RXONLY_Msk          (0x1UL << SPI_CR1_RXONLY_Pos)              /*!< 0x00000400 */\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g474xx.h:\n 14005  #define SPI_CR1_SSI_Msk             (0x1UL << SPI_CR1_SSI_Pos)                 /*!< 0x00000100 */\n 14006  #define SPI_CR1_SSI                 SPI_CR1_SSI_Msk                            /*!<Internal slave select               */\n 14007: #define SPI_CR1_SSM_Pos             (9U)\n 14008: #define SPI_CR1_SSM_Msk             (0x1UL << SPI_CR1_SSM_Pos)                 /*!< 0x00000200 */\n 14009: #define SPI_CR1_SSM                 SPI_CR1_SSM_Msk                            /*!<Software slave management           */\n 14010  #define SPI_CR1_RXONLY_Pos          (10U)\n 14011  #define SPI_CR1_RXONLY_Msk          (0x1UL << SPI_CR1_RXONLY_Pos)              /*!< 0x00000400 */\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g483xx.h:\n 10874  #define SPI_CR1_SSI_Msk             (0x1UL << SPI_CR1_SSI_Pos)                 /*!< 0x00000100 */\n 10875  #define SPI_CR1_SSI                 SPI_CR1_SSI_Msk                            /*!<Internal slave select               */\n 10876: #define SPI_CR1_SSM_Pos             (9U)\n 10877: #define SPI_CR1_SSM_Msk             (0x1UL << SPI_CR1_SSM_Pos)                 /*!< 0x00000200 */\n 10878: #define SPI_CR1_SSM                 SPI_CR1_SSM_Msk                            /*!<Software slave management           */\n 10879  #define SPI_CR1_RXONLY_Pos          (10U)\n 10880  #define SPI_CR1_RXONLY_Msk          (0x1UL << SPI_CR1_RXONLY_Pos)              /*!< 0x00000400 */\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g484xx.h:\n 14236  #define SPI_CR1_SSI_Msk             (0x1UL << SPI_CR1_SSI_Pos)                 /*!< 0x00000100 */\n 14237  #define SPI_CR1_SSI                 SPI_CR1_SSI_Msk                            /*!<Internal slave select               */\n 14238: #define SPI_CR1_SSM_Pos             (9U)\n 14239: #define SPI_CR1_SSM_Msk             (0x1UL << SPI_CR1_SSM_Pos)                 /*!< 0x00000200 */\n 14240: #define SPI_CR1_SSM                 SPI_CR1_SSM_Msk                            /*!<Software slave management           */\n 14241  #define SPI_CR1_RXONLY_Pos          (10U)\n 14242  #define SPI_CR1_RXONLY_Msk          (0x1UL << SPI_CR1_RXONLY_Pos)              /*!< 0x00000400 */\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32gbk1cb.h:\n 9402  #define SPI_CR1_SSI_Msk             (0x1UL << SPI_CR1_SSI_Pos)                 /*!< 0x00000100 */\n 9403  #define SPI_CR1_SSI                 SPI_CR1_SSI_Msk                            /*!<Internal slave select               */\n 9404: #define SPI_CR1_SSM_Pos             (9U)\n 9405: #define SPI_CR1_SSM_Msk             (0x1UL << SPI_CR1_SSM_Pos)                 /*!< 0x00000200 */\n 9406: #define SPI_CR1_SSM                 SPI_CR1_SSM_Msk                            /*!<Software slave management           */\n 9407  #define SPI_CR1_RXONLY_Pos          (10U)\n 9408  #define SPI_CR1_RXONLY_Msk          (0x1UL << SPI_CR1_RXONLY_Pos)              /*!< 0x00000400 */\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_spi.h:\n  275    * @{\n  276    */\n  277: #define SPI_NSS_SOFT                    SPI_CR1_SSM\n  278  #define SPI_NSS_HARD_INPUT              (0x00000000U)\n  279  #define SPI_NSS_HARD_OUTPUT             (SPI_CR2_SSOE << 16U)\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_spi.h:\n  217    * @{\n  218    */\n  219: #define LL_SPI_NSS_SOFT                    (SPI_CR1_SSM)                     /*!< NSS managed internally. NSS pin not used and free              */\n  220  #define LL_SPI_NSS_HARD_INPUT              0x00000000U                       /*!< NSS pin used in Input. Only used in Master mode                */\n  221  #define LL_SPI_NSS_HARD_OUTPUT             (((uint32_t)SPI_CR2_SSOE << 16U)) /*!< NSS pin used in Output. Only used in Slave mode as chip select */\n  ...\n  833  __STATIC_INLINE void LL_SPI_SetNSSMode(SPI_TypeDef *SPIx, uint32_t NSS)\n  834  {\n  835:   MODIFY_REG(SPIx->CR1, SPI_CR1_SSM,  NSS);\n  836    MODIFY_REG(SPIx->CR2, SPI_CR2_SSOE, ((uint32_t)(NSS >> 16U)));\n  837  }\n  ...\n  849  __STATIC_INLINE uint32_t LL_SPI_GetNSSMode(SPI_TypeDef *SPIx)\n  850  {\n  851:   register uint32_t Ssm  = (READ_BIT(SPIx->CR1, SPI_CR1_SSM));\n  852    register uint32_t Ssoe = (READ_BIT(SPIx->CR2,  SPI_CR2_SSOE) << 16U);\n  853    return (Ssm | Ssoe);\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c:\n  419    Communication speed, First bit and CRC calculation state */\n  420    WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction |\n  421:                                   hspi->Init.CLKPolarity | hspi->Init.CLKPhase | (hspi->Init.NSS & SPI_CR1_SSM) |\n  422                                    hspi->Init.BaudRatePrescaler | hspi->Init.FirstBit  | hspi->Init.CRCCalculation));\n  423  #if (USE_SPI_CRC != 0U)\n  ...\n 1321            if ((READ_BIT(spi_cr1, SPI_CR1_MSTR) == 0U) && (READ_BIT(spi_cr2, SPI_CR2_NSSP) == SPI_CR2_NSSP))\n 1322            {\n 1323:             SET_BIT(hspi->Instance->CR1, SPI_CR1_SSM);\n 1324            }\n 1325            SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);\n ....\n 1389            if ((READ_BIT(spi_cr1, SPI_CR1_MSTR) == 0U) && (READ_BIT(spi_cr2, SPI_CR2_NSSP) == SPI_CR2_NSSP))\n 1390            {\n 1391:             SET_BIT(hspi->Instance->CR1, SPI_CR1_SSM);\n 1392            }\n 1393            SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_spi.c:\n   50  #define SPI_CR1_CLEAR_MASK                 (SPI_CR1_CPHA    | SPI_CR1_CPOL     | SPI_CR1_MSTR   | \\\n   51                                              SPI_CR1_BR      | SPI_CR1_LSBFIRST | SPI_CR1_SSI    | \\\n   52:                                             SPI_CR1_SSM     | SPI_CR1_RXONLY   | SPI_CR1_CRCL   | \\\n   53                                              SPI_CR1_CRCNEXT | SPI_CR1_CRCEN    | SPI_CR1_BIDIOE | \\\n   54                                              SPI_CR1_BIDIMODE)\n   ..\n  225       * - ClockPolarity:      SPI_CR1_CPOL bit\n  226       * - ClockPhase:         SPI_CR1_CPHA bit\n  227:      * - NSS management:     SPI_CR1_SSM bit\n  228       * - BaudRate prescaler: SPI_CR1_BR[2:0] bits\n  229       * - BitOrder:           SPI_CR1_LSBFIRST bit\n\n49 matches across 12 files\n\n\nSearching 1201 files for \"LL_SPI_NSS_HARD_OUTPUT\" (case sensitive)\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_spi.h:\n  219  #define LL_SPI_NSS_SOFT                    (SPI_CR1_SSM)                     /*!< NSS managed internally. NSS pin not used and free              */\n  220  #define LL_SPI_NSS_HARD_INPUT              0x00000000U                       /*!< NSS pin used in Input. Only used in Master mode                */\n  221: #define LL_SPI_NSS_HARD_OUTPUT             (((uint32_t)SPI_CR2_SSOE << 16U)) /*!< NSS pin used in Output. Only used in Slave mode as chip select */\n  222  /**\n  223    * @}\n  ...\n  828    *         @arg @ref LL_SPI_NSS_SOFT\n  829    *         @arg @ref LL_SPI_NSS_HARD_INPUT\n  830:   *         @arg @ref LL_SPI_NSS_HARD_OUTPUT\n  831    * @retval None\n  832    */\n  ...\n  845    *         @arg @ref LL_SPI_NSS_SOFT\n  846    *         @arg @ref LL_SPI_NSS_HARD_INPUT\n  847:   *         @arg @ref LL_SPI_NSS_HARD_OUTPUT\n  848    */\n  849  __STATIC_INLINE uint32_t LL_SPI_GetNSSMode(SPI_TypeDef *SPIx)\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_spi.c:\n   91  #define IS_LL_SPI_NSS(__VALUE__) (((__VALUE__) == LL_SPI_NSS_SOFT)          \\\n   92                                    || ((__VALUE__) == LL_SPI_NSS_HARD_INPUT) \\\n   93:                                   || ((__VALUE__) == LL_SPI_NSS_HARD_OUTPUT))\n   94  \n   95  #define IS_LL_SPI_BAUDRATE(__VALUE__) (((__VALUE__) == LL_SPI_BAUDRATEPRESCALER_DIV2)      \\\n\n4 matches across 2 files\n\n\nSearching 1204 files for \"HAL_DMA_XFER_CPLT_CB_ID\" (case sensitive)\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_dma.h:\n  101  typedef enum\n  102  {\n  103:   HAL_DMA_XFER_CPLT_CB_ID          = 0x00U,    /*!< Full transfer     */\n  104    HAL_DMA_XFER_HALFCPLT_CB_ID      = 0x01U,    /*!< Half transfer     */\n  105    HAL_DMA_XFER_ERROR_CB_ID         = 0x02U,    /*!< Error             */\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_dma.c:\n  844      switch (CallbackID)\n  845      {\n  846:       case  HAL_DMA_XFER_CPLT_CB_ID:\n  847          hdma->XferCpltCallback = pCallback;\n  848          break;\n  ...\n  895      switch (CallbackID)\n  896      {\n  897:       case  HAL_DMA_XFER_CPLT_CB_ID:\n  898          hdma->XferCpltCallback = NULL;\n  899          break;\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/stm32-servo-firmware/src/ssf_main.c:\n   83  \n   84  \t// register a callback that notifies us when \n   85: \tHAL_DMA_RegisterCallback(&hdma_adc2, HAL_DMA_XFER_CPLT_CB_ID, _adc2DmaCallback);\n   86  \n   87  \n\n4 matches across 3 files\n\n\nSearching 1204 files for \"HAL_ADC_CONVERSION_COMPLETE_CB_ID\" (case sensitive)\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_adc.h:\n  415  typedef enum\n  416  {\n  417:   HAL_ADC_CONVERSION_COMPLETE_CB_ID     = 0x00U,  /*!< ADC conversion complete callback ID */\n  418    HAL_ADC_CONVERSION_HALF_CB_ID         = 0x01U,  /*!< ADC conversion DMA half-transfer callback ID */\n  419    HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID   = 0x02U,  /*!< ADC analog watchdog 1 callback ID */\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c:\n  958    * @param  CallbackID ID of the callback to be registered\n  959    *         This parameter can be one of the following values:\n  960:   *          @arg @ref HAL_ADC_CONVERSION_COMPLETE_CB_ID      ADC conversion complete callback ID\n  961    *          @arg @ref HAL_ADC_CONVERSION_HALF_CB_ID          ADC conversion DMA half-transfer callback ID\n  962    *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID    ADC analog watchdog 1 callback ID\n  ...\n  990      switch (CallbackID)\n  991      {\n  992:       case HAL_ADC_CONVERSION_COMPLETE_CB_ID :\n  993          hadc->ConvCpltCallback = pCallback;\n  994          break;\n  ...\n 1083    * @param  CallbackID ID of the callback to be unregistered\n 1084    *         This parameter can be one of the following values:\n 1085:   *          @arg @ref HAL_ADC_CONVERSION_COMPLETE_CB_ID      ADC conversion complete callback ID\n 1086    *          @arg @ref HAL_ADC_CONVERSION_HALF_CB_ID          ADC conversion DMA half-transfer callback ID\n 1087    *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID    ADC analog watchdog 1 callback ID\n ....\n 1106      switch (CallbackID)\n 1107      {\n 1108:       case HAL_ADC_CONVERSION_COMPLETE_CB_ID :\n 1109          hadc->ConvCpltCallback = HAL_ADC_ConvCpltCallback;\n 1110          break;\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/stm32-servo-firmware/src/ssf_main.c:\n  123  \n  124  \t// register an ADC scan conversion complete callback\n  125: \tHAL_ADC_RegisterCallback(&hadc2, HAL_ADC_CONVERSION_COMPLETE_CB_ID, _adc2ConversionCompleteCallback);\n  126  \n  127  \n\n6 matches across 3 files\n\n\nSearching 1206 files for \"DMAContinuousRequests\" (case sensitive)\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_adc.h:\n   75    *            GainCompensation, ScanConvMode, EOCSelection, LowPowerAutoWait.\n   76    *          - Scope ADC group regular: ContinuousConvMode, NbrOfConversion, DiscontinuousConvMode, NbrOfDiscConversion,\n   77:   *            ExternalTrigConv, ExternalTrigConvEdge, DMAContinuousRequests, Overrun, OversamplingMode, Oversampling, SamplingMode.\n   78    * @note   The setting of these parameters by function HAL_ADC_Init() is conditioned to ADC state.\n   79    *         ADC state can be either:\n   80    *          - For all parameters: ADC disabled\n   81:   *          - For all parameters except 'LowPowerAutoWait', 'DMAContinuousRequests' and 'Oversampling': ADC enabled without conversion on going on group regular.\n   82:   *          - For parameters 'LowPowerAutoWait' and 'DMAContinuousRequests': ADC enabled without conversion on going on groups regular and injected.\n   83    *         If ADC is not in the appropriate state to modify some parameters, these parameters setting is bypassed\n   84    *         without error reporting (as it can be the expected behavior in case of intended action to update another parameter\n   ..\n  171                                         This parameter can be a value of @ref ADC_regular_sampling_mode */\n  172  \n  173:   FunctionalState DMAContinuousRequests; /*!< Specify whether the DMA requests are performed in one shot mode (DMA transfer stops when number of conversions is reached)\n  174                                         or in continuous mode (DMA transfer unlimited, whatever number of conversions).\n  175                                         This parameter can be set to ENABLE or DISABLE.\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c:\n  428    assert_param(IS_ADC_EXTTRIG(hadc, hadc->Init.ExternalTrigConv));\n  429    assert_param(IS_ADC_SAMPLINGMODE(hadc->Init.SamplingMode));\n  430:   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DMAContinuousRequests));\n  431    assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));\n  432    assert_param(IS_ADC_OVERRUN(hadc->Init.Overrun));\n  ...\n  610      /* conversion on going on regular and injected groups:                    */\n  611      /*  - Gain Compensation               Init.GainCompensation               */\n  612:     /*  - DMA continuous request          Init.DMAContinuousRequests          */\n  613      /*  - LowPowerAutoWait feature        Init.LowPowerAutoWait               */\n  614      /*  - Oversampling parameters         Init.Oversampling                   */\n  ...\n  621        tmpCFGR = (ADC_CFGR_DFSDM(hadc)                                            |\n  622                   ADC_CFGR_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)        |\n  623:                  ADC_CFGR_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests));\n  624  \n  625        MODIFY_REG(hadc->Instance->CFGR, ADC_CFGR_FIELDS_2, tmpCFGR);\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc_ex.c:\n  875    assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));\n  876    assert_param(IS_ADC_EXTTRIG_EDGE(hadc->Init.ExternalTrigConvEdge));\n  877:   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DMAContinuousRequests));\n  878  \n  879    if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) != 0UL)\n  ...\n 2128        MODIFY_REG(tmpADC_Common->CCR, ADC_CCR_MDMA | ADC_CCR_DMACFG,\n 2129                   multimode->DMAAccessMode |\n 2130:                  ADC_CCR_MULTI_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests));\n 2131  \n 2132        /* Parameters that can be updated only when ADC is disabled:                */\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Src/main.c:\n  252    hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;\n  253    hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;\n  254:   hadc1.Init.DMAContinuousRequests = ENABLE;\n  255    hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;\n  256    hadc1.Init.OversamplingMode = ENABLE;\n  ...\n  321    hadc2.Init.ExternalTrigConv = ADC_EXTERNALTRIG_T2_TRGO;\n  322    hadc2.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_RISING;\n  323:   hadc2.Init.DMAContinuousRequests = DISABLE;\n  324    hadc2.Init.Overrun = ADC_OVR_DATA_OVERWRITTEN;\n  325    hadc2.Init.OversamplingMode = DISABLE;\n\n11 matches across 4 files\n\n\nSearching 1206 files for \"CDC_Receive_FS\" (case sensitive)\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Src/usbd_cdc_if.c:\n  130  static int8_t CDC_DeInit_FS(void);\n  131  static int8_t CDC_Control_FS(uint8_t cmd, uint8_t* pbuf, uint16_t length);\n  132: static int8_t CDC_Receive_FS(uint8_t* pbuf, uint32_t *Len);\n  133  \n  134  /* USER CODE BEGIN PRIVATE_FUNCTIONS_DECLARATION */\n  ...\n  145    CDC_DeInit_FS,\n  146    CDC_Control_FS,\n  147:   CDC_Receive_FS\n  148  };\n  149  \n  ...\n  262    * @retval Result of the operation: USBD_OK if all operations are OK else USBD_FAIL\n  263    */\n  264: static int8_t CDC_Receive_FS(uint8_t* Buf, uint32_t *Len)\n  265  {\n  266    /* USER CODE BEGIN 6 */\n\n3 matches in 1 file\n\n\nSearching 1246 files for \"USB_WAKEUP_EXTI_LINE\" (case sensitive)\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_pcd.h:\n  199  #define __HAL_PCD_CLEAR_FLAG(__HANDLE__, __INTERRUPT__)               (((__HANDLE__)->Instance->ISTR) &= (uint16_t)(~(__INTERRUPT__)))\n  200  \n  201: #define __HAL_USB_WAKEUP_EXTI_ENABLE_IT()                             EXTI->IMR1 |= USB_WAKEUP_EXTI_LINE\n  202: #define __HAL_USB_WAKEUP_EXTI_DISABLE_IT()                            EXTI->IMR1 &= ~(USB_WAKEUP_EXTI_LINE)\n  203  \n  204  \n  ...\n  354  \n  355  \n  356: #define  USB_WAKEUP_EXTI_LINE                                         (0x1U << 18)  /*!< USB FS EXTI Line WakeUp Interrupt */\n  357  \n  358  \n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Inc/Legacy/stm32_hal_legacy.h:\n 3596    * @{\n 3597    */\n 3598: #define USB_EXTI_LINE_WAKEUP                               USB_WAKEUP_EXTI_LINE\n 3599  \n 3600  #define USB_FS_EXTI_TRIGGER_RISING_EDGE                    USB_OTG_FS_WAKEUP_EXTI_RISING_EDGE\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Middlewares/USBDevice4Cube/XPD_USB/xpd_usb.h:\n  164  \n  165  /** @brief USB Wake up line number */\n  166: #define         USB_WAKEUP_EXTI_LINE            18\n  167  \n  168  /** @} */\n\n5 matches across 3 files\n\n\n\nSearching 1249 files for \"GPIO_AF\" (case sensitive)\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g431xx.h:\n 5789  #define GPIO_LCKR_LCKK                 GPIO_LCKR_LCKK_Msk\n 5790  \n 5791: /****************** Bit definition for GPIO_AFRL register *********************/\n 5792: #define GPIO_AFRL_AFSEL0_Pos           (0U)\n 5793: #define GPIO_AFRL_AFSEL0_Msk           (0xFUL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x0000000F */\n 5794: #define GPIO_AFRL_AFSEL0               GPIO_AFRL_AFSEL0_Msk\n 5795: #define GPIO_AFRL_AFSEL0_0             (0x1UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000001 */\n 5796: #define GPIO_AFRL_AFSEL0_1             (0x2UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000002 */\n 5797: #define GPIO_AFRL_AFSEL0_2             (0x4UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000004 */\n 5798: #define GPIO_AFRL_AFSEL0_3             (0x8UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000008 */\n 5799: #define GPIO_AFRL_AFSEL1_Pos           (4U)\n 5800: #define GPIO_AFRL_AFSEL1_Msk           (0xFUL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x000000F0 */\n 5801: #define GPIO_AFRL_AFSEL1               GPIO_AFRL_AFSEL1_Msk\n 5802: #define GPIO_AFRL_AFSEL1_0             (0x1UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000010 */\n 5803: #define GPIO_AFRL_AFSEL1_1             (0x2UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000020 */\n 5804: #define GPIO_AFRL_AFSEL1_2             (0x4UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000040 */\n 5805: #define GPIO_AFRL_AFSEL1_3             (0x8UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000080 */\n 5806: #define GPIO_AFRL_AFSEL2_Pos           (8U)\n 5807: #define GPIO_AFRL_AFSEL2_Msk           (0xFUL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000F00 */\n 5808: #define GPIO_AFRL_AFSEL2               GPIO_AFRL_AFSEL2_Msk\n 5809: #define GPIO_AFRL_AFSEL2_0             (0x1UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000100 */\n 5810: #define GPIO_AFRL_AFSEL2_1             (0x2UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000200 */\n 5811: #define GPIO_AFRL_AFSEL2_2             (0x4UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000400 */\n 5812: #define GPIO_AFRL_AFSEL2_3             (0x8UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000800 */\n 5813: #define GPIO_AFRL_AFSEL3_Pos           (12U)\n 5814: #define GPIO_AFRL_AFSEL3_Msk           (0xFUL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x0000F000 */\n 5815: #define GPIO_AFRL_AFSEL3               GPIO_AFRL_AFSEL3_Msk\n 5816: #define GPIO_AFRL_AFSEL3_0             (0x1UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00001000 */\n 5817: #define GPIO_AFRL_AFSEL3_1             (0x2UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00002000 */\n 5818: #define GPIO_AFRL_AFSEL3_2             (0x4UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00004000 */\n 5819: #define GPIO_AFRL_AFSEL3_3             (0x8UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00008000 */\n 5820: #define GPIO_AFRL_AFSEL4_Pos           (16U)\n 5821: #define GPIO_AFRL_AFSEL4_Msk           (0xFUL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x000F0000 */\n 5822: #define GPIO_AFRL_AFSEL4               GPIO_AFRL_AFSEL4_Msk\n 5823: #define GPIO_AFRL_AFSEL4_0             (0x1UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00010000 */\n 5824: #define GPIO_AFRL_AFSEL4_1             (0x2UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00020000 */\n 5825: #define GPIO_AFRL_AFSEL4_2             (0x4UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00040000 */\n 5826: #define GPIO_AFRL_AFSEL4_3             (0x8UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00080000 */\n 5827: #define GPIO_AFRL_AFSEL5_Pos           (20U)\n 5828: #define GPIO_AFRL_AFSEL5_Msk           (0xFUL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00F00000 */\n 5829: #define GPIO_AFRL_AFSEL5               GPIO_AFRL_AFSEL5_Msk\n 5830: #define GPIO_AFRL_AFSEL5_0             (0x1UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00100000 */\n 5831: #define GPIO_AFRL_AFSEL5_1             (0x2UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00200000 */\n 5832: #define GPIO_AFRL_AFSEL5_2             (0x4UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00400000 */\n 5833: #define GPIO_AFRL_AFSEL5_3             (0x8UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00800000 */\n 5834: #define GPIO_AFRL_AFSEL6_Pos           (24U)\n 5835: #define GPIO_AFRL_AFSEL6_Msk           (0xFUL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x0F000000 */\n 5836: #define GPIO_AFRL_AFSEL6               GPIO_AFRL_AFSEL6_Msk\n 5837: #define GPIO_AFRL_AFSEL6_0             (0x1UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x01000000 */\n 5838: #define GPIO_AFRL_AFSEL6_1             (0x2UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x02000000 */\n 5839: #define GPIO_AFRL_AFSEL6_2             (0x4UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x04000000 */\n 5840: #define GPIO_AFRL_AFSEL6_3             (0x8UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x08000000 */\n 5841: #define GPIO_AFRL_AFSEL7_Pos           (28U)\n 5842: #define GPIO_AFRL_AFSEL7_Msk           (0xFUL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0xF0000000 */\n 5843: #define GPIO_AFRL_AFSEL7               GPIO_AFRL_AFSEL7_Msk\n 5844: #define GPIO_AFRL_AFSEL7_0             (0x1UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x10000000 */\n 5845: #define GPIO_AFRL_AFSEL7_1             (0x2UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x20000000 */\n 5846: #define GPIO_AFRL_AFSEL7_2             (0x4UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x40000000 */\n 5847: #define GPIO_AFRL_AFSEL7_3             (0x8UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x80000000 */\n 5848  \n 5849  /* Legacy defines */\n 5850: #define GPIO_AFRL_AFRL0                      GPIO_AFRL_AFSEL0\n 5851: #define GPIO_AFRL_AFRL1                      GPIO_AFRL_AFSEL1\n 5852: #define GPIO_AFRL_AFRL2                      GPIO_AFRL_AFSEL2\n 5853: #define GPIO_AFRL_AFRL3                      GPIO_AFRL_AFSEL3\n 5854: #define GPIO_AFRL_AFRL4                      GPIO_AFRL_AFSEL4\n 5855: #define GPIO_AFRL_AFRL5                      GPIO_AFRL_AFSEL5\n 5856: #define GPIO_AFRL_AFRL6                      GPIO_AFRL_AFSEL6\n 5857: #define GPIO_AFRL_AFRL7                      GPIO_AFRL_AFSEL7\n 5858  \n 5859: /****************** Bit definition for GPIO_AFRH register *********************/\n 5860: #define GPIO_AFRH_AFSEL8_Pos           (0U)\n 5861: #define GPIO_AFRH_AFSEL8_Msk           (0xFUL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x0000000F */\n 5862: #define GPIO_AFRH_AFSEL8               GPIO_AFRH_AFSEL8_Msk\n 5863: #define GPIO_AFRH_AFSEL8_0             (0x1UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000001 */\n 5864: #define GPIO_AFRH_AFSEL8_1             (0x2UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000002 */\n 5865: #define GPIO_AFRH_AFSEL8_2             (0x4UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000004 */\n 5866: #define GPIO_AFRH_AFSEL8_3             (0x8UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000008 */\n 5867: #define GPIO_AFRH_AFSEL9_Pos           (4U)\n 5868: #define GPIO_AFRH_AFSEL9_Msk           (0xFUL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x000000F0 */\n 5869: #define GPIO_AFRH_AFSEL9               GPIO_AFRH_AFSEL9_Msk\n 5870: #define GPIO_AFRH_AFSEL9_0             (0x1UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000010 */\n 5871: #define GPIO_AFRH_AFSEL9_1             (0x2UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000020 */\n 5872: #define GPIO_AFRH_AFSEL9_2             (0x4UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000040 */\n 5873: #define GPIO_AFRH_AFSEL9_3             (0x8UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000080 */\n 5874: #define GPIO_AFRH_AFSEL10_Pos          (8U)\n 5875: #define GPIO_AFRH_AFSEL10_Msk          (0xFUL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000F00 */\n 5876: #define GPIO_AFRH_AFSEL10              GPIO_AFRH_AFSEL10_Msk\n 5877: #define GPIO_AFRH_AFSEL10_0            (0x1UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000100 */\n 5878: #define GPIO_AFRH_AFSEL10_1            (0x2UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000200 */\n 5879: #define GPIO_AFRH_AFSEL10_2            (0x4UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000400 */\n 5880: #define GPIO_AFRH_AFSEL10_3            (0x8UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000800 */\n 5881: #define GPIO_AFRH_AFSEL11_Pos          (12U)\n 5882: #define GPIO_AFRH_AFSEL11_Msk          (0xFUL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x0000F000 */\n 5883: #define GPIO_AFRH_AFSEL11              GPIO_AFRH_AFSEL11_Msk\n 5884: #define GPIO_AFRH_AFSEL11_0            (0x1UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00001000 */\n 5885: #define GPIO_AFRH_AFSEL11_1            (0x2UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00002000 */\n 5886: #define GPIO_AFRH_AFSEL11_2            (0x4UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00004000 */\n 5887: #define GPIO_AFRH_AFSEL11_3            (0x8UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00008000 */\n 5888: #define GPIO_AFRH_AFSEL12_Pos          (16U)\n 5889: #define GPIO_AFRH_AFSEL12_Msk          (0xFUL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x000F0000 */\n 5890: #define GPIO_AFRH_AFSEL12              GPIO_AFRH_AFSEL12_Msk\n 5891: #define GPIO_AFRH_AFSEL12_0            (0x1UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00010000 */\n 5892: #define GPIO_AFRH_AFSEL12_1            (0x2UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00020000 */\n 5893: #define GPIO_AFRH_AFSEL12_2            (0x4UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00040000 */\n 5894: #define GPIO_AFRH_AFSEL12_3            (0x8UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00080000 */\n 5895: #define GPIO_AFRH_AFSEL13_Pos          (20U)\n 5896: #define GPIO_AFRH_AFSEL13_Msk          (0xFUL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00F00000 */\n 5897: #define GPIO_AFRH_AFSEL13              GPIO_AFRH_AFSEL13_Msk\n 5898: #define GPIO_AFRH_AFSEL13_0            (0x1UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00100000 */\n 5899: #define GPIO_AFRH_AFSEL13_1            (0x2UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00200000 */\n 5900: #define GPIO_AFRH_AFSEL13_2            (0x4UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00400000 */\n 5901: #define GPIO_AFRH_AFSEL13_3            (0x8UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00800000 */\n 5902: #define GPIO_AFRH_AFSEL14_Pos          (24U)\n 5903: #define GPIO_AFRH_AFSEL14_Msk          (0xFUL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x0F000000 */\n 5904: #define GPIO_AFRH_AFSEL14              GPIO_AFRH_AFSEL14_Msk\n 5905: #define GPIO_AFRH_AFSEL14_0            (0x1UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x01000000 */\n 5906: #define GPIO_AFRH_AFSEL14_1            (0x2UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x02000000 */\n 5907: #define GPIO_AFRH_AFSEL14_2            (0x4UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x04000000 */\n 5908: #define GPIO_AFRH_AFSEL14_3            (0x8UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x08000000 */\n 5909: #define GPIO_AFRH_AFSEL15_Pos          (28U)\n 5910: #define GPIO_AFRH_AFSEL15_Msk          (0xFUL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0xF0000000 */\n 5911: #define GPIO_AFRH_AFSEL15              GPIO_AFRH_AFSEL15_Msk\n 5912: #define GPIO_AFRH_AFSEL15_0            (0x1UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x10000000 */\n 5913: #define GPIO_AFRH_AFSEL15_1            (0x2UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x20000000 */\n 5914: #define GPIO_AFRH_AFSEL15_2            (0x4UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x40000000 */\n 5915: #define GPIO_AFRH_AFSEL15_3            (0x8UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x80000000 */\n 5916  \n 5917  /* Legacy defines */\n 5918: #define GPIO_AFRH_AFRH0                      GPIO_AFRH_AFSEL8\n 5919: #define GPIO_AFRH_AFRH1                      GPIO_AFRH_AFSEL9\n 5920: #define GPIO_AFRH_AFRH2                      GPIO_AFRH_AFSEL10\n 5921: #define GPIO_AFRH_AFRH3                      GPIO_AFRH_AFSEL11\n 5922: #define GPIO_AFRH_AFRH4                      GPIO_AFRH_AFSEL12\n 5923: #define GPIO_AFRH_AFRH5                      GPIO_AFRH_AFSEL13\n 5924: #define GPIO_AFRH_AFRH6                      GPIO_AFRH_AFSEL14\n 5925: #define GPIO_AFRH_AFRH7                      GPIO_AFRH_AFSEL15\n 5926  \n 5927  /******************  Bits definition for GPIO_BRR register  ******************/\n ....\n 12601  \n 12602  /******************************* GPIO AF Instances ****************************/\n 12603: #define IS_GPIO_AF_INSTANCE(INSTANCE)   IS_GPIO_ALL_INSTANCE(INSTANCE)\n 12604  \n 12605  /**************************** GPIO Lock Instances *****************************/\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g441xx.h:\n 6011  #define GPIO_LCKR_LCKK                 GPIO_LCKR_LCKK_Msk\n 6012  \n 6013: /****************** Bit definition for GPIO_AFRL register *********************/\n 6014: #define GPIO_AFRL_AFSEL0_Pos           (0U)\n 6015: #define GPIO_AFRL_AFSEL0_Msk           (0xFUL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x0000000F */\n 6016: #define GPIO_AFRL_AFSEL0               GPIO_AFRL_AFSEL0_Msk\n 6017: #define GPIO_AFRL_AFSEL0_0             (0x1UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000001 */\n 6018: #define GPIO_AFRL_AFSEL0_1             (0x2UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000002 */\n 6019: #define GPIO_AFRL_AFSEL0_2             (0x4UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000004 */\n 6020: #define GPIO_AFRL_AFSEL0_3             (0x8UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000008 */\n 6021: #define GPIO_AFRL_AFSEL1_Pos           (4U)\n 6022: #define GPIO_AFRL_AFSEL1_Msk           (0xFUL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x000000F0 */\n 6023: #define GPIO_AFRL_AFSEL1               GPIO_AFRL_AFSEL1_Msk\n 6024: #define GPIO_AFRL_AFSEL1_0             (0x1UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000010 */\n 6025: #define GPIO_AFRL_AFSEL1_1             (0x2UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000020 */\n 6026: #define GPIO_AFRL_AFSEL1_2             (0x4UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000040 */\n 6027: #define GPIO_AFRL_AFSEL1_3             (0x8UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000080 */\n 6028: #define GPIO_AFRL_AFSEL2_Pos           (8U)\n 6029: #define GPIO_AFRL_AFSEL2_Msk           (0xFUL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000F00 */\n 6030: #define GPIO_AFRL_AFSEL2               GPIO_AFRL_AFSEL2_Msk\n 6031: #define GPIO_AFRL_AFSEL2_0             (0x1UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000100 */\n 6032: #define GPIO_AFRL_AFSEL2_1             (0x2UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000200 */\n 6033: #define GPIO_AFRL_AFSEL2_2             (0x4UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000400 */\n 6034: #define GPIO_AFRL_AFSEL2_3             (0x8UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000800 */\n 6035: #define GPIO_AFRL_AFSEL3_Pos           (12U)\n 6036: #define GPIO_AFRL_AFSEL3_Msk           (0xFUL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x0000F000 */\n 6037: #define GPIO_AFRL_AFSEL3               GPIO_AFRL_AFSEL3_Msk\n 6038: #define GPIO_AFRL_AFSEL3_0             (0x1UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00001000 */\n 6039: #define GPIO_AFRL_AFSEL3_1             (0x2UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00002000 */\n 6040: #define GPIO_AFRL_AFSEL3_2             (0x4UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00004000 */\n 6041: #define GPIO_AFRL_AFSEL3_3             (0x8UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00008000 */\n 6042: #define GPIO_AFRL_AFSEL4_Pos           (16U)\n 6043: #define GPIO_AFRL_AFSEL4_Msk           (0xFUL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x000F0000 */\n 6044: #define GPIO_AFRL_AFSEL4               GPIO_AFRL_AFSEL4_Msk\n 6045: #define GPIO_AFRL_AFSEL4_0             (0x1UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00010000 */\n 6046: #define GPIO_AFRL_AFSEL4_1             (0x2UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00020000 */\n 6047: #define GPIO_AFRL_AFSEL4_2             (0x4UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00040000 */\n 6048: #define GPIO_AFRL_AFSEL4_3             (0x8UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00080000 */\n 6049: #define GPIO_AFRL_AFSEL5_Pos           (20U)\n 6050: #define GPIO_AFRL_AFSEL5_Msk           (0xFUL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00F00000 */\n 6051: #define GPIO_AFRL_AFSEL5               GPIO_AFRL_AFSEL5_Msk\n 6052: #define GPIO_AFRL_AFSEL5_0             (0x1UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00100000 */\n 6053: #define GPIO_AFRL_AFSEL5_1             (0x2UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00200000 */\n 6054: #define GPIO_AFRL_AFSEL5_2             (0x4UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00400000 */\n 6055: #define GPIO_AFRL_AFSEL5_3             (0x8UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00800000 */\n 6056: #define GPIO_AFRL_AFSEL6_Pos           (24U)\n 6057: #define GPIO_AFRL_AFSEL6_Msk           (0xFUL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x0F000000 */\n 6058: #define GPIO_AFRL_AFSEL6               GPIO_AFRL_AFSEL6_Msk\n 6059: #define GPIO_AFRL_AFSEL6_0             (0x1UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x01000000 */\n 6060: #define GPIO_AFRL_AFSEL6_1             (0x2UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x02000000 */\n 6061: #define GPIO_AFRL_AFSEL6_2             (0x4UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x04000000 */\n 6062: #define GPIO_AFRL_AFSEL6_3             (0x8UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x08000000 */\n 6063: #define GPIO_AFRL_AFSEL7_Pos           (28U)\n 6064: #define GPIO_AFRL_AFSEL7_Msk           (0xFUL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0xF0000000 */\n 6065: #define GPIO_AFRL_AFSEL7               GPIO_AFRL_AFSEL7_Msk\n 6066: #define GPIO_AFRL_AFSEL7_0             (0x1UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x10000000 */\n 6067: #define GPIO_AFRL_AFSEL7_1             (0x2UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x20000000 */\n 6068: #define GPIO_AFRL_AFSEL7_2             (0x4UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x40000000 */\n 6069: #define GPIO_AFRL_AFSEL7_3             (0x8UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x80000000 */\n 6070  \n 6071  /* Legacy defines */\n 6072: #define GPIO_AFRL_AFRL0                      GPIO_AFRL_AFSEL0\n 6073: #define GPIO_AFRL_AFRL1                      GPIO_AFRL_AFSEL1\n 6074: #define GPIO_AFRL_AFRL2                      GPIO_AFRL_AFSEL2\n 6075: #define GPIO_AFRL_AFRL3                      GPIO_AFRL_AFSEL3\n 6076: #define GPIO_AFRL_AFRL4                      GPIO_AFRL_AFSEL4\n 6077: #define GPIO_AFRL_AFRL5                      GPIO_AFRL_AFSEL5\n 6078: #define GPIO_AFRL_AFRL6                      GPIO_AFRL_AFSEL6\n 6079: #define GPIO_AFRL_AFRL7                      GPIO_AFRL_AFSEL7\n 6080  \n 6081: /****************** Bit definition for GPIO_AFRH register *********************/\n 6082: #define GPIO_AFRH_AFSEL8_Pos           (0U)\n 6083: #define GPIO_AFRH_AFSEL8_Msk           (0xFUL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x0000000F */\n 6084: #define GPIO_AFRH_AFSEL8               GPIO_AFRH_AFSEL8_Msk\n 6085: #define GPIO_AFRH_AFSEL8_0             (0x1UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000001 */\n 6086: #define GPIO_AFRH_AFSEL8_1             (0x2UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000002 */\n 6087: #define GPIO_AFRH_AFSEL8_2             (0x4UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000004 */\n 6088: #define GPIO_AFRH_AFSEL8_3             (0x8UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000008 */\n 6089: #define GPIO_AFRH_AFSEL9_Pos           (4U)\n 6090: #define GPIO_AFRH_AFSEL9_Msk           (0xFUL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x000000F0 */\n 6091: #define GPIO_AFRH_AFSEL9               GPIO_AFRH_AFSEL9_Msk\n 6092: #define GPIO_AFRH_AFSEL9_0             (0x1UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000010 */\n 6093: #define GPIO_AFRH_AFSEL9_1             (0x2UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000020 */\n 6094: #define GPIO_AFRH_AFSEL9_2             (0x4UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000040 */\n 6095: #define GPIO_AFRH_AFSEL9_3             (0x8UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000080 */\n 6096: #define GPIO_AFRH_AFSEL10_Pos          (8U)\n 6097: #define GPIO_AFRH_AFSEL10_Msk          (0xFUL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000F00 */\n 6098: #define GPIO_AFRH_AFSEL10              GPIO_AFRH_AFSEL10_Msk\n 6099: #define GPIO_AFRH_AFSEL10_0            (0x1UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000100 */\n 6100: #define GPIO_AFRH_AFSEL10_1            (0x2UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000200 */\n 6101: #define GPIO_AFRH_AFSEL10_2            (0x4UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000400 */\n 6102: #define GPIO_AFRH_AFSEL10_3            (0x8UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000800 */\n 6103: #define GPIO_AFRH_AFSEL11_Pos          (12U)\n 6104: #define GPIO_AFRH_AFSEL11_Msk          (0xFUL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x0000F000 */\n 6105: #define GPIO_AFRH_AFSEL11              GPIO_AFRH_AFSEL11_Msk\n 6106: #define GPIO_AFRH_AFSEL11_0            (0x1UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00001000 */\n 6107: #define GPIO_AFRH_AFSEL11_1            (0x2UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00002000 */\n 6108: #define GPIO_AFRH_AFSEL11_2            (0x4UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00004000 */\n 6109: #define GPIO_AFRH_AFSEL11_3            (0x8UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00008000 */\n 6110: #define GPIO_AFRH_AFSEL12_Pos          (16U)\n 6111: #define GPIO_AFRH_AFSEL12_Msk          (0xFUL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x000F0000 */\n 6112: #define GPIO_AFRH_AFSEL12              GPIO_AFRH_AFSEL12_Msk\n 6113: #define GPIO_AFRH_AFSEL12_0            (0x1UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00010000 */\n 6114: #define GPIO_AFRH_AFSEL12_1            (0x2UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00020000 */\n 6115: #define GPIO_AFRH_AFSEL12_2            (0x4UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00040000 */\n 6116: #define GPIO_AFRH_AFSEL12_3            (0x8UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00080000 */\n 6117: #define GPIO_AFRH_AFSEL13_Pos          (20U)\n 6118: #define GPIO_AFRH_AFSEL13_Msk          (0xFUL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00F00000 */\n 6119: #define GPIO_AFRH_AFSEL13              GPIO_AFRH_AFSEL13_Msk\n 6120: #define GPIO_AFRH_AFSEL13_0            (0x1UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00100000 */\n 6121: #define GPIO_AFRH_AFSEL13_1            (0x2UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00200000 */\n 6122: #define GPIO_AFRH_AFSEL13_2            (0x4UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00400000 */\n 6123: #define GPIO_AFRH_AFSEL13_3            (0x8UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00800000 */\n 6124: #define GPIO_AFRH_AFSEL14_Pos          (24U)\n 6125: #define GPIO_AFRH_AFSEL14_Msk          (0xFUL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x0F000000 */\n 6126: #define GPIO_AFRH_AFSEL14              GPIO_AFRH_AFSEL14_Msk\n 6127: #define GPIO_AFRH_AFSEL14_0            (0x1UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x01000000 */\n 6128: #define GPIO_AFRH_AFSEL14_1            (0x2UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x02000000 */\n 6129: #define GPIO_AFRH_AFSEL14_2            (0x4UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x04000000 */\n 6130: #define GPIO_AFRH_AFSEL14_3            (0x8UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x08000000 */\n 6131: #define GPIO_AFRH_AFSEL15_Pos          (28U)\n 6132: #define GPIO_AFRH_AFSEL15_Msk          (0xFUL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0xF0000000 */\n 6133: #define GPIO_AFRH_AFSEL15              GPIO_AFRH_AFSEL15_Msk\n 6134: #define GPIO_AFRH_AFSEL15_0            (0x1UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x10000000 */\n 6135: #define GPIO_AFRH_AFSEL15_1            (0x2UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x20000000 */\n 6136: #define GPIO_AFRH_AFSEL15_2            (0x4UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x40000000 */\n 6137: #define GPIO_AFRH_AFSEL15_3            (0x8UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x80000000 */\n 6138  \n 6139  /* Legacy defines */\n 6140: #define GPIO_AFRH_AFRH0                      GPIO_AFRH_AFSEL8\n 6141: #define GPIO_AFRH_AFRH1                      GPIO_AFRH_AFSEL9\n 6142: #define GPIO_AFRH_AFRH2                      GPIO_AFRH_AFSEL10\n 6143: #define GPIO_AFRH_AFRH3                      GPIO_AFRH_AFSEL11\n 6144: #define GPIO_AFRH_AFRH4                      GPIO_AFRH_AFSEL12\n 6145: #define GPIO_AFRH_AFRH5                      GPIO_AFRH_AFSEL13\n 6146: #define GPIO_AFRH_AFRH6                      GPIO_AFRH_AFSEL14\n 6147: #define GPIO_AFRH_AFRH7                      GPIO_AFRH_AFSEL15\n 6148  \n 6149  /******************  Bits definition for GPIO_BRR register  ******************/\n ....\n 12834  \n 12835  /******************************* GPIO AF Instances ****************************/\n 12836: #define IS_GPIO_AF_INSTANCE(INSTANCE)   IS_GPIO_ALL_INSTANCE(INSTANCE)\n 12837  \n 12838  /**************************** GPIO Lock Instances *****************************/\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g471xx.h:\n 5996  #define GPIO_LCKR_LCKK                 GPIO_LCKR_LCKK_Msk\n 5997  \n 5998: /****************** Bit definition for GPIO_AFRL register *********************/\n 5999: #define GPIO_AFRL_AFSEL0_Pos           (0U)\n 6000: #define GPIO_AFRL_AFSEL0_Msk           (0xFUL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x0000000F */\n 6001: #define GPIO_AFRL_AFSEL0               GPIO_AFRL_AFSEL0_Msk\n 6002: #define GPIO_AFRL_AFSEL0_0             (0x1UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000001 */\n 6003: #define GPIO_AFRL_AFSEL0_1             (0x2UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000002 */\n 6004: #define GPIO_AFRL_AFSEL0_2             (0x4UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000004 */\n 6005: #define GPIO_AFRL_AFSEL0_3             (0x8UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000008 */\n 6006: #define GPIO_AFRL_AFSEL1_Pos           (4U)\n 6007: #define GPIO_AFRL_AFSEL1_Msk           (0xFUL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x000000F0 */\n 6008: #define GPIO_AFRL_AFSEL1               GPIO_AFRL_AFSEL1_Msk\n 6009: #define GPIO_AFRL_AFSEL1_0             (0x1UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000010 */\n 6010: #define GPIO_AFRL_AFSEL1_1             (0x2UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000020 */\n 6011: #define GPIO_AFRL_AFSEL1_2             (0x4UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000040 */\n 6012: #define GPIO_AFRL_AFSEL1_3             (0x8UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000080 */\n 6013: #define GPIO_AFRL_AFSEL2_Pos           (8U)\n 6014: #define GPIO_AFRL_AFSEL2_Msk           (0xFUL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000F00 */\n 6015: #define GPIO_AFRL_AFSEL2               GPIO_AFRL_AFSEL2_Msk\n 6016: #define GPIO_AFRL_AFSEL2_0             (0x1UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000100 */\n 6017: #define GPIO_AFRL_AFSEL2_1             (0x2UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000200 */\n 6018: #define GPIO_AFRL_AFSEL2_2             (0x4UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000400 */\n 6019: #define GPIO_AFRL_AFSEL2_3             (0x8UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000800 */\n 6020: #define GPIO_AFRL_AFSEL3_Pos           (12U)\n 6021: #define GPIO_AFRL_AFSEL3_Msk           (0xFUL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x0000F000 */\n 6022: #define GPIO_AFRL_AFSEL3               GPIO_AFRL_AFSEL3_Msk\n 6023: #define GPIO_AFRL_AFSEL3_0             (0x1UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00001000 */\n 6024: #define GPIO_AFRL_AFSEL3_1             (0x2UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00002000 */\n 6025: #define GPIO_AFRL_AFSEL3_2             (0x4UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00004000 */\n 6026: #define GPIO_AFRL_AFSEL3_3             (0x8UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00008000 */\n 6027: #define GPIO_AFRL_AFSEL4_Pos           (16U)\n 6028: #define GPIO_AFRL_AFSEL4_Msk           (0xFUL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x000F0000 */\n 6029: #define GPIO_AFRL_AFSEL4               GPIO_AFRL_AFSEL4_Msk\n 6030: #define GPIO_AFRL_AFSEL4_0             (0x1UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00010000 */\n 6031: #define GPIO_AFRL_AFSEL4_1             (0x2UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00020000 */\n 6032: #define GPIO_AFRL_AFSEL4_2             (0x4UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00040000 */\n 6033: #define GPIO_AFRL_AFSEL4_3             (0x8UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00080000 */\n 6034: #define GPIO_AFRL_AFSEL5_Pos           (20U)\n 6035: #define GPIO_AFRL_AFSEL5_Msk           (0xFUL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00F00000 */\n 6036: #define GPIO_AFRL_AFSEL5               GPIO_AFRL_AFSEL5_Msk\n 6037: #define GPIO_AFRL_AFSEL5_0             (0x1UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00100000 */\n 6038: #define GPIO_AFRL_AFSEL5_1             (0x2UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00200000 */\n 6039: #define GPIO_AFRL_AFSEL5_2             (0x4UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00400000 */\n 6040: #define GPIO_AFRL_AFSEL5_3             (0x8UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00800000 */\n 6041: #define GPIO_AFRL_AFSEL6_Pos           (24U)\n 6042: #define GPIO_AFRL_AFSEL6_Msk           (0xFUL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x0F000000 */\n 6043: #define GPIO_AFRL_AFSEL6               GPIO_AFRL_AFSEL6_Msk\n 6044: #define GPIO_AFRL_AFSEL6_0             (0x1UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x01000000 */\n 6045: #define GPIO_AFRL_AFSEL6_1             (0x2UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x02000000 */\n 6046: #define GPIO_AFRL_AFSEL6_2             (0x4UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x04000000 */\n 6047: #define GPIO_AFRL_AFSEL6_3             (0x8UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x08000000 */\n 6048: #define GPIO_AFRL_AFSEL7_Pos           (28U)\n 6049: #define GPIO_AFRL_AFSEL7_Msk           (0xFUL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0xF0000000 */\n 6050: #define GPIO_AFRL_AFSEL7               GPIO_AFRL_AFSEL7_Msk\n 6051: #define GPIO_AFRL_AFSEL7_0             (0x1UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x10000000 */\n 6052: #define GPIO_AFRL_AFSEL7_1             (0x2UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x20000000 */\n 6053: #define GPIO_AFRL_AFSEL7_2             (0x4UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x40000000 */\n 6054: #define GPIO_AFRL_AFSEL7_3             (0x8UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x80000000 */\n 6055  \n 6056  /* Legacy defines */\n 6057: #define GPIO_AFRL_AFRL0                      GPIO_AFRL_AFSEL0\n 6058: #define GPIO_AFRL_AFRL1                      GPIO_AFRL_AFSEL1\n 6059: #define GPIO_AFRL_AFRL2                      GPIO_AFRL_AFSEL2\n 6060: #define GPIO_AFRL_AFRL3                      GPIO_AFRL_AFSEL3\n 6061: #define GPIO_AFRL_AFRL4                      GPIO_AFRL_AFSEL4\n 6062: #define GPIO_AFRL_AFRL5                      GPIO_AFRL_AFSEL5\n 6063: #define GPIO_AFRL_AFRL6                      GPIO_AFRL_AFSEL6\n 6064: #define GPIO_AFRL_AFRL7                      GPIO_AFRL_AFSEL7\n 6065  \n 6066: /****************** Bit definition for GPIO_AFRH register *********************/\n 6067: #define GPIO_AFRH_AFSEL8_Pos           (0U)\n 6068: #define GPIO_AFRH_AFSEL8_Msk           (0xFUL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x0000000F */\n 6069: #define GPIO_AFRH_AFSEL8               GPIO_AFRH_AFSEL8_Msk\n 6070: #define GPIO_AFRH_AFSEL8_0             (0x1UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000001 */\n 6071: #define GPIO_AFRH_AFSEL8_1             (0x2UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000002 */\n 6072: #define GPIO_AFRH_AFSEL8_2             (0x4UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000004 */\n 6073: #define GPIO_AFRH_AFSEL8_3             (0x8UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000008 */\n 6074: #define GPIO_AFRH_AFSEL9_Pos           (4U)\n 6075: #define GPIO_AFRH_AFSEL9_Msk           (0xFUL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x000000F0 */\n 6076: #define GPIO_AFRH_AFSEL9               GPIO_AFRH_AFSEL9_Msk\n 6077: #define GPIO_AFRH_AFSEL9_0             (0x1UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000010 */\n 6078: #define GPIO_AFRH_AFSEL9_1             (0x2UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000020 */\n 6079: #define GPIO_AFRH_AFSEL9_2             (0x4UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000040 */\n 6080: #define GPIO_AFRH_AFSEL9_3             (0x8UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000080 */\n 6081: #define GPIO_AFRH_AFSEL10_Pos          (8U)\n 6082: #define GPIO_AFRH_AFSEL10_Msk          (0xFUL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000F00 */\n 6083: #define GPIO_AFRH_AFSEL10              GPIO_AFRH_AFSEL10_Msk\n 6084: #define GPIO_AFRH_AFSEL10_0            (0x1UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000100 */\n 6085: #define GPIO_AFRH_AFSEL10_1            (0x2UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000200 */\n 6086: #define GPIO_AFRH_AFSEL10_2            (0x4UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000400 */\n 6087: #define GPIO_AFRH_AFSEL10_3            (0x8UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000800 */\n 6088: #define GPIO_AFRH_AFSEL11_Pos          (12U)\n 6089: #define GPIO_AFRH_AFSEL11_Msk          (0xFUL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x0000F000 */\n 6090: #define GPIO_AFRH_AFSEL11              GPIO_AFRH_AFSEL11_Msk\n 6091: #define GPIO_AFRH_AFSEL11_0            (0x1UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00001000 */\n 6092: #define GPIO_AFRH_AFSEL11_1            (0x2UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00002000 */\n 6093: #define GPIO_AFRH_AFSEL11_2            (0x4UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00004000 */\n 6094: #define GPIO_AFRH_AFSEL11_3            (0x8UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00008000 */\n 6095: #define GPIO_AFRH_AFSEL12_Pos          (16U)\n 6096: #define GPIO_AFRH_AFSEL12_Msk          (0xFUL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x000F0000 */\n 6097: #define GPIO_AFRH_AFSEL12              GPIO_AFRH_AFSEL12_Msk\n 6098: #define GPIO_AFRH_AFSEL12_0            (0x1UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00010000 */\n 6099: #define GPIO_AFRH_AFSEL12_1            (0x2UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00020000 */\n 6100: #define GPIO_AFRH_AFSEL12_2            (0x4UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00040000 */\n 6101: #define GPIO_AFRH_AFSEL12_3            (0x8UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00080000 */\n 6102: #define GPIO_AFRH_AFSEL13_Pos          (20U)\n 6103: #define GPIO_AFRH_AFSEL13_Msk          (0xFUL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00F00000 */\n 6104: #define GPIO_AFRH_AFSEL13              GPIO_AFRH_AFSEL13_Msk\n 6105: #define GPIO_AFRH_AFSEL13_0            (0x1UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00100000 */\n 6106: #define GPIO_AFRH_AFSEL13_1            (0x2UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00200000 */\n 6107: #define GPIO_AFRH_AFSEL13_2            (0x4UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00400000 */\n 6108: #define GPIO_AFRH_AFSEL13_3            (0x8UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00800000 */\n 6109: #define GPIO_AFRH_AFSEL14_Pos          (24U)\n 6110: #define GPIO_AFRH_AFSEL14_Msk          (0xFUL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x0F000000 */\n 6111: #define GPIO_AFRH_AFSEL14              GPIO_AFRH_AFSEL14_Msk\n 6112: #define GPIO_AFRH_AFSEL14_0            (0x1UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x01000000 */\n 6113: #define GPIO_AFRH_AFSEL14_1            (0x2UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x02000000 */\n 6114: #define GPIO_AFRH_AFSEL14_2            (0x4UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x04000000 */\n 6115: #define GPIO_AFRH_AFSEL14_3            (0x8UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x08000000 */\n 6116: #define GPIO_AFRH_AFSEL15_Pos          (28U)\n 6117: #define GPIO_AFRH_AFSEL15_Msk          (0xFUL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0xF0000000 */\n 6118: #define GPIO_AFRH_AFSEL15              GPIO_AFRH_AFSEL15_Msk\n 6119: #define GPIO_AFRH_AFSEL15_0            (0x1UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x10000000 */\n 6120: #define GPIO_AFRH_AFSEL15_1            (0x2UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x20000000 */\n 6121: #define GPIO_AFRH_AFSEL15_2            (0x4UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x40000000 */\n 6122: #define GPIO_AFRH_AFSEL15_3            (0x8UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x80000000 */\n 6123  \n 6124  /* Legacy defines */\n 6125: #define GPIO_AFRH_AFRH0                      GPIO_AFRH_AFSEL8\n 6126: #define GPIO_AFRH_AFRH1                      GPIO_AFRH_AFSEL9\n 6127: #define GPIO_AFRH_AFRH2                      GPIO_AFRH_AFSEL10\n 6128: #define GPIO_AFRH_AFRH3                      GPIO_AFRH_AFSEL11\n 6129: #define GPIO_AFRH_AFRH4                      GPIO_AFRH_AFSEL12\n 6130: #define GPIO_AFRH_AFRH5                      GPIO_AFRH_AFSEL13\n 6131: #define GPIO_AFRH_AFRH6                      GPIO_AFRH_AFSEL14\n 6132: #define GPIO_AFRH_AFRH7                      GPIO_AFRH_AFSEL15\n 6133  \n 6134  /******************  Bits definition for GPIO_BRR register  ******************/\n ....\n 13116  \n 13117  /******************************* GPIO AF Instances ****************************/\n 13118: #define IS_GPIO_AF_INSTANCE(INSTANCE)   IS_GPIO_ALL_INSTANCE(INSTANCE)\n 13119  \n 13120  /**************************** GPIO Lock Instances *****************************/\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g473xx.h:\n 6537  #define GPIO_LCKR_LCKK                 GPIO_LCKR_LCKK_Msk\n 6538  \n 6539: /****************** Bit definition for GPIO_AFRL register *********************/\n 6540: #define GPIO_AFRL_AFSEL0_Pos           (0U)\n 6541: #define GPIO_AFRL_AFSEL0_Msk           (0xFUL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x0000000F */\n 6542: #define GPIO_AFRL_AFSEL0               GPIO_AFRL_AFSEL0_Msk\n 6543: #define GPIO_AFRL_AFSEL0_0             (0x1UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000001 */\n 6544: #define GPIO_AFRL_AFSEL0_1             (0x2UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000002 */\n 6545: #define GPIO_AFRL_AFSEL0_2             (0x4UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000004 */\n 6546: #define GPIO_AFRL_AFSEL0_3             (0x8UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000008 */\n 6547: #define GPIO_AFRL_AFSEL1_Pos           (4U)\n 6548: #define GPIO_AFRL_AFSEL1_Msk           (0xFUL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x000000F0 */\n 6549: #define GPIO_AFRL_AFSEL1               GPIO_AFRL_AFSEL1_Msk\n 6550: #define GPIO_AFRL_AFSEL1_0             (0x1UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000010 */\n 6551: #define GPIO_AFRL_AFSEL1_1             (0x2UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000020 */\n 6552: #define GPIO_AFRL_AFSEL1_2             (0x4UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000040 */\n 6553: #define GPIO_AFRL_AFSEL1_3             (0x8UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000080 */\n 6554: #define GPIO_AFRL_AFSEL2_Pos           (8U)\n 6555: #define GPIO_AFRL_AFSEL2_Msk           (0xFUL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000F00 */\n 6556: #define GPIO_AFRL_AFSEL2               GPIO_AFRL_AFSEL2_Msk\n 6557: #define GPIO_AFRL_AFSEL2_0             (0x1UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000100 */\n 6558: #define GPIO_AFRL_AFSEL2_1             (0x2UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000200 */\n 6559: #define GPIO_AFRL_AFSEL2_2             (0x4UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000400 */\n 6560: #define GPIO_AFRL_AFSEL2_3             (0x8UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000800 */\n 6561: #define GPIO_AFRL_AFSEL3_Pos           (12U)\n 6562: #define GPIO_AFRL_AFSEL3_Msk           (0xFUL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x0000F000 */\n 6563: #define GPIO_AFRL_AFSEL3               GPIO_AFRL_AFSEL3_Msk\n 6564: #define GPIO_AFRL_AFSEL3_0             (0x1UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00001000 */\n 6565: #define GPIO_AFRL_AFSEL3_1             (0x2UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00002000 */\n 6566: #define GPIO_AFRL_AFSEL3_2             (0x4UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00004000 */\n 6567: #define GPIO_AFRL_AFSEL3_3             (0x8UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00008000 */\n 6568: #define GPIO_AFRL_AFSEL4_Pos           (16U)\n 6569: #define GPIO_AFRL_AFSEL4_Msk           (0xFUL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x000F0000 */\n 6570: #define GPIO_AFRL_AFSEL4               GPIO_AFRL_AFSEL4_Msk\n 6571: #define GPIO_AFRL_AFSEL4_0             (0x1UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00010000 */\n 6572: #define GPIO_AFRL_AFSEL4_1             (0x2UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00020000 */\n 6573: #define GPIO_AFRL_AFSEL4_2             (0x4UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00040000 */\n 6574: #define GPIO_AFRL_AFSEL4_3             (0x8UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00080000 */\n 6575: #define GPIO_AFRL_AFSEL5_Pos           (20U)\n 6576: #define GPIO_AFRL_AFSEL5_Msk           (0xFUL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00F00000 */\n 6577: #define GPIO_AFRL_AFSEL5               GPIO_AFRL_AFSEL5_Msk\n 6578: #define GPIO_AFRL_AFSEL5_0             (0x1UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00100000 */\n 6579: #define GPIO_AFRL_AFSEL5_1             (0x2UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00200000 */\n 6580: #define GPIO_AFRL_AFSEL5_2             (0x4UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00400000 */\n 6581: #define GPIO_AFRL_AFSEL5_3             (0x8UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00800000 */\n 6582: #define GPIO_AFRL_AFSEL6_Pos           (24U)\n 6583: #define GPIO_AFRL_AFSEL6_Msk           (0xFUL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x0F000000 */\n 6584: #define GPIO_AFRL_AFSEL6               GPIO_AFRL_AFSEL6_Msk\n 6585: #define GPIO_AFRL_AFSEL6_0             (0x1UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x01000000 */\n 6586: #define GPIO_AFRL_AFSEL6_1             (0x2UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x02000000 */\n 6587: #define GPIO_AFRL_AFSEL6_2             (0x4UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x04000000 */\n 6588: #define GPIO_AFRL_AFSEL6_3             (0x8UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x08000000 */\n 6589: #define GPIO_AFRL_AFSEL7_Pos           (28U)\n 6590: #define GPIO_AFRL_AFSEL7_Msk           (0xFUL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0xF0000000 */\n 6591: #define GPIO_AFRL_AFSEL7               GPIO_AFRL_AFSEL7_Msk\n 6592: #define GPIO_AFRL_AFSEL7_0             (0x1UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x10000000 */\n 6593: #define GPIO_AFRL_AFSEL7_1             (0x2UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x20000000 */\n 6594: #define GPIO_AFRL_AFSEL7_2             (0x4UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x40000000 */\n 6595: #define GPIO_AFRL_AFSEL7_3             (0x8UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x80000000 */\n 6596  \n 6597  /* Legacy defines */\n 6598: #define GPIO_AFRL_AFRL0                      GPIO_AFRL_AFSEL0\n 6599: #define GPIO_AFRL_AFRL1                      GPIO_AFRL_AFSEL1\n 6600: #define GPIO_AFRL_AFRL2                      GPIO_AFRL_AFSEL2\n 6601: #define GPIO_AFRL_AFRL3                      GPIO_AFRL_AFSEL3\n 6602: #define GPIO_AFRL_AFRL4                      GPIO_AFRL_AFSEL4\n 6603: #define GPIO_AFRL_AFRL5                      GPIO_AFRL_AFSEL5\n 6604: #define GPIO_AFRL_AFRL6                      GPIO_AFRL_AFSEL6\n 6605: #define GPIO_AFRL_AFRL7                      GPIO_AFRL_AFSEL7\n 6606  \n 6607: /****************** Bit definition for GPIO_AFRH register *********************/\n 6608: #define GPIO_AFRH_AFSEL8_Pos           (0U)\n 6609: #define GPIO_AFRH_AFSEL8_Msk           (0xFUL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x0000000F */\n 6610: #define GPIO_AFRH_AFSEL8               GPIO_AFRH_AFSEL8_Msk\n 6611: #define GPIO_AFRH_AFSEL8_0             (0x1UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000001 */\n 6612: #define GPIO_AFRH_AFSEL8_1             (0x2UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000002 */\n 6613: #define GPIO_AFRH_AFSEL8_2             (0x4UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000004 */\n 6614: #define GPIO_AFRH_AFSEL8_3             (0x8UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000008 */\n 6615: #define GPIO_AFRH_AFSEL9_Pos           (4U)\n 6616: #define GPIO_AFRH_AFSEL9_Msk           (0xFUL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x000000F0 */\n 6617: #define GPIO_AFRH_AFSEL9               GPIO_AFRH_AFSEL9_Msk\n 6618: #define GPIO_AFRH_AFSEL9_0             (0x1UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000010 */\n 6619: #define GPIO_AFRH_AFSEL9_1             (0x2UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000020 */\n 6620: #define GPIO_AFRH_AFSEL9_2             (0x4UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000040 */\n 6621: #define GPIO_AFRH_AFSEL9_3             (0x8UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000080 */\n 6622: #define GPIO_AFRH_AFSEL10_Pos          (8U)\n 6623: #define GPIO_AFRH_AFSEL10_Msk          (0xFUL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000F00 */\n 6624: #define GPIO_AFRH_AFSEL10              GPIO_AFRH_AFSEL10_Msk\n 6625: #define GPIO_AFRH_AFSEL10_0            (0x1UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000100 */\n 6626: #define GPIO_AFRH_AFSEL10_1            (0x2UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000200 */\n 6627: #define GPIO_AFRH_AFSEL10_2            (0x4UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000400 */\n 6628: #define GPIO_AFRH_AFSEL10_3            (0x8UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000800 */\n 6629: #define GPIO_AFRH_AFSEL11_Pos          (12U)\n 6630: #define GPIO_AFRH_AFSEL11_Msk          (0xFUL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x0000F000 */\n 6631: #define GPIO_AFRH_AFSEL11              GPIO_AFRH_AFSEL11_Msk\n 6632: #define GPIO_AFRH_AFSEL11_0            (0x1UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00001000 */\n 6633: #define GPIO_AFRH_AFSEL11_1            (0x2UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00002000 */\n 6634: #define GPIO_AFRH_AFSEL11_2            (0x4UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00004000 */\n 6635: #define GPIO_AFRH_AFSEL11_3            (0x8UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00008000 */\n 6636: #define GPIO_AFRH_AFSEL12_Pos          (16U)\n 6637: #define GPIO_AFRH_AFSEL12_Msk          (0xFUL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x000F0000 */\n 6638: #define GPIO_AFRH_AFSEL12              GPIO_AFRH_AFSEL12_Msk\n 6639: #define GPIO_AFRH_AFSEL12_0            (0x1UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00010000 */\n 6640: #define GPIO_AFRH_AFSEL12_1            (0x2UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00020000 */\n 6641: #define GPIO_AFRH_AFSEL12_2            (0x4UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00040000 */\n 6642: #define GPIO_AFRH_AFSEL12_3            (0x8UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00080000 */\n 6643: #define GPIO_AFRH_AFSEL13_Pos          (20U)\n 6644: #define GPIO_AFRH_AFSEL13_Msk          (0xFUL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00F00000 */\n 6645: #define GPIO_AFRH_AFSEL13              GPIO_AFRH_AFSEL13_Msk\n 6646: #define GPIO_AFRH_AFSEL13_0            (0x1UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00100000 */\n 6647: #define GPIO_AFRH_AFSEL13_1            (0x2UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00200000 */\n 6648: #define GPIO_AFRH_AFSEL13_2            (0x4UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00400000 */\n 6649: #define GPIO_AFRH_AFSEL13_3            (0x8UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00800000 */\n 6650: #define GPIO_AFRH_AFSEL14_Pos          (24U)\n 6651: #define GPIO_AFRH_AFSEL14_Msk          (0xFUL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x0F000000 */\n 6652: #define GPIO_AFRH_AFSEL14              GPIO_AFRH_AFSEL14_Msk\n 6653: #define GPIO_AFRH_AFSEL14_0            (0x1UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x01000000 */\n 6654: #define GPIO_AFRH_AFSEL14_1            (0x2UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x02000000 */\n 6655: #define GPIO_AFRH_AFSEL14_2            (0x4UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x04000000 */\n 6656: #define GPIO_AFRH_AFSEL14_3            (0x8UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x08000000 */\n 6657: #define GPIO_AFRH_AFSEL15_Pos          (28U)\n 6658: #define GPIO_AFRH_AFSEL15_Msk          (0xFUL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0xF0000000 */\n 6659: #define GPIO_AFRH_AFSEL15              GPIO_AFRH_AFSEL15_Msk\n 6660: #define GPIO_AFRH_AFSEL15_0            (0x1UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x10000000 */\n 6661: #define GPIO_AFRH_AFSEL15_1            (0x2UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x20000000 */\n 6662: #define GPIO_AFRH_AFSEL15_2            (0x4UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x40000000 */\n 6663: #define GPIO_AFRH_AFSEL15_3            (0x8UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x80000000 */\n 6664  \n 6665  /* Legacy defines */\n 6666: #define GPIO_AFRH_AFRH0                      GPIO_AFRH_AFSEL8\n 6667: #define GPIO_AFRH_AFRH1                      GPIO_AFRH_AFSEL9\n 6668: #define GPIO_AFRH_AFRH2                      GPIO_AFRH_AFSEL10\n 6669: #define GPIO_AFRH_AFRH3                      GPIO_AFRH_AFSEL11\n 6670: #define GPIO_AFRH_AFRH4                      GPIO_AFRH_AFSEL12\n 6671: #define GPIO_AFRH_AFRH5                      GPIO_AFRH_AFSEL13\n 6672: #define GPIO_AFRH_AFRH6                      GPIO_AFRH_AFSEL14\n 6673: #define GPIO_AFRH_AFRH7                      GPIO_AFRH_AFSEL15\n 6674  \n 6675  /******************  Bits definition for GPIO_BRR register  ******************/\n ....\n 13917  \n 13918  /******************************* GPIO AF Instances ****************************/\n 13919: #define IS_GPIO_AF_INSTANCE(INSTANCE)   IS_GPIO_ALL_INSTANCE(INSTANCE)\n 13920  \n 13921  /**************************** GPIO Lock Instances *****************************/\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g474xx.h:\n 6675  #define GPIO_LCKR_LCKK                 GPIO_LCKR_LCKK_Msk\n 6676  \n 6677: /****************** Bit definition for GPIO_AFRL register *********************/\n 6678: #define GPIO_AFRL_AFSEL0_Pos           (0U)\n 6679: #define GPIO_AFRL_AFSEL0_Msk           (0xFUL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x0000000F */\n 6680: #define GPIO_AFRL_AFSEL0               GPIO_AFRL_AFSEL0_Msk\n 6681: #define GPIO_AFRL_AFSEL0_0             (0x1UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000001 */\n 6682: #define GPIO_AFRL_AFSEL0_1             (0x2UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000002 */\n 6683: #define GPIO_AFRL_AFSEL0_2             (0x4UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000004 */\n 6684: #define GPIO_AFRL_AFSEL0_3             (0x8UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000008 */\n 6685: #define GPIO_AFRL_AFSEL1_Pos           (4U)\n 6686: #define GPIO_AFRL_AFSEL1_Msk           (0xFUL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x000000F0 */\n 6687: #define GPIO_AFRL_AFSEL1               GPIO_AFRL_AFSEL1_Msk\n 6688: #define GPIO_AFRL_AFSEL1_0             (0x1UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000010 */\n 6689: #define GPIO_AFRL_AFSEL1_1             (0x2UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000020 */\n 6690: #define GPIO_AFRL_AFSEL1_2             (0x4UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000040 */\n 6691: #define GPIO_AFRL_AFSEL1_3             (0x8UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000080 */\n 6692: #define GPIO_AFRL_AFSEL2_Pos           (8U)\n 6693: #define GPIO_AFRL_AFSEL2_Msk           (0xFUL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000F00 */\n 6694: #define GPIO_AFRL_AFSEL2               GPIO_AFRL_AFSEL2_Msk\n 6695: #define GPIO_AFRL_AFSEL2_0             (0x1UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000100 */\n 6696: #define GPIO_AFRL_AFSEL2_1             (0x2UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000200 */\n 6697: #define GPIO_AFRL_AFSEL2_2             (0x4UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000400 */\n 6698: #define GPIO_AFRL_AFSEL2_3             (0x8UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000800 */\n 6699: #define GPIO_AFRL_AFSEL3_Pos           (12U)\n 6700: #define GPIO_AFRL_AFSEL3_Msk           (0xFUL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x0000F000 */\n 6701: #define GPIO_AFRL_AFSEL3               GPIO_AFRL_AFSEL3_Msk\n 6702: #define GPIO_AFRL_AFSEL3_0             (0x1UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00001000 */\n 6703: #define GPIO_AFRL_AFSEL3_1             (0x2UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00002000 */\n 6704: #define GPIO_AFRL_AFSEL3_2             (0x4UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00004000 */\n 6705: #define GPIO_AFRL_AFSEL3_3             (0x8UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00008000 */\n 6706: #define GPIO_AFRL_AFSEL4_Pos           (16U)\n 6707: #define GPIO_AFRL_AFSEL4_Msk           (0xFUL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x000F0000 */\n 6708: #define GPIO_AFRL_AFSEL4               GPIO_AFRL_AFSEL4_Msk\n 6709: #define GPIO_AFRL_AFSEL4_0             (0x1UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00010000 */\n 6710: #define GPIO_AFRL_AFSEL4_1             (0x2UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00020000 */\n 6711: #define GPIO_AFRL_AFSEL4_2             (0x4UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00040000 */\n 6712: #define GPIO_AFRL_AFSEL4_3             (0x8UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00080000 */\n 6713: #define GPIO_AFRL_AFSEL5_Pos           (20U)\n 6714: #define GPIO_AFRL_AFSEL5_Msk           (0xFUL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00F00000 */\n 6715: #define GPIO_AFRL_AFSEL5               GPIO_AFRL_AFSEL5_Msk\n 6716: #define GPIO_AFRL_AFSEL5_0             (0x1UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00100000 */\n 6717: #define GPIO_AFRL_AFSEL5_1             (0x2UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00200000 */\n 6718: #define GPIO_AFRL_AFSEL5_2             (0x4UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00400000 */\n 6719: #define GPIO_AFRL_AFSEL5_3             (0x8UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00800000 */\n 6720: #define GPIO_AFRL_AFSEL6_Pos           (24U)\n 6721: #define GPIO_AFRL_AFSEL6_Msk           (0xFUL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x0F000000 */\n 6722: #define GPIO_AFRL_AFSEL6               GPIO_AFRL_AFSEL6_Msk\n 6723: #define GPIO_AFRL_AFSEL6_0             (0x1UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x01000000 */\n 6724: #define GPIO_AFRL_AFSEL6_1             (0x2UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x02000000 */\n 6725: #define GPIO_AFRL_AFSEL6_2             (0x4UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x04000000 */\n 6726: #define GPIO_AFRL_AFSEL6_3             (0x8UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x08000000 */\n 6727: #define GPIO_AFRL_AFSEL7_Pos           (28U)\n 6728: #define GPIO_AFRL_AFSEL7_Msk           (0xFUL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0xF0000000 */\n 6729: #define GPIO_AFRL_AFSEL7               GPIO_AFRL_AFSEL7_Msk\n 6730: #define GPIO_AFRL_AFSEL7_0             (0x1UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x10000000 */\n 6731: #define GPIO_AFRL_AFSEL7_1             (0x2UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x20000000 */\n 6732: #define GPIO_AFRL_AFSEL7_2             (0x4UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x40000000 */\n 6733: #define GPIO_AFRL_AFSEL7_3             (0x8UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x80000000 */\n 6734  \n 6735  /* Legacy defines */\n 6736: #define GPIO_AFRL_AFRL0                      GPIO_AFRL_AFSEL0\n 6737: #define GPIO_AFRL_AFRL1                      GPIO_AFRL_AFSEL1\n 6738: #define GPIO_AFRL_AFRL2                      GPIO_AFRL_AFSEL2\n 6739: #define GPIO_AFRL_AFRL3                      GPIO_AFRL_AFSEL3\n 6740: #define GPIO_AFRL_AFRL4                      GPIO_AFRL_AFSEL4\n 6741: #define GPIO_AFRL_AFRL5                      GPIO_AFRL_AFSEL5\n 6742: #define GPIO_AFRL_AFRL6                      GPIO_AFRL_AFSEL6\n 6743: #define GPIO_AFRL_AFRL7                      GPIO_AFRL_AFSEL7\n 6744  \n 6745: /****************** Bit definition for GPIO_AFRH register *********************/\n 6746: #define GPIO_AFRH_AFSEL8_Pos           (0U)\n 6747: #define GPIO_AFRH_AFSEL8_Msk           (0xFUL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x0000000F */\n 6748: #define GPIO_AFRH_AFSEL8               GPIO_AFRH_AFSEL8_Msk\n 6749: #define GPIO_AFRH_AFSEL8_0             (0x1UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000001 */\n 6750: #define GPIO_AFRH_AFSEL8_1             (0x2UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000002 */\n 6751: #define GPIO_AFRH_AFSEL8_2             (0x4UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000004 */\n 6752: #define GPIO_AFRH_AFSEL8_3             (0x8UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000008 */\n 6753: #define GPIO_AFRH_AFSEL9_Pos           (4U)\n 6754: #define GPIO_AFRH_AFSEL9_Msk           (0xFUL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x000000F0 */\n 6755: #define GPIO_AFRH_AFSEL9               GPIO_AFRH_AFSEL9_Msk\n 6756: #define GPIO_AFRH_AFSEL9_0             (0x1UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000010 */\n 6757: #define GPIO_AFRH_AFSEL9_1             (0x2UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000020 */\n 6758: #define GPIO_AFRH_AFSEL9_2             (0x4UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000040 */\n 6759: #define GPIO_AFRH_AFSEL9_3             (0x8UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000080 */\n 6760: #define GPIO_AFRH_AFSEL10_Pos          (8U)\n 6761: #define GPIO_AFRH_AFSEL10_Msk          (0xFUL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000F00 */\n 6762: #define GPIO_AFRH_AFSEL10              GPIO_AFRH_AFSEL10_Msk\n 6763: #define GPIO_AFRH_AFSEL10_0            (0x1UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000100 */\n 6764: #define GPIO_AFRH_AFSEL10_1            (0x2UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000200 */\n 6765: #define GPIO_AFRH_AFSEL10_2            (0x4UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000400 */\n 6766: #define GPIO_AFRH_AFSEL10_3            (0x8UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000800 */\n 6767: #define GPIO_AFRH_AFSEL11_Pos          (12U)\n 6768: #define GPIO_AFRH_AFSEL11_Msk          (0xFUL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x0000F000 */\n 6769: #define GPIO_AFRH_AFSEL11              GPIO_AFRH_AFSEL11_Msk\n 6770: #define GPIO_AFRH_AFSEL11_0            (0x1UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00001000 */\n 6771: #define GPIO_AFRH_AFSEL11_1            (0x2UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00002000 */\n 6772: #define GPIO_AFRH_AFSEL11_2            (0x4UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00004000 */\n 6773: #define GPIO_AFRH_AFSEL11_3            (0x8UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00008000 */\n 6774: #define GPIO_AFRH_AFSEL12_Pos          (16U)\n 6775: #define GPIO_AFRH_AFSEL12_Msk          (0xFUL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x000F0000 */\n 6776: #define GPIO_AFRH_AFSEL12              GPIO_AFRH_AFSEL12_Msk\n 6777: #define GPIO_AFRH_AFSEL12_0            (0x1UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00010000 */\n 6778: #define GPIO_AFRH_AFSEL12_1            (0x2UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00020000 */\n 6779: #define GPIO_AFRH_AFSEL12_2            (0x4UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00040000 */\n 6780: #define GPIO_AFRH_AFSEL12_3            (0x8UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00080000 */\n 6781: #define GPIO_AFRH_AFSEL13_Pos          (20U)\n 6782: #define GPIO_AFRH_AFSEL13_Msk          (0xFUL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00F00000 */\n 6783: #define GPIO_AFRH_AFSEL13              GPIO_AFRH_AFSEL13_Msk\n 6784: #define GPIO_AFRH_AFSEL13_0            (0x1UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00100000 */\n 6785: #define GPIO_AFRH_AFSEL13_1            (0x2UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00200000 */\n 6786: #define GPIO_AFRH_AFSEL13_2            (0x4UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00400000 */\n 6787: #define GPIO_AFRH_AFSEL13_3            (0x8UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00800000 */\n 6788: #define GPIO_AFRH_AFSEL14_Pos          (24U)\n 6789: #define GPIO_AFRH_AFSEL14_Msk          (0xFUL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x0F000000 */\n 6790: #define GPIO_AFRH_AFSEL14              GPIO_AFRH_AFSEL14_Msk\n 6791: #define GPIO_AFRH_AFSEL14_0            (0x1UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x01000000 */\n 6792: #define GPIO_AFRH_AFSEL14_1            (0x2UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x02000000 */\n 6793: #define GPIO_AFRH_AFSEL14_2            (0x4UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x04000000 */\n 6794: #define GPIO_AFRH_AFSEL14_3            (0x8UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x08000000 */\n 6795: #define GPIO_AFRH_AFSEL15_Pos          (28U)\n 6796: #define GPIO_AFRH_AFSEL15_Msk          (0xFUL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0xF0000000 */\n 6797: #define GPIO_AFRH_AFSEL15              GPIO_AFRH_AFSEL15_Msk\n 6798: #define GPIO_AFRH_AFSEL15_0            (0x1UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x10000000 */\n 6799: #define GPIO_AFRH_AFSEL15_1            (0x2UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x20000000 */\n 6800: #define GPIO_AFRH_AFSEL15_2            (0x4UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x40000000 */\n 6801: #define GPIO_AFRH_AFSEL15_3            (0x8UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x80000000 */\n 6802  \n 6803  /* Legacy defines */\n 6804: #define GPIO_AFRH_AFRH0                      GPIO_AFRH_AFSEL8\n 6805: #define GPIO_AFRH_AFRH1                      GPIO_AFRH_AFSEL9\n 6806: #define GPIO_AFRH_AFRH2                      GPIO_AFRH_AFSEL10\n 6807: #define GPIO_AFRH_AFRH3                      GPIO_AFRH_AFSEL11\n 6808: #define GPIO_AFRH_AFRH4                      GPIO_AFRH_AFSEL12\n 6809: #define GPIO_AFRH_AFRH5                      GPIO_AFRH_AFSEL13\n 6810: #define GPIO_AFRH_AFRH6                      GPIO_AFRH_AFSEL14\n 6811: #define GPIO_AFRH_AFRH7                      GPIO_AFRH_AFSEL15\n 6812  \n 6813  /******************  Bits definition for GPIO_BRR register  ******************/\n ....\n 17279  \n 17280  /******************************* GPIO AF Instances ****************************/\n 17281: #define IS_GPIO_AF_INSTANCE(INSTANCE)   IS_GPIO_ALL_INSTANCE(INSTANCE)\n 17282  \n 17283  /**************************** GPIO Lock Instances *****************************/\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g483xx.h:\n 6759  #define GPIO_LCKR_LCKK                 GPIO_LCKR_LCKK_Msk\n 6760  \n 6761: /****************** Bit definition for GPIO_AFRL register *********************/\n 6762: #define GPIO_AFRL_AFSEL0_Pos           (0U)\n 6763: #define GPIO_AFRL_AFSEL0_Msk           (0xFUL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x0000000F */\n 6764: #define GPIO_AFRL_AFSEL0               GPIO_AFRL_AFSEL0_Msk\n 6765: #define GPIO_AFRL_AFSEL0_0             (0x1UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000001 */\n 6766: #define GPIO_AFRL_AFSEL0_1             (0x2UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000002 */\n 6767: #define GPIO_AFRL_AFSEL0_2             (0x4UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000004 */\n 6768: #define GPIO_AFRL_AFSEL0_3             (0x8UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000008 */\n 6769: #define GPIO_AFRL_AFSEL1_Pos           (4U)\n 6770: #define GPIO_AFRL_AFSEL1_Msk           (0xFUL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x000000F0 */\n 6771: #define GPIO_AFRL_AFSEL1               GPIO_AFRL_AFSEL1_Msk\n 6772: #define GPIO_AFRL_AFSEL1_0             (0x1UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000010 */\n 6773: #define GPIO_AFRL_AFSEL1_1             (0x2UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000020 */\n 6774: #define GPIO_AFRL_AFSEL1_2             (0x4UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000040 */\n 6775: #define GPIO_AFRL_AFSEL1_3             (0x8UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000080 */\n 6776: #define GPIO_AFRL_AFSEL2_Pos           (8U)\n 6777: #define GPIO_AFRL_AFSEL2_Msk           (0xFUL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000F00 */\n 6778: #define GPIO_AFRL_AFSEL2               GPIO_AFRL_AFSEL2_Msk\n 6779: #define GPIO_AFRL_AFSEL2_0             (0x1UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000100 */\n 6780: #define GPIO_AFRL_AFSEL2_1             (0x2UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000200 */\n 6781: #define GPIO_AFRL_AFSEL2_2             (0x4UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000400 */\n 6782: #define GPIO_AFRL_AFSEL2_3             (0x8UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000800 */\n 6783: #define GPIO_AFRL_AFSEL3_Pos           (12U)\n 6784: #define GPIO_AFRL_AFSEL3_Msk           (0xFUL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x0000F000 */\n 6785: #define GPIO_AFRL_AFSEL3               GPIO_AFRL_AFSEL3_Msk\n 6786: #define GPIO_AFRL_AFSEL3_0             (0x1UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00001000 */\n 6787: #define GPIO_AFRL_AFSEL3_1             (0x2UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00002000 */\n 6788: #define GPIO_AFRL_AFSEL3_2             (0x4UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00004000 */\n 6789: #define GPIO_AFRL_AFSEL3_3             (0x8UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00008000 */\n 6790: #define GPIO_AFRL_AFSEL4_Pos           (16U)\n 6791: #define GPIO_AFRL_AFSEL4_Msk           (0xFUL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x000F0000 */\n 6792: #define GPIO_AFRL_AFSEL4               GPIO_AFRL_AFSEL4_Msk\n 6793: #define GPIO_AFRL_AFSEL4_0             (0x1UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00010000 */\n 6794: #define GPIO_AFRL_AFSEL4_1             (0x2UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00020000 */\n 6795: #define GPIO_AFRL_AFSEL4_2             (0x4UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00040000 */\n 6796: #define GPIO_AFRL_AFSEL4_3             (0x8UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00080000 */\n 6797: #define GPIO_AFRL_AFSEL5_Pos           (20U)\n 6798: #define GPIO_AFRL_AFSEL5_Msk           (0xFUL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00F00000 */\n 6799: #define GPIO_AFRL_AFSEL5               GPIO_AFRL_AFSEL5_Msk\n 6800: #define GPIO_AFRL_AFSEL5_0             (0x1UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00100000 */\n 6801: #define GPIO_AFRL_AFSEL5_1             (0x2UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00200000 */\n 6802: #define GPIO_AFRL_AFSEL5_2             (0x4UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00400000 */\n 6803: #define GPIO_AFRL_AFSEL5_3             (0x8UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00800000 */\n 6804: #define GPIO_AFRL_AFSEL6_Pos           (24U)\n 6805: #define GPIO_AFRL_AFSEL6_Msk           (0xFUL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x0F000000 */\n 6806: #define GPIO_AFRL_AFSEL6               GPIO_AFRL_AFSEL6_Msk\n 6807: #define GPIO_AFRL_AFSEL6_0             (0x1UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x01000000 */\n 6808: #define GPIO_AFRL_AFSEL6_1             (0x2UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x02000000 */\n 6809: #define GPIO_AFRL_AFSEL6_2             (0x4UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x04000000 */\n 6810: #define GPIO_AFRL_AFSEL6_3             (0x8UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x08000000 */\n 6811: #define GPIO_AFRL_AFSEL7_Pos           (28U)\n 6812: #define GPIO_AFRL_AFSEL7_Msk           (0xFUL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0xF0000000 */\n 6813: #define GPIO_AFRL_AFSEL7               GPIO_AFRL_AFSEL7_Msk\n 6814: #define GPIO_AFRL_AFSEL7_0             (0x1UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x10000000 */\n 6815: #define GPIO_AFRL_AFSEL7_1             (0x2UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x20000000 */\n 6816: #define GPIO_AFRL_AFSEL7_2             (0x4UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x40000000 */\n 6817: #define GPIO_AFRL_AFSEL7_3             (0x8UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x80000000 */\n 6818  \n 6819  /* Legacy defines */\n 6820: #define GPIO_AFRL_AFRL0                      GPIO_AFRL_AFSEL0\n 6821: #define GPIO_AFRL_AFRL1                      GPIO_AFRL_AFSEL1\n 6822: #define GPIO_AFRL_AFRL2                      GPIO_AFRL_AFSEL2\n 6823: #define GPIO_AFRL_AFRL3                      GPIO_AFRL_AFSEL3\n 6824: #define GPIO_AFRL_AFRL4                      GPIO_AFRL_AFSEL4\n 6825: #define GPIO_AFRL_AFRL5                      GPIO_AFRL_AFSEL5\n 6826: #define GPIO_AFRL_AFRL6                      GPIO_AFRL_AFSEL6\n 6827: #define GPIO_AFRL_AFRL7                      GPIO_AFRL_AFSEL7\n 6828  \n 6829: /****************** Bit definition for GPIO_AFRH register *********************/\n 6830: #define GPIO_AFRH_AFSEL8_Pos           (0U)\n 6831: #define GPIO_AFRH_AFSEL8_Msk           (0xFUL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x0000000F */\n 6832: #define GPIO_AFRH_AFSEL8               GPIO_AFRH_AFSEL8_Msk\n 6833: #define GPIO_AFRH_AFSEL8_0             (0x1UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000001 */\n 6834: #define GPIO_AFRH_AFSEL8_1             (0x2UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000002 */\n 6835: #define GPIO_AFRH_AFSEL8_2             (0x4UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000004 */\n 6836: #define GPIO_AFRH_AFSEL8_3             (0x8UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000008 */\n 6837: #define GPIO_AFRH_AFSEL9_Pos           (4U)\n 6838: #define GPIO_AFRH_AFSEL9_Msk           (0xFUL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x000000F0 */\n 6839: #define GPIO_AFRH_AFSEL9               GPIO_AFRH_AFSEL9_Msk\n 6840: #define GPIO_AFRH_AFSEL9_0             (0x1UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000010 */\n 6841: #define GPIO_AFRH_AFSEL9_1             (0x2UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000020 */\n 6842: #define GPIO_AFRH_AFSEL9_2             (0x4UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000040 */\n 6843: #define GPIO_AFRH_AFSEL9_3             (0x8UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000080 */\n 6844: #define GPIO_AFRH_AFSEL10_Pos          (8U)\n 6845: #define GPIO_AFRH_AFSEL10_Msk          (0xFUL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000F00 */\n 6846: #define GPIO_AFRH_AFSEL10              GPIO_AFRH_AFSEL10_Msk\n 6847: #define GPIO_AFRH_AFSEL10_0            (0x1UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000100 */\n 6848: #define GPIO_AFRH_AFSEL10_1            (0x2UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000200 */\n 6849: #define GPIO_AFRH_AFSEL10_2            (0x4UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000400 */\n 6850: #define GPIO_AFRH_AFSEL10_3            (0x8UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000800 */\n 6851: #define GPIO_AFRH_AFSEL11_Pos          (12U)\n 6852: #define GPIO_AFRH_AFSEL11_Msk          (0xFUL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x0000F000 */\n 6853: #define GPIO_AFRH_AFSEL11              GPIO_AFRH_AFSEL11_Msk\n 6854: #define GPIO_AFRH_AFSEL11_0            (0x1UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00001000 */\n 6855: #define GPIO_AFRH_AFSEL11_1            (0x2UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00002000 */\n 6856: #define GPIO_AFRH_AFSEL11_2            (0x4UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00004000 */\n 6857: #define GPIO_AFRH_AFSEL11_3            (0x8UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00008000 */\n 6858: #define GPIO_AFRH_AFSEL12_Pos          (16U)\n 6859: #define GPIO_AFRH_AFSEL12_Msk          (0xFUL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x000F0000 */\n 6860: #define GPIO_AFRH_AFSEL12              GPIO_AFRH_AFSEL12_Msk\n 6861: #define GPIO_AFRH_AFSEL12_0            (0x1UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00010000 */\n 6862: #define GPIO_AFRH_AFSEL12_1            (0x2UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00020000 */\n 6863: #define GPIO_AFRH_AFSEL12_2            (0x4UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00040000 */\n 6864: #define GPIO_AFRH_AFSEL12_3            (0x8UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00080000 */\n 6865: #define GPIO_AFRH_AFSEL13_Pos          (20U)\n 6866: #define GPIO_AFRH_AFSEL13_Msk          (0xFUL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00F00000 */\n 6867: #define GPIO_AFRH_AFSEL13              GPIO_AFRH_AFSEL13_Msk\n 6868: #define GPIO_AFRH_AFSEL13_0            (0x1UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00100000 */\n 6869: #define GPIO_AFRH_AFSEL13_1            (0x2UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00200000 */\n 6870: #define GPIO_AFRH_AFSEL13_2            (0x4UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00400000 */\n 6871: #define GPIO_AFRH_AFSEL13_3            (0x8UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00800000 */\n 6872: #define GPIO_AFRH_AFSEL14_Pos          (24U)\n 6873: #define GPIO_AFRH_AFSEL14_Msk          (0xFUL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x0F000000 */\n 6874: #define GPIO_AFRH_AFSEL14              GPIO_AFRH_AFSEL14_Msk\n 6875: #define GPIO_AFRH_AFSEL14_0            (0x1UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x01000000 */\n 6876: #define GPIO_AFRH_AFSEL14_1            (0x2UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x02000000 */\n 6877: #define GPIO_AFRH_AFSEL14_2            (0x4UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x04000000 */\n 6878: #define GPIO_AFRH_AFSEL14_3            (0x8UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x08000000 */\n 6879: #define GPIO_AFRH_AFSEL15_Pos          (28U)\n 6880: #define GPIO_AFRH_AFSEL15_Msk          (0xFUL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0xF0000000 */\n 6881: #define GPIO_AFRH_AFSEL15              GPIO_AFRH_AFSEL15_Msk\n 6882: #define GPIO_AFRH_AFSEL15_0            (0x1UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x10000000 */\n 6883: #define GPIO_AFRH_AFSEL15_1            (0x2UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x20000000 */\n 6884: #define GPIO_AFRH_AFSEL15_2            (0x4UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x40000000 */\n 6885: #define GPIO_AFRH_AFSEL15_3            (0x8UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x80000000 */\n 6886  \n 6887  /* Legacy defines */\n 6888: #define GPIO_AFRH_AFRH0                      GPIO_AFRH_AFSEL8\n 6889: #define GPIO_AFRH_AFRH1                      GPIO_AFRH_AFSEL9\n 6890: #define GPIO_AFRH_AFRH2                      GPIO_AFRH_AFSEL10\n 6891: #define GPIO_AFRH_AFRH3                      GPIO_AFRH_AFSEL11\n 6892: #define GPIO_AFRH_AFRH4                      GPIO_AFRH_AFSEL12\n 6893: #define GPIO_AFRH_AFRH5                      GPIO_AFRH_AFSEL13\n 6894: #define GPIO_AFRH_AFRH6                      GPIO_AFRH_AFSEL14\n 6895: #define GPIO_AFRH_AFRH7                      GPIO_AFRH_AFSEL15\n 6896  \n 6897  /******************  Bits definition for GPIO_BRR register  ******************/\n ....\n 14150  \n 14151  /******************************* GPIO AF Instances ****************************/\n 14152: #define IS_GPIO_AF_INSTANCE(INSTANCE)   IS_GPIO_ALL_INSTANCE(INSTANCE)\n 14153  \n 14154  /**************************** GPIO Lock Instances *****************************/\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g484xx.h:\n 6897  #define GPIO_LCKR_LCKK                 GPIO_LCKR_LCKK_Msk\n 6898  \n 6899: /****************** Bit definition for GPIO_AFRL register *********************/\n 6900: #define GPIO_AFRL_AFSEL0_Pos           (0U)\n 6901: #define GPIO_AFRL_AFSEL0_Msk           (0xFUL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x0000000F */\n 6902: #define GPIO_AFRL_AFSEL0               GPIO_AFRL_AFSEL0_Msk\n 6903: #define GPIO_AFRL_AFSEL0_0             (0x1UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000001 */\n 6904: #define GPIO_AFRL_AFSEL0_1             (0x2UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000002 */\n 6905: #define GPIO_AFRL_AFSEL0_2             (0x4UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000004 */\n 6906: #define GPIO_AFRL_AFSEL0_3             (0x8UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000008 */\n 6907: #define GPIO_AFRL_AFSEL1_Pos           (4U)\n 6908: #define GPIO_AFRL_AFSEL1_Msk           (0xFUL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x000000F0 */\n 6909: #define GPIO_AFRL_AFSEL1               GPIO_AFRL_AFSEL1_Msk\n 6910: #define GPIO_AFRL_AFSEL1_0             (0x1UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000010 */\n 6911: #define GPIO_AFRL_AFSEL1_1             (0x2UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000020 */\n 6912: #define GPIO_AFRL_AFSEL1_2             (0x4UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000040 */\n 6913: #define GPIO_AFRL_AFSEL1_3             (0x8UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000080 */\n 6914: #define GPIO_AFRL_AFSEL2_Pos           (8U)\n 6915: #define GPIO_AFRL_AFSEL2_Msk           (0xFUL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000F00 */\n 6916: #define GPIO_AFRL_AFSEL2               GPIO_AFRL_AFSEL2_Msk\n 6917: #define GPIO_AFRL_AFSEL2_0             (0x1UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000100 */\n 6918: #define GPIO_AFRL_AFSEL2_1             (0x2UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000200 */\n 6919: #define GPIO_AFRL_AFSEL2_2             (0x4UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000400 */\n 6920: #define GPIO_AFRL_AFSEL2_3             (0x8UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000800 */\n 6921: #define GPIO_AFRL_AFSEL3_Pos           (12U)\n 6922: #define GPIO_AFRL_AFSEL3_Msk           (0xFUL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x0000F000 */\n 6923: #define GPIO_AFRL_AFSEL3               GPIO_AFRL_AFSEL3_Msk\n 6924: #define GPIO_AFRL_AFSEL3_0             (0x1UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00001000 */\n 6925: #define GPIO_AFRL_AFSEL3_1             (0x2UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00002000 */\n 6926: #define GPIO_AFRL_AFSEL3_2             (0x4UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00004000 */\n 6927: #define GPIO_AFRL_AFSEL3_3             (0x8UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00008000 */\n 6928: #define GPIO_AFRL_AFSEL4_Pos           (16U)\n 6929: #define GPIO_AFRL_AFSEL4_Msk           (0xFUL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x000F0000 */\n 6930: #define GPIO_AFRL_AFSEL4               GPIO_AFRL_AFSEL4_Msk\n 6931: #define GPIO_AFRL_AFSEL4_0             (0x1UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00010000 */\n 6932: #define GPIO_AFRL_AFSEL4_1             (0x2UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00020000 */\n 6933: #define GPIO_AFRL_AFSEL4_2             (0x4UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00040000 */\n 6934: #define GPIO_AFRL_AFSEL4_3             (0x8UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00080000 */\n 6935: #define GPIO_AFRL_AFSEL5_Pos           (20U)\n 6936: #define GPIO_AFRL_AFSEL5_Msk           (0xFUL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00F00000 */\n 6937: #define GPIO_AFRL_AFSEL5               GPIO_AFRL_AFSEL5_Msk\n 6938: #define GPIO_AFRL_AFSEL5_0             (0x1UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00100000 */\n 6939: #define GPIO_AFRL_AFSEL5_1             (0x2UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00200000 */\n 6940: #define GPIO_AFRL_AFSEL5_2             (0x4UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00400000 */\n 6941: #define GPIO_AFRL_AFSEL5_3             (0x8UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00800000 */\n 6942: #define GPIO_AFRL_AFSEL6_Pos           (24U)\n 6943: #define GPIO_AFRL_AFSEL6_Msk           (0xFUL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x0F000000 */\n 6944: #define GPIO_AFRL_AFSEL6               GPIO_AFRL_AFSEL6_Msk\n 6945: #define GPIO_AFRL_AFSEL6_0             (0x1UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x01000000 */\n 6946: #define GPIO_AFRL_AFSEL6_1             (0x2UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x02000000 */\n 6947: #define GPIO_AFRL_AFSEL6_2             (0x4UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x04000000 */\n 6948: #define GPIO_AFRL_AFSEL6_3             (0x8UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x08000000 */\n 6949: #define GPIO_AFRL_AFSEL7_Pos           (28U)\n 6950: #define GPIO_AFRL_AFSEL7_Msk           (0xFUL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0xF0000000 */\n 6951: #define GPIO_AFRL_AFSEL7               GPIO_AFRL_AFSEL7_Msk\n 6952: #define GPIO_AFRL_AFSEL7_0             (0x1UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x10000000 */\n 6953: #define GPIO_AFRL_AFSEL7_1             (0x2UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x20000000 */\n 6954: #define GPIO_AFRL_AFSEL7_2             (0x4UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x40000000 */\n 6955: #define GPIO_AFRL_AFSEL7_3             (0x8UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x80000000 */\n 6956  \n 6957  /* Legacy defines */\n 6958: #define GPIO_AFRL_AFRL0                      GPIO_AFRL_AFSEL0\n 6959: #define GPIO_AFRL_AFRL1                      GPIO_AFRL_AFSEL1\n 6960: #define GPIO_AFRL_AFRL2                      GPIO_AFRL_AFSEL2\n 6961: #define GPIO_AFRL_AFRL3                      GPIO_AFRL_AFSEL3\n 6962: #define GPIO_AFRL_AFRL4                      GPIO_AFRL_AFSEL4\n 6963: #define GPIO_AFRL_AFRL5                      GPIO_AFRL_AFSEL5\n 6964: #define GPIO_AFRL_AFRL6                      GPIO_AFRL_AFSEL6\n 6965: #define GPIO_AFRL_AFRL7                      GPIO_AFRL_AFSEL7\n 6966  \n 6967: /****************** Bit definition for GPIO_AFRH register *********************/\n 6968: #define GPIO_AFRH_AFSEL8_Pos           (0U)\n 6969: #define GPIO_AFRH_AFSEL8_Msk           (0xFUL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x0000000F */\n 6970: #define GPIO_AFRH_AFSEL8               GPIO_AFRH_AFSEL8_Msk\n 6971: #define GPIO_AFRH_AFSEL8_0             (0x1UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000001 */\n 6972: #define GPIO_AFRH_AFSEL8_1             (0x2UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000002 */\n 6973: #define GPIO_AFRH_AFSEL8_2             (0x4UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000004 */\n 6974: #define GPIO_AFRH_AFSEL8_3             (0x8UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000008 */\n 6975: #define GPIO_AFRH_AFSEL9_Pos           (4U)\n 6976: #define GPIO_AFRH_AFSEL9_Msk           (0xFUL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x000000F0 */\n 6977: #define GPIO_AFRH_AFSEL9               GPIO_AFRH_AFSEL9_Msk\n 6978: #define GPIO_AFRH_AFSEL9_0             (0x1UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000010 */\n 6979: #define GPIO_AFRH_AFSEL9_1             (0x2UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000020 */\n 6980: #define GPIO_AFRH_AFSEL9_2             (0x4UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000040 */\n 6981: #define GPIO_AFRH_AFSEL9_3             (0x8UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000080 */\n 6982: #define GPIO_AFRH_AFSEL10_Pos          (8U)\n 6983: #define GPIO_AFRH_AFSEL10_Msk          (0xFUL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000F00 */\n 6984: #define GPIO_AFRH_AFSEL10              GPIO_AFRH_AFSEL10_Msk\n 6985: #define GPIO_AFRH_AFSEL10_0            (0x1UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000100 */\n 6986: #define GPIO_AFRH_AFSEL10_1            (0x2UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000200 */\n 6987: #define GPIO_AFRH_AFSEL10_2            (0x4UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000400 */\n 6988: #define GPIO_AFRH_AFSEL10_3            (0x8UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000800 */\n 6989: #define GPIO_AFRH_AFSEL11_Pos          (12U)\n 6990: #define GPIO_AFRH_AFSEL11_Msk          (0xFUL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x0000F000 */\n 6991: #define GPIO_AFRH_AFSEL11              GPIO_AFRH_AFSEL11_Msk\n 6992: #define GPIO_AFRH_AFSEL11_0            (0x1UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00001000 */\n 6993: #define GPIO_AFRH_AFSEL11_1            (0x2UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00002000 */\n 6994: #define GPIO_AFRH_AFSEL11_2            (0x4UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00004000 */\n 6995: #define GPIO_AFRH_AFSEL11_3            (0x8UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00008000 */\n 6996: #define GPIO_AFRH_AFSEL12_Pos          (16U)\n 6997: #define GPIO_AFRH_AFSEL12_Msk          (0xFUL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x000F0000 */\n 6998: #define GPIO_AFRH_AFSEL12              GPIO_AFRH_AFSEL12_Msk\n 6999: #define GPIO_AFRH_AFSEL12_0            (0x1UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00010000 */\n 7000: #define GPIO_AFRH_AFSEL12_1            (0x2UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00020000 */\n 7001: #define GPIO_AFRH_AFSEL12_2            (0x4UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00040000 */\n 7002: #define GPIO_AFRH_AFSEL12_3            (0x8UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00080000 */\n 7003: #define GPIO_AFRH_AFSEL13_Pos          (20U)\n 7004: #define GPIO_AFRH_AFSEL13_Msk          (0xFUL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00F00000 */\n 7005: #define GPIO_AFRH_AFSEL13              GPIO_AFRH_AFSEL13_Msk\n 7006: #define GPIO_AFRH_AFSEL13_0            (0x1UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00100000 */\n 7007: #define GPIO_AFRH_AFSEL13_1            (0x2UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00200000 */\n 7008: #define GPIO_AFRH_AFSEL13_2            (0x4UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00400000 */\n 7009: #define GPIO_AFRH_AFSEL13_3            (0x8UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00800000 */\n 7010: #define GPIO_AFRH_AFSEL14_Pos          (24U)\n 7011: #define GPIO_AFRH_AFSEL14_Msk          (0xFUL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x0F000000 */\n 7012: #define GPIO_AFRH_AFSEL14              GPIO_AFRH_AFSEL14_Msk\n 7013: #define GPIO_AFRH_AFSEL14_0            (0x1UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x01000000 */\n 7014: #define GPIO_AFRH_AFSEL14_1            (0x2UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x02000000 */\n 7015: #define GPIO_AFRH_AFSEL14_2            (0x4UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x04000000 */\n 7016: #define GPIO_AFRH_AFSEL14_3            (0x8UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x08000000 */\n 7017: #define GPIO_AFRH_AFSEL15_Pos          (28U)\n 7018: #define GPIO_AFRH_AFSEL15_Msk          (0xFUL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0xF0000000 */\n 7019: #define GPIO_AFRH_AFSEL15              GPIO_AFRH_AFSEL15_Msk\n 7020: #define GPIO_AFRH_AFSEL15_0            (0x1UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x10000000 */\n 7021: #define GPIO_AFRH_AFSEL15_1            (0x2UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x20000000 */\n 7022: #define GPIO_AFRH_AFSEL15_2            (0x4UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x40000000 */\n 7023: #define GPIO_AFRH_AFSEL15_3            (0x8UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x80000000 */\n 7024  \n 7025  /* Legacy defines */\n 7026: #define GPIO_AFRH_AFRH0                      GPIO_AFRH_AFSEL8\n 7027: #define GPIO_AFRH_AFRH1                      GPIO_AFRH_AFSEL9\n 7028: #define GPIO_AFRH_AFRH2                      GPIO_AFRH_AFSEL10\n 7029: #define GPIO_AFRH_AFRH3                      GPIO_AFRH_AFSEL11\n 7030: #define GPIO_AFRH_AFRH4                      GPIO_AFRH_AFSEL12\n 7031: #define GPIO_AFRH_AFRH5                      GPIO_AFRH_AFSEL13\n 7032: #define GPIO_AFRH_AFRH6                      GPIO_AFRH_AFSEL14\n 7033: #define GPIO_AFRH_AFRH7                      GPIO_AFRH_AFSEL15\n 7034  \n 7035  /******************  Bits definition for GPIO_BRR register  ******************/\n ....\n 17512  \n 17513  /******************************* GPIO AF Instances ****************************/\n 17514: #define IS_GPIO_AF_INSTANCE(INSTANCE)   IS_GPIO_ALL_INSTANCE(INSTANCE)\n 17515  \n 17516  /**************************** GPIO Lock Instances *****************************/\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32gbk1cb.h:\n 5775  #define GPIO_LCKR_LCKK                 GPIO_LCKR_LCKK_Msk\n 5776  \n 5777: /****************** Bit definition for GPIO_AFRL register *********************/\n 5778: #define GPIO_AFRL_AFSEL0_Pos           (0U)\n 5779: #define GPIO_AFRL_AFSEL0_Msk           (0xFUL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x0000000F */\n 5780: #define GPIO_AFRL_AFSEL0               GPIO_AFRL_AFSEL0_Msk\n 5781: #define GPIO_AFRL_AFSEL0_0             (0x1UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000001 */\n 5782: #define GPIO_AFRL_AFSEL0_1             (0x2UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000002 */\n 5783: #define GPIO_AFRL_AFSEL0_2             (0x4UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000004 */\n 5784: #define GPIO_AFRL_AFSEL0_3             (0x8UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000008 */\n 5785: #define GPIO_AFRL_AFSEL1_Pos           (4U)\n 5786: #define GPIO_AFRL_AFSEL1_Msk           (0xFUL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x000000F0 */\n 5787: #define GPIO_AFRL_AFSEL1               GPIO_AFRL_AFSEL1_Msk\n 5788: #define GPIO_AFRL_AFSEL1_0             (0x1UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000010 */\n 5789: #define GPIO_AFRL_AFSEL1_1             (0x2UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000020 */\n 5790: #define GPIO_AFRL_AFSEL1_2             (0x4UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000040 */\n 5791: #define GPIO_AFRL_AFSEL1_3             (0x8UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000080 */\n 5792: #define GPIO_AFRL_AFSEL2_Pos           (8U)\n 5793: #define GPIO_AFRL_AFSEL2_Msk           (0xFUL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000F00 */\n 5794: #define GPIO_AFRL_AFSEL2               GPIO_AFRL_AFSEL2_Msk\n 5795: #define GPIO_AFRL_AFSEL2_0             (0x1UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000100 */\n 5796: #define GPIO_AFRL_AFSEL2_1             (0x2UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000200 */\n 5797: #define GPIO_AFRL_AFSEL2_2             (0x4UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000400 */\n 5798: #define GPIO_AFRL_AFSEL2_3             (0x8UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000800 */\n 5799: #define GPIO_AFRL_AFSEL3_Pos           (12U)\n 5800: #define GPIO_AFRL_AFSEL3_Msk           (0xFUL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x0000F000 */\n 5801: #define GPIO_AFRL_AFSEL3               GPIO_AFRL_AFSEL3_Msk\n 5802: #define GPIO_AFRL_AFSEL3_0             (0x1UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00001000 */\n 5803: #define GPIO_AFRL_AFSEL3_1             (0x2UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00002000 */\n 5804: #define GPIO_AFRL_AFSEL3_2             (0x4UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00004000 */\n 5805: #define GPIO_AFRL_AFSEL3_3             (0x8UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00008000 */\n 5806: #define GPIO_AFRL_AFSEL4_Pos           (16U)\n 5807: #define GPIO_AFRL_AFSEL4_Msk           (0xFUL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x000F0000 */\n 5808: #define GPIO_AFRL_AFSEL4               GPIO_AFRL_AFSEL4_Msk\n 5809: #define GPIO_AFRL_AFSEL4_0             (0x1UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00010000 */\n 5810: #define GPIO_AFRL_AFSEL4_1             (0x2UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00020000 */\n 5811: #define GPIO_AFRL_AFSEL4_2             (0x4UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00040000 */\n 5812: #define GPIO_AFRL_AFSEL4_3             (0x8UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00080000 */\n 5813: #define GPIO_AFRL_AFSEL5_Pos           (20U)\n 5814: #define GPIO_AFRL_AFSEL5_Msk           (0xFUL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00F00000 */\n 5815: #define GPIO_AFRL_AFSEL5               GPIO_AFRL_AFSEL5_Msk\n 5816: #define GPIO_AFRL_AFSEL5_0             (0x1UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00100000 */\n 5817: #define GPIO_AFRL_AFSEL5_1             (0x2UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00200000 */\n 5818: #define GPIO_AFRL_AFSEL5_2             (0x4UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00400000 */\n 5819: #define GPIO_AFRL_AFSEL5_3             (0x8UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00800000 */\n 5820: #define GPIO_AFRL_AFSEL6_Pos           (24U)\n 5821: #define GPIO_AFRL_AFSEL6_Msk           (0xFUL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x0F000000 */\n 5822: #define GPIO_AFRL_AFSEL6               GPIO_AFRL_AFSEL6_Msk\n 5823: #define GPIO_AFRL_AFSEL6_0             (0x1UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x01000000 */\n 5824: #define GPIO_AFRL_AFSEL6_1             (0x2UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x02000000 */\n 5825: #define GPIO_AFRL_AFSEL6_2             (0x4UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x04000000 */\n 5826: #define GPIO_AFRL_AFSEL6_3             (0x8UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x08000000 */\n 5827: #define GPIO_AFRL_AFSEL7_Pos           (28U)\n 5828: #define GPIO_AFRL_AFSEL7_Msk           (0xFUL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0xF0000000 */\n 5829: #define GPIO_AFRL_AFSEL7               GPIO_AFRL_AFSEL7_Msk\n 5830: #define GPIO_AFRL_AFSEL7_0             (0x1UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x10000000 */\n 5831: #define GPIO_AFRL_AFSEL7_1             (0x2UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x20000000 */\n 5832: #define GPIO_AFRL_AFSEL7_2             (0x4UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x40000000 */\n 5833: #define GPIO_AFRL_AFSEL7_3             (0x8UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x80000000 */\n 5834  \n 5835  /* Legacy defines */\n 5836: #define GPIO_AFRL_AFRL0                      GPIO_AFRL_AFSEL0\n 5837: #define GPIO_AFRL_AFRL1                      GPIO_AFRL_AFSEL1\n 5838: #define GPIO_AFRL_AFRL2                      GPIO_AFRL_AFSEL2\n 5839: #define GPIO_AFRL_AFRL3                      GPIO_AFRL_AFSEL3\n 5840: #define GPIO_AFRL_AFRL4                      GPIO_AFRL_AFSEL4\n 5841: #define GPIO_AFRL_AFRL5                      GPIO_AFRL_AFSEL5\n 5842: #define GPIO_AFRL_AFRL6                      GPIO_AFRL_AFSEL6\n 5843: #define GPIO_AFRL_AFRL7                      GPIO_AFRL_AFSEL7\n 5844  \n 5845: /****************** Bit definition for GPIO_AFRH register *********************/\n 5846: #define GPIO_AFRH_AFSEL8_Pos           (0U)\n 5847: #define GPIO_AFRH_AFSEL8_Msk           (0xFUL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x0000000F */\n 5848: #define GPIO_AFRH_AFSEL8               GPIO_AFRH_AFSEL8_Msk\n 5849: #define GPIO_AFRH_AFSEL8_0             (0x1UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000001 */\n 5850: #define GPIO_AFRH_AFSEL8_1             (0x2UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000002 */\n 5851: #define GPIO_AFRH_AFSEL8_2             (0x4UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000004 */\n 5852: #define GPIO_AFRH_AFSEL8_3             (0x8UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000008 */\n 5853: #define GPIO_AFRH_AFSEL9_Pos           (4U)\n 5854: #define GPIO_AFRH_AFSEL9_Msk           (0xFUL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x000000F0 */\n 5855: #define GPIO_AFRH_AFSEL9               GPIO_AFRH_AFSEL9_Msk\n 5856: #define GPIO_AFRH_AFSEL9_0             (0x1UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000010 */\n 5857: #define GPIO_AFRH_AFSEL9_1             (0x2UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000020 */\n 5858: #define GPIO_AFRH_AFSEL9_2             (0x4UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000040 */\n 5859: #define GPIO_AFRH_AFSEL9_3             (0x8UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000080 */\n 5860: #define GPIO_AFRH_AFSEL10_Pos          (8U)\n 5861: #define GPIO_AFRH_AFSEL10_Msk          (0xFUL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000F00 */\n 5862: #define GPIO_AFRH_AFSEL10              GPIO_AFRH_AFSEL10_Msk\n 5863: #define GPIO_AFRH_AFSEL10_0            (0x1UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000100 */\n 5864: #define GPIO_AFRH_AFSEL10_1            (0x2UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000200 */\n 5865: #define GPIO_AFRH_AFSEL10_2            (0x4UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000400 */\n 5866: #define GPIO_AFRH_AFSEL10_3            (0x8UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000800 */\n 5867: #define GPIO_AFRH_AFSEL11_Pos          (12U)\n 5868: #define GPIO_AFRH_AFSEL11_Msk          (0xFUL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x0000F000 */\n 5869: #define GPIO_AFRH_AFSEL11              GPIO_AFRH_AFSEL11_Msk\n 5870: #define GPIO_AFRH_AFSEL11_0            (0x1UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00001000 */\n 5871: #define GPIO_AFRH_AFSEL11_1            (0x2UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00002000 */\n 5872: #define GPIO_AFRH_AFSEL11_2            (0x4UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00004000 */\n 5873: #define GPIO_AFRH_AFSEL11_3            (0x8UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00008000 */\n 5874: #define GPIO_AFRH_AFSEL12_Pos          (16U)\n 5875: #define GPIO_AFRH_AFSEL12_Msk          (0xFUL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x000F0000 */\n 5876: #define GPIO_AFRH_AFSEL12              GPIO_AFRH_AFSEL12_Msk\n 5877: #define GPIO_AFRH_AFSEL12_0            (0x1UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00010000 */\n 5878: #define GPIO_AFRH_AFSEL12_1            (0x2UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00020000 */\n 5879: #define GPIO_AFRH_AFSEL12_2            (0x4UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00040000 */\n 5880: #define GPIO_AFRH_AFSEL12_3            (0x8UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00080000 */\n 5881: #define GPIO_AFRH_AFSEL13_Pos          (20U)\n 5882: #define GPIO_AFRH_AFSEL13_Msk          (0xFUL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00F00000 */\n 5883: #define GPIO_AFRH_AFSEL13              GPIO_AFRH_AFSEL13_Msk\n 5884: #define GPIO_AFRH_AFSEL13_0            (0x1UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00100000 */\n 5885: #define GPIO_AFRH_AFSEL13_1            (0x2UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00200000 */\n 5886: #define GPIO_AFRH_AFSEL13_2            (0x4UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00400000 */\n 5887: #define GPIO_AFRH_AFSEL13_3            (0x8UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00800000 */\n 5888: #define GPIO_AFRH_AFSEL14_Pos          (24U)\n 5889: #define GPIO_AFRH_AFSEL14_Msk          (0xFUL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x0F000000 */\n 5890: #define GPIO_AFRH_AFSEL14              GPIO_AFRH_AFSEL14_Msk\n 5891: #define GPIO_AFRH_AFSEL14_0            (0x1UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x01000000 */\n 5892: #define GPIO_AFRH_AFSEL14_1            (0x2UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x02000000 */\n 5893: #define GPIO_AFRH_AFSEL14_2            (0x4UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x04000000 */\n 5894: #define GPIO_AFRH_AFSEL14_3            (0x8UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x08000000 */\n 5895: #define GPIO_AFRH_AFSEL15_Pos          (28U)\n 5896: #define GPIO_AFRH_AFSEL15_Msk          (0xFUL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0xF0000000 */\n 5897: #define GPIO_AFRH_AFSEL15              GPIO_AFRH_AFSEL15_Msk\n 5898: #define GPIO_AFRH_AFSEL15_0            (0x1UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x10000000 */\n 5899: #define GPIO_AFRH_AFSEL15_1            (0x2UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x20000000 */\n 5900: #define GPIO_AFRH_AFSEL15_2            (0x4UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x40000000 */\n 5901: #define GPIO_AFRH_AFSEL15_3            (0x8UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x80000000 */\n 5902  \n 5903  /* Legacy defines */\n 5904: #define GPIO_AFRH_AFRH0                      GPIO_AFRH_AFSEL8\n 5905: #define GPIO_AFRH_AFRH1                      GPIO_AFRH_AFSEL9\n 5906: #define GPIO_AFRH_AFRH2                      GPIO_AFRH_AFSEL10\n 5907: #define GPIO_AFRH_AFRH3                      GPIO_AFRH_AFSEL11\n 5908: #define GPIO_AFRH_AFRH4                      GPIO_AFRH_AFSEL12\n 5909: #define GPIO_AFRH_AFRH5                      GPIO_AFRH_AFSEL13\n 5910: #define GPIO_AFRH_AFRH6                      GPIO_AFRH_AFSEL14\n 5911: #define GPIO_AFRH_AFRH7                      GPIO_AFRH_AFSEL15\n 5912  \n 5913  /******************  Bits definition for GPIO_BRR register  ******************/\n ....\n 12548  \n 12549  /******************************* GPIO AF Instances ****************************/\n 12550: #define IS_GPIO_AF_INSTANCE(INSTANCE)   IS_GPIO_ALL_INSTANCE(INSTANCE)\n 12551  \n 12552  /**************************** GPIO Lock Instances *****************************/\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_gpio_ex.h:\n   52    * @brief   AF 0 selection\n   53    */\n   54: #define GPIO_AF0_RTC_50Hz      ((uint8_t)0x00)  /* RTC_50Hz Alternate Function mapping                       */\n   55: #define GPIO_AF0_MCO           ((uint8_t)0x00)  /* MCO (MCO1 and MCO2) Alternate Function mapping            */\n   56: #define GPIO_AF0_SWJ           ((uint8_t)0x00)  /* SWJ (SWD and JTAG) Alternate Function mapping             */\n   57: #define GPIO_AF0_TRACE         ((uint8_t)0x00)  /* TRACE Alternate Function mapping                          */\n   58  \n   59  /**\n   60    * @brief   AF 1 selection\n   61    */\n   62: #define GPIO_AF1_TIM2          ((uint8_t)0x01)  /* TIM2 Alternate Function mapping   */\n   63  #if defined(TIM5)\n   64: #define GPIO_AF1_TIM5          ((uint8_t)0x01)  /* TIM5 Alternate Function mapping   */\n   65  #endif /* TIM5 */\n   66: #define GPIO_AF1_TIM16         ((uint8_t)0x01)  /* TIM16 Alternate Function mapping  */\n   67: #define GPIO_AF1_TIM17         ((uint8_t)0x01)  /* TIM17 Alternate Function mapping  */\n   68: #define GPIO_AF1_TIM17_COMP1   ((uint8_t)0x01)  /* TIM17/COMP1 Break in Alternate Function mapping  */\n   69: #define GPIO_AF1_TIM15         ((uint8_t)0x01)  /* TIM15 Alternate Function mapping  */\n   70: #define GPIO_AF1_LPTIM1        ((uint8_t)0x01)  /* LPTIM1 Alternate Function mapping */\n   71: #define GPIO_AF1_IR            ((uint8_t)0x01)  /* IR Alternate Function mapping     */\n   72  \n   73  /**\n   74    * @brief   AF 2 selection\n   75    */\n   76: #define GPIO_AF2_TIM1          ((uint8_t)0x02)  /* TIM1 Alternate Function mapping  */\n   77: #define GPIO_AF2_TIM2          ((uint8_t)0x02)  /* TIM2 Alternate Function mapping  */\n   78: #define GPIO_AF2_TIM3          ((uint8_t)0x02)  /* TIM3 Alternate Function mapping  */\n   79: #define GPIO_AF2_TIM4          ((uint8_t)0x02)  /* TIM4 Alternate Function mapping  */\n   80  #if defined(TIM5)\n   81: #define GPIO_AF2_TIM5          ((uint8_t)0x02)  /* TIM5 Alternate Function mapping  */\n   82  #endif /* TIM5 */\n   83: #define GPIO_AF2_TIM8          ((uint8_t)0x02)  /* TIM8 Alternate Function mapping  */\n   84: #define GPIO_AF2_TIM15         ((uint8_t)0x02)  /* TIM15 Alternate Function mapping */\n   85: #define GPIO_AF2_TIM16         ((uint8_t)0x02)  /* TIM16 Alternate Function mapping */\n   86  #if defined(TIM20)\n   87: #define GPIO_AF2_TIM20         ((uint8_t)0x02)  /* TIM20 Alternate Function mapping */\n   88  #endif /* TIM20 */\n   89: #define GPIO_AF2_TIM1_COMP1    ((uint8_t)0x02)  /* TIM1/COMP1 Break in Alternate Function mapping   */\n   90: #define GPIO_AF2_TIM15_COMP1   ((uint8_t)0x02)  /* TIM15/COMP1 Break in Alternate Function mapping  */\n   91: #define GPIO_AF2_TIM16_COMP1   ((uint8_t)0x02)  /* TIM16/COMP1 Break in Alternate Function mapping  */\n   92  #if defined(TIM20)\n   93: #define GPIO_AF2_TIM20_COMP1   ((uint8_t)0x02)  /* TIM20/COMP1 Break in Alternate Function mapping  */\n   94: #define GPIO_AF2_TIM20_COMP2   ((uint8_t)0x02)  /* TIM20/COMP2 Break in Alternate Function mapping  */\n   95  #endif /* TIM20 */\n   96: #define GPIO_AF2_I2C3          ((uint8_t)0x02)  /* I2C3 Alternate Function mapping  */\n   97: #define GPIO_AF2_COMP1         ((uint8_t)0x02)  /* COMP1 Alternate Function mapping */\n   98  \n   99  /**\n  100    * @brief   AF 3 selection\n  101    */\n  102: #define GPIO_AF3_TIM15         ((uint8_t)0x03)  /* TIM15 Alternate Function mapping   */\n  103  #if defined(TIM20)\n  104: #define GPIO_AF3_TIM20         ((uint8_t)0x03)  /* TIM20 Alternate Function mapping   */\n  105  #endif /* TIM20 */\n  106: #define GPIO_AF3_UCPD1         ((uint8_t)0x03)  /* UCPD1 Alternate Function mapping   */\n  107: #define GPIO_AF3_I2C3          ((uint8_t)0x03)  /* I2C3 Alternate Function mapping    */\n  108  #if defined(I2C4)\n  109: #define GPIO_AF3_I2C4          ((uint8_t)0x03)  /* I2C4 Alternate Function mapping    */\n  110  #endif /* I2C4 */\n  111  #if defined(HRTIM1)\n  112: #define GPIO_AF3_HRTIM1        ((uint8_t)0x03)  /* HRTIM1 Alternate Function mapping  */\n  113  #endif /* HRTIM1 */\n  114  #if defined(QUADSPI)\n  115: #define GPIO_AF3_QUADSPI       ((uint8_t)0x03)  /* QUADSPI Alternate Function mapping */\n  116  #endif /* QUADSPI */\n  117: #define GPIO_AF3_TIM8          ((uint8_t)0x03)  /* TIM8 Alternate Function mapping    */\n  118: #define GPIO_AF3_SAI1          ((uint8_t)0x03)  /* SAI1 Alternate Function mapping  */\n  119: #define GPIO_AF3_COMP3         ((uint8_t)0x03)  /* COMP3 Alternate Function mapping */\n  120  \n  121  /**\n  122    * @brief   AF 4 selection\n  123    */\n  124: #define GPIO_AF4_TIM1          ((uint8_t)0x04)  /* TIM1 Alternate Function mapping    */\n  125: #define GPIO_AF4_TIM8          ((uint8_t)0x04)  /* TIM8 Alternate Function mapping    */\n  126: #define GPIO_AF4_TIM16         ((uint8_t)0x04)  /* TIM16 Alternate Function mapping   */\n  127: #define GPIO_AF4_TIM17         ((uint8_t)0x04)  /* TIM17 Alternate Function mapping   */\n  128: #define GPIO_AF4_TIM8_COMP1    ((uint8_t)0x04)  /* TIM8/COMP1 Break in Alternate Function mapping  */\n  129: #define GPIO_AF4_I2C1          ((uint8_t)0x04)  /* I2C1 Alternate Function mapping    */\n  130: #define GPIO_AF4_I2C2          ((uint8_t)0x04)  /* I2C2 Alternate Function mapping    */\n  131: #define GPIO_AF4_I2C3          ((uint8_t)0x04)  /* I2C3 Alternate Function mapping    */\n  132  #if defined(I2C4)\n  133: #define GPIO_AF4_I2C4          ((uint8_t)0x04)  /* I2C4 Alternate Function mapping    */\n  134  #endif /* I2C4 */\n  135  \n  ...\n  137    * @brief   AF 5 selection\n  138    */\n  139: #define GPIO_AF5_SPI1          ((uint8_t)0x05)  /* SPI1 Alternate Function mapping       */\n  140: #define GPIO_AF5_SPI2          ((uint8_t)0x05)  /* SPI2 Alternate Function mapping       */\n  141  #if defined(SPI4)\n  142: #define GPIO_AF5_SPI4          ((uint8_t)0x05)  /* SPI4 Alternate Function mapping       */\n  143  #endif /* SPI4 */\n  144: #define GPIO_AF5_IR            ((uint8_t)0x05)  /* IR Alternate Function mapping         */\n  145: #define GPIO_AF5_TIM8          ((uint8_t)0x05)  /* TIM8 Alternate Function mapping       */\n  146: #define GPIO_AF5_TIM8_COMP1    ((uint8_t)0x05)  /* TIM8/COMP1 Break in Alternate Function mapping  */\n  147: #define GPIO_AF5_UART4         ((uint8_t)0x05)  /* UART4 Alternate Function mapping      */\n  148  #if defined(UART5)\n  149: #define GPIO_AF5_UART5         ((uint8_t)0x05)  /* UART5 Alternate Function mapping      */\n  150  #endif /* UART5 */\n  151: #define GPIO_AF5_I2S2ext       ((uint8_t)0x05)  /* I2S2ext_SD Alternate Function mapping */\n  152  \n  153  /**\n  154    * @brief   AF 6 selection\n  155    */\n  156: #define GPIO_AF6_SPI2          ((uint8_t)0x06)  /* SPI2 Alternate Function mapping       */\n  157: #define GPIO_AF6_SPI3          ((uint8_t)0x06)  /* SPI3 Alternate Function mapping       */\n  158: #define GPIO_AF6_TIM1          ((uint8_t)0x06)  /* TIM1 Alternate Function mapping       */\n  159  #if defined(TIM5)\n  160: #define GPIO_AF6_TIM5          ((uint8_t)0x06)  /* TIM5 Alternate Function mapping       */\n  161  #endif /* TIM5 */\n  162: #define GPIO_AF6_TIM8          ((uint8_t)0x06)  /* TIM8 Alternate Function mapping       */\n  163  #if defined(TIM20)\n  164: #define GPIO_AF6_TIM20         ((uint8_t)0x06)  /* TIM20 Alternate Function mapping      */\n  165  #endif /* TIM20 */\n  166: #define GPIO_AF6_TIM1_COMP1    ((uint8_t)0x06)  /* TIM1/COMP1 Break in Alternate Function mapping  */\n  167: #define GPIO_AF6_TIM1_COMP2    ((uint8_t)0x06)  /* TIM1/COMP2 Break in Alternate Function mapping  */\n  168: #define GPIO_AF6_TIM8_COMP2    ((uint8_t)0x06)  /* TIM8/COMP2 Break in Alternate Function mapping  */\n  169: #define GPIO_AF6_IR            ((uint8_t)0x06)  /* IR Alternate Function mapping         */\n  170: #define GPIO_AF6_I2S3ext       ((uint8_t)0x06)  /* I2S3ext_SD Alternate Function mapping */\n  171  \n  172  /**\n  173    * @brief   AF 7 selection\n  174    */\n  175: #define GPIO_AF7_USART1        ((uint8_t)0x07)  /* USART1 Alternate Function mapping  */\n  176: #define GPIO_AF7_USART2        ((uint8_t)0x07)  /* USART2 Alternate Function mapping  */\n  177: #define GPIO_AF7_USART3        ((uint8_t)0x07)  /* USART3 Alternate Function mapping  */\n  178  #if defined(COMP5)\n  179: #define GPIO_AF7_COMP5         ((uint8_t)0x07)  /* COMP5 Alternate Function mapping   */\n  180  #endif /* COMP5 */\n  181  #if defined(COMP6)\n  182: #define GPIO_AF7_COMP6         ((uint8_t)0x07)  /* COMP6 Alternate Function mapping   */\n  183  #endif /* COMP6 */\n  184  #if defined(COMP7)\n  185: #define GPIO_AF7_COMP7         ((uint8_t)0x07)  /* COMP7 Alternate Function mapping   */\n  186  #endif /* COMP7 */\n  187  \n  ...\n  189    * @brief   AF 8 selection\n  190    */\n  191: #define GPIO_AF8_COMP1         ((uint8_t)0x08)  /* COMP1 Alternate Function mapping   */\n  192: #define GPIO_AF8_COMP2         ((uint8_t)0x08)  /* COMP2 Alternate Function mapping   */\n  193: #define GPIO_AF8_COMP3         ((uint8_t)0x08)  /* COMP3 Alternate Function mapping   */\n  194: #define GPIO_AF8_COMP4         ((uint8_t)0x08)  /* COMP4 Alternate Function mapping   */\n  195  #if defined(COMP5)\n  196: #define GPIO_AF8_COMP5         ((uint8_t)0x08)  /* COMP5 Alternate Function mapping   */\n  197  #endif /* COMP5 */\n  198  #if defined(COMP6)\n  199: #define GPIO_AF8_COMP6         ((uint8_t)0x08)  /* COMP6 Alternate Function mapping   */\n  200  #endif /* COMP6 */\n  201  #if defined(COMP7)\n  202: #define GPIO_AF8_COMP7         ((uint8_t)0x08)  /* COMP7 Alternate Function mapping   */\n  203  #endif /* COMP7 */\n  204: #define GPIO_AF8_I2C3          ((uint8_t)0x08)  /* I2C3 Alternate Function mapping    */\n  205  #if defined(I2C4)\n  206: #define GPIO_AF8_I2C4          ((uint8_t)0x08)  /* I2C4 Alternate Function mapping    */\n  207  #endif /* I2C4 */\n  208: #define GPIO_AF8_LPUART1       ((uint8_t)0x08)  /* LPUART1 Alternate Function mapping */\n  209: #define GPIO_AF8_UART4         ((uint8_t)0x08)  /* UART4 Alternate Function mapping   */\n  210  #if defined(UART5)\n  211: #define GPIO_AF8_UART5         ((uint8_t)0x08)  /* UART5 Alternate Function mapping   */\n  212  #endif /* UART5 */\n  213  \n  ...\n  215    * @brief   AF 9 selection\n  216    */\n  217: #define GPIO_AF9_TIM1          ((uint8_t)0x09)  /* TIM1 Alternate Function mapping    */\n  218: #define GPIO_AF9_TIM8          ((uint8_t)0x09)  /* TIM8 Alternate Function mapping    */\n  219: #define GPIO_AF9_TIM15         ((uint8_t)0x09)  /* TIM15 Alternate Function mapping   */\n  220: #define GPIO_AF9_TIM1_COMP1    ((uint8_t)0x09)  /* TIM1/COMP1 Break in Alternate Function mapping   */\n  221: #define GPIO_AF9_TIM8_COMP1    ((uint8_t)0x09)  /* TIM8/COMP1 Break in Alternate Function mapping   */\n  222: #define GPIO_AF9_TIM15_COMP1   ((uint8_t)0x09)  /* TIM15/COMP1 Break in Alternate Function mapping  */\n  223: #define GPIO_AF9_FDCAN1        ((uint8_t)0x09)  /* FDCAN1 Alternate Function mapping  */\n  224  #if defined(FDCAN2)\n  225: #define GPIO_AF9_FDCAN2        ((uint8_t)0x09)  /* FDCAN2 Alternate Function mapping  */\n  226  #endif /* FDCAN2 */\n  227  \n  ...\n  229    * @brief   AF 10 selection\n  230    */\n  231: #define GPIO_AF10_TIM2         ((uint8_t)0x0A)  /* TIM2 Alternate Function mapping    */\n  232: #define GPIO_AF10_TIM3         ((uint8_t)0x0A)  /* TIM3 Alternate Function mapping    */\n  233: #define GPIO_AF10_TIM4         ((uint8_t)0x0A)  /* TIM4 Alternate Function mapping    */\n  234: #define GPIO_AF10_TIM8         ((uint8_t)0x0A)  /* TIM8 Alternate Function mapping    */\n  235: #define GPIO_AF10_TIM17        ((uint8_t)0x0A)  /* TIM17 Alternate Function mapping   */\n  236: #define GPIO_AF10_TIM8_COMP2   ((uint8_t)0x0A)  /* TIM8/COMP2 Break in Alternate Function mapping    */\n  237: #define GPIO_AF10_TIM17_COMP1  ((uint8_t)0x0A)  /* TIM17/COMP1 Break in Alternate Function mapping   */\n  238  #if defined(QUADSPI)\n  239: #define GPIO_AF10_QUADSPI      ((uint8_t)0x0A)  /* OctoSPI Manager Port 1 Alternate Function mapping */\n  240  #endif /* QUADSPI */\n  241  \n  ...\n  243    * @brief   AF 11 selection\n  244    */\n  245: #define GPIO_AF11_FDCAN1       ((uint8_t)0x0B)  /* FDCAN1 Alternate Function mapping  */\n  246  #if defined(FDCAN3)\n  247: #define GPIO_AF11_FDCAN3       ((uint8_t)0x0B)  /* FDCAN3 Alternate Function mapping  */\n  248  #endif /* FDCAN3 */\n  249: #define GPIO_AF11_TIM1         ((uint8_t)0x0B)  /* TIM1 Alternate Function mapping    */\n  250: #define GPIO_AF11_TIM8         ((uint8_t)0x0B)  /* TIM8 Alternate Function mapping    */\n  251: #define GPIO_AF11_TIM8_COMP1   ((uint8_t)0x0B)  /* TIM8/COMP1 Break in Alternate Function mapping  */\n  252: #define GPIO_AF11_LPTIM1       ((uint8_t)0x0B)  /* LPTIM1 Alternate Function mapping  */\n  253  \n  254  /**\n  255    * @brief   AF 12 selection\n  256    */\n  257: #define GPIO_AF12_LPUART1      ((uint8_t)0x0C)  /* LPUART1 Alternate Function mapping */\n  258: #define GPIO_AF12_TIM1         ((uint8_t)0x0C)  /* TIM1 Alternate Function mapping    */\n  259: #define GPIO_AF12_TIM1_COMP1   ((uint8_t)0x0C)  /* TIM1/COMP1 Break in Alternate Function mapping  */\n  260: #define GPIO_AF12_TIM1_COMP2   ((uint8_t)0x0C)  /* TIM1/COMP2 Break in Alternate Function mapping  */\n  261  #if defined(HRTIM1)\n  262: #define GPIO_AF12_HRTIM1       ((uint8_t)0x0C)  /* HRTIM1 Alternate Function mapping  */\n  263  #endif /* HRTIM1 */\n  264  #if defined(FMC_BANK1)\n  265: #define GPIO_AF12_FMC          ((uint8_t)0x0C)  /* FMC Alternate Function mapping     */\n  266  #endif /* FMC_BANK1 */\n  267: #define GPIO_AF12_SAI1         ((uint8_t)0x0C)  /* SAI1 Alternate Function mapping  */\n  268  \n  269  /**\n  ...\n  271    */\n  272  #if defined(HRTIM1)\n  273: #define GPIO_AF13_HRTIM1       ((uint8_t)0x0D)  /* HRTIM1 Alternate Function mapping  */\n  274  #endif /* HRTIM1 */\n  275: #define GPIO_AF13_SAI1         ((uint8_t)0x0D)  /* SAI1 Alternate Function mapping  */\n  276  \n  277  /**\n  278    * @brief   AF 14 selection\n  279    */\n  280: #define GPIO_AF14_TIM2         ((uint8_t)0x0E)  /* TIM2 Alternate Function mapping   */\n  281: #define GPIO_AF14_TIM15        ((uint8_t)0x0E)  /* TIM15 Alternate Function mapping   */\n  282: #define GPIO_AF14_UCPD1        ((uint8_t)0x0E)  /* UCPD1 Alternate Function mapping  */\n  283: #define GPIO_AF14_SAI1         ((uint8_t)0x0E)  /* SAI1 Alternate Function mapping  */\n  284: #define GPIO_AF14_UART4        ((uint8_t)0x0E)  /* UART4 Alternate Function mapping      */\n  285  #if defined(UART5)\n  286: #define GPIO_AF14_UART5        ((uint8_t)0x0E)  /* UART5 Alternate Function mapping      */\n  287  #endif /* UART5 */\n  288  \n  ...\n  290    * @brief   AF 15 selection\n  291    */\n  292: #define GPIO_AF15_EVENTOUT     ((uint8_t)0x0F)  /* EVENTOUT Alternate Function mapping */\n  293  \n  294: #define IS_GPIO_AF(AF)   ((AF) <= (uint8_t)0x0F)\n  295  \n  296  /**\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h:\n  188    * @{\n  189    */\n  190: #define LL_GPIO_AF_0                       (0x0000000U) /*!< Select alternate function 0 */\n  191: #define LL_GPIO_AF_1                       (0x0000001U) /*!< Select alternate function 1 */\n  192: #define LL_GPIO_AF_2                       (0x0000002U) /*!< Select alternate function 2 */\n  193: #define LL_GPIO_AF_3                       (0x0000003U) /*!< Select alternate function 3 */\n  194: #define LL_GPIO_AF_4                       (0x0000004U) /*!< Select alternate function 4 */\n  195: #define LL_GPIO_AF_5                       (0x0000005U) /*!< Select alternate function 5 */\n  196: #define LL_GPIO_AF_6                       (0x0000006U) /*!< Select alternate function 6 */\n  197: #define LL_GPIO_AF_7                       (0x0000007U) /*!< Select alternate function 7 */\n  198: #define LL_GPIO_AF_8                       (0x0000008U) /*!< Select alternate function 8 */\n  199: #define LL_GPIO_AF_9                       (0x0000009U) /*!< Select alternate function 9 */\n  200: #define LL_GPIO_AF_10                      (0x000000AU) /*!< Select alternate function 10 */\n  201: #define LL_GPIO_AF_11                      (0x000000BU) /*!< Select alternate function 11 */\n  202: #define LL_GPIO_AF_12                      (0x000000CU) /*!< Select alternate function 12 */\n  203: #define LL_GPIO_AF_13                      (0x000000DU) /*!< Select alternate function 13 */\n  204: #define LL_GPIO_AF_14                      (0x000000EU) /*!< Select alternate function 14 */\n  205: #define LL_GPIO_AF_15                      (0x000000FU) /*!< Select alternate function 15 */\n  206  /**\n  207    * @}\n  ...\n  549    *         @arg @ref LL_GPIO_PIN_7\n  550    * @param  Alternate This parameter can be one of the following values:\n  551:   *         @arg @ref LL_GPIO_AF_0\n  552:   *         @arg @ref LL_GPIO_AF_1\n  553:   *         @arg @ref LL_GPIO_AF_2\n  554:   *         @arg @ref LL_GPIO_AF_3\n  555:   *         @arg @ref LL_GPIO_AF_4\n  556:   *         @arg @ref LL_GPIO_AF_5\n  557:   *         @arg @ref LL_GPIO_AF_6\n  558:   *         @arg @ref LL_GPIO_AF_7\n  559:   *         @arg @ref LL_GPIO_AF_8\n  560:   *         @arg @ref LL_GPIO_AF_9\n  561:   *         @arg @ref LL_GPIO_AF_10\n  562:   *         @arg @ref LL_GPIO_AF_11\n  563:   *         @arg @ref LL_GPIO_AF_12\n  564:   *         @arg @ref LL_GPIO_AF_13\n  565:   *         @arg @ref LL_GPIO_AF_14\n  566:   *         @arg @ref LL_GPIO_AF_15\n  567    * @retval None\n  568    */\n  569  __STATIC_INLINE void LL_GPIO_SetAFPin_0_7(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Alternate)\n  570  {\n  571:   MODIFY_REG(GPIOx->AFR[0], (GPIO_AFRL_AFSEL0 << (POSITION_VAL(Pin) * 4U)),\n  572               (Alternate << (POSITION_VAL(Pin) * 4U)));\n  573  }\n  ...\n  587    *         @arg @ref LL_GPIO_PIN_7\n  588    * @retval Returned value can be one of the following values:\n  589:   *         @arg @ref LL_GPIO_AF_0\n  590:   *         @arg @ref LL_GPIO_AF_1\n  591:   *         @arg @ref LL_GPIO_AF_2\n  592:   *         @arg @ref LL_GPIO_AF_3\n  593:   *         @arg @ref LL_GPIO_AF_4\n  594:   *         @arg @ref LL_GPIO_AF_5\n  595:   *         @arg @ref LL_GPIO_AF_6\n  596:   *         @arg @ref LL_GPIO_AF_7\n  597:   *         @arg @ref LL_GPIO_AF_8\n  598:   *         @arg @ref LL_GPIO_AF_9\n  599:   *         @arg @ref LL_GPIO_AF_10\n  600:   *         @arg @ref LL_GPIO_AF_11\n  601:   *         @arg @ref LL_GPIO_AF_12\n  602:   *         @arg @ref LL_GPIO_AF_13\n  603:   *         @arg @ref LL_GPIO_AF_14\n  604:   *         @arg @ref LL_GPIO_AF_15\n  605    */\n  606  __STATIC_INLINE uint32_t LL_GPIO_GetAFPin_0_7(GPIO_TypeDef *GPIOx, uint32_t Pin)\n  607  {\n  608    return (uint32_t)(READ_BIT(GPIOx->AFR[0],\n  609:                              (GPIO_AFRL_AFSEL0 << (POSITION_VAL(Pin) * 4U))) >> (POSITION_VAL(Pin) * 4U));\n  610  }\n  611  \n  ...\n  626    *         @arg @ref LL_GPIO_PIN_15\n  627    * @param  Alternate This parameter can be one of the following values:\n  628:   *         @arg @ref LL_GPIO_AF_0\n  629:   *         @arg @ref LL_GPIO_AF_1\n  630:   *         @arg @ref LL_GPIO_AF_2\n  631:   *         @arg @ref LL_GPIO_AF_3\n  632:   *         @arg @ref LL_GPIO_AF_4\n  633:   *         @arg @ref LL_GPIO_AF_5\n  634:   *         @arg @ref LL_GPIO_AF_6\n  635:   *         @arg @ref LL_GPIO_AF_7\n  636:   *         @arg @ref LL_GPIO_AF_8\n  637:   *         @arg @ref LL_GPIO_AF_9\n  638:   *         @arg @ref LL_GPIO_AF_10\n  639:   *         @arg @ref LL_GPIO_AF_11\n  640:   *         @arg @ref LL_GPIO_AF_12\n  641:   *         @arg @ref LL_GPIO_AF_13\n  642:   *         @arg @ref LL_GPIO_AF_14\n  643:   *         @arg @ref LL_GPIO_AF_15\n  644    * @retval None\n  645    */\n  646  __STATIC_INLINE void LL_GPIO_SetAFPin_8_15(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Alternate)\n  647  {\n  648:   MODIFY_REG(GPIOx->AFR[1], (GPIO_AFRH_AFSEL8 << (POSITION_VAL(Pin >> 8U) * 4U)),\n  649               (Alternate << (POSITION_VAL(Pin >> 8U) * 4U)));\n  650  }\n  ...\n  665    *         @arg @ref LL_GPIO_PIN_15\n  666    * @retval Returned value can be one of the following values:\n  667:   *         @arg @ref LL_GPIO_AF_0\n  668:   *         @arg @ref LL_GPIO_AF_1\n  669:   *         @arg @ref LL_GPIO_AF_2\n  670:   *         @arg @ref LL_GPIO_AF_3\n  671:   *         @arg @ref LL_GPIO_AF_4\n  672:   *         @arg @ref LL_GPIO_AF_5\n  673:   *         @arg @ref LL_GPIO_AF_6\n  674:   *         @arg @ref LL_GPIO_AF_7\n  675:   *         @arg @ref LL_GPIO_AF_8\n  676:   *         @arg @ref LL_GPIO_AF_9\n  677:   *         @arg @ref LL_GPIO_AF_10\n  678:   *         @arg @ref LL_GPIO_AF_11\n  679:   *         @arg @ref LL_GPIO_AF_12\n  680:   *         @arg @ref LL_GPIO_AF_13\n  681:   *         @arg @ref LL_GPIO_AF_14\n  682:   *         @arg @ref LL_GPIO_AF_15\n  683    */\n  684  __STATIC_INLINE uint32_t LL_GPIO_GetAFPin_8_15(GPIO_TypeDef *GPIOx, uint32_t Pin)\n  685  {\n  686    return (uint32_t)(READ_BIT(GPIOx->AFR[1],\n  687:                              (GPIO_AFRH_AFSEL8 << (POSITION_VAL(Pin >> 8U) * 4U))) >> (POSITION_VAL(Pin >> 8U) * 4U));\n  688  }\n  689  \n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Inc/Legacy/stm32_hal_legacy.h:\n  558  \n  559  #if defined(STM32F4)\n  560: #define GPIO_AF12_SDMMC                           GPIO_AF12_SDIO\n  561: #define GPIO_AF12_SDMMC1                          GPIO_AF12_SDIO\n  562  #endif\n  563  \n  564  #if defined(STM32F7)\n  565: #define GPIO_AF12_SDIO                            GPIO_AF12_SDMMC1\n  566: #define GPIO_AF12_SDMMC                           GPIO_AF12_SDMMC1\n  567  #endif\n  568  \n  569  #if defined(STM32L4)\n  570: #define GPIO_AF12_SDIO                            GPIO_AF12_SDMMC1\n  571: #define GPIO_AF12_SDMMC                           GPIO_AF12_SDMMC1\n  572  #endif\n  573  \n  574  #if defined(STM32H7)\n  575: #define GPIO_AF7_SDIO1                            GPIO_AF7_SDMMC1\n  576: #define GPIO_AF8_SDIO1                            GPIO_AF8_SDMMC1\n  577: #define GPIO_AF12_SDIO1                           GPIO_AF12_SDMMC1\n  578: #define GPIO_AF9_SDIO2                            GPIO_AF9_SDMMC2\n  579: #define GPIO_AF10_SDIO2                           GPIO_AF10_SDMMC2\n  580: #define GPIO_AF11_SDIO2                           GPIO_AF11_SDMMC2\n  581  \n  582  #if defined (STM32H743xx) || defined (STM32H753xx)  || defined (STM32H750xx) || defined (STM32H742xx) || \\\n  583      defined (STM32H745xx) || defined (STM32H755xx)  || defined (STM32H747xx) || defined (STM32H757xx)\n  584: #define GPIO_AF10_OTG2_HS  GPIO_AF10_OTG2_FS\n  585: #define GPIO_AF10_OTG1_FS  GPIO_AF10_OTG1_HS\n  586: #define GPIO_AF12_OTG2_FS  GPIO_AF12_OTG1_FS\n  587  #endif /*STM32H743xx || STM32H753xx || STM32H750xx || STM32H742xx || STM32H745xx || STM32H755xx || STM32H747xx || STM32H757xx */\n  588  #endif /* STM32H7 */\n  589  \n  590: #define GPIO_AF0_LPTIM                            GPIO_AF0_LPTIM1\n  591: #define GPIO_AF1_LPTIM                            GPIO_AF1_LPTIM1\n  592: #define GPIO_AF2_LPTIM                            GPIO_AF2_LPTIM1\n  593  \n  594  #if defined(STM32L0) || defined(STM32L4) || defined(STM32F4) || defined(STM32F2) || defined(STM32F7) || defined(STM32G4) || defined(STM32H7)\n  ...\n  612  #endif /* STM32F0 || STM32F3 || STM32F1 */\n  613  \n  614: #define GPIO_AF6_DFSDM                            GPIO_AF6_DFSDM1\n  615  /**\n  616    * @}\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_gpio.c:\n  218        {\n  219          /* Check the Alternate function parameters */\n  220:         assert_param(IS_GPIO_AF_INSTANCE(GPIOx));\n  221:         assert_param(IS_GPIO_AF(GPIO_Init->Alternate));\n  222  \n  223          /* Configure Alternate function mapped with the current IO */\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c:\n 1014    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;\n 1015    GPIO_InitStruct.Pull = GPIO_NOPULL;\n 1016:   GPIO_InitStruct.Alternate = GPIO_AF0_MCO;\n 1017    HAL_GPIO_Init(MCO1_GPIO_PORT, &GPIO_InitStruct);\n 1018  \n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_gpio.c:\n   69                                              ((__VALUE__) == LL_GPIO_PULL_DOWN))\n   70  \n   71: #define IS_LL_GPIO_ALTERNATE(__VALUE__)    (((__VALUE__) == LL_GPIO_AF_0  )   ||\\\n   72:                                             ((__VALUE__) == LL_GPIO_AF_1  )   ||\\\n   73:                                             ((__VALUE__) == LL_GPIO_AF_2  )   ||\\\n   74:                                             ((__VALUE__) == LL_GPIO_AF_3  )   ||\\\n   75:                                             ((__VALUE__) == LL_GPIO_AF_4  )   ||\\\n   76:                                             ((__VALUE__) == LL_GPIO_AF_5  )   ||\\\n   77:                                             ((__VALUE__) == LL_GPIO_AF_6  )   ||\\\n   78:                                             ((__VALUE__) == LL_GPIO_AF_7  )   ||\\\n   79:                                             ((__VALUE__) == LL_GPIO_AF_8  )   ||\\\n   80:                                             ((__VALUE__) == LL_GPIO_AF_9  )   ||\\\n   81:                                             ((__VALUE__) == LL_GPIO_AF_10 )   ||\\\n   82:                                             ((__VALUE__) == LL_GPIO_AF_11 )   ||\\\n   83:                                             ((__VALUE__) == LL_GPIO_AF_12 )   ||\\\n   84:                                             ((__VALUE__) == LL_GPIO_AF_13 )   ||\\\n   85:                                             ((__VALUE__) == LL_GPIO_AF_14 )   ||\\\n   86:                                             ((__VALUE__) == LL_GPIO_AF_15 ))\n   87  /**\n   88    * @}\n   ..\n  251    GPIO_InitStruct->OutputType = LL_GPIO_OUTPUT_PUSHPULL;\n  252    GPIO_InitStruct->Pull       = LL_GPIO_PULL_NO;\n  253:   GPIO_InitStruct->Alternate  = LL_GPIO_AF_0;\n  254  }\n  255  \n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Middlewares/USBDevice4Cube/Src/hal_usb.c:\n   34      GPIO_InitStruct.Pull = GPIO_NOPULL;\n   35      GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;\n   36:     GPIO_InitStruct.Alternate = GPIO_AF10_OTG_FS;\n   37      HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);\n   38  \n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Src/stm32g4xx_hal_msp.c:\n  354      GPIO_InitStruct.Pull = GPIO_PULLUP;\n  355      GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;\n  356:     GPIO_InitStruct.Alternate = GPIO_AF2_I2C3;\n  357      HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);\n  358  \n  ...\n  361      GPIO_InitStruct.Pull = GPIO_PULLUP;\n  362      GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;\n  363:     GPIO_InitStruct.Alternate = GPIO_AF8_I2C3;\n  364      HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);\n  365  \n  ...\n  431      GPIO_InitStruct.Pull = GPIO_NOPULL;\n  432      GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;\n  433:     GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;\n  434      HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);\n  435  \n  ...\n  542      GPIO_InitStruct.Pull = GPIO_NOPULL;\n  543      GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;\n  544:     GPIO_InitStruct.Alternate = GPIO_AF10_TIM3;\n  545      HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);\n  546  \n  ...\n  549      GPIO_InitStruct.Pull = GPIO_NOPULL;\n  550      GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;\n  551:     GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;\n  552      HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);\n  553  \n  ...\n  578      GPIO_InitStruct.Pull = GPIO_NOPULL;\n  579      GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;\n  580:     GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;\n  581      HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);\n  582  \n  ...\n  602      GPIO_InitStruct.Pull = GPIO_NOPULL;\n  603      GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;\n  604:     GPIO_InitStruct.Alternate = GPIO_AF2_TIM4;\n  605      HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);\n  606  \n  ...\n  711      GPIO_InitStruct.Pull = GPIO_NOPULL;\n  712      GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;\n  713:     GPIO_InitStruct.Alternate = GPIO_AF7_USART1;\n  714      HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);\n  715  \n\n/Users/dog/Documents/electronics/stm32-nema17-servo/stm32-servo-firmware/src/usbd/hal_usb.c:\n   10          .Pull = GPIO_NOPULL,\n   11          .Speed = GPIO_SPEED_FREQ_VERY_HIGH,\n   12:         .Alternate = GPIO_AF,\n   13      };\n   14  \n\n2220 matches across 17 files\n\n\nSearching 1249 files for \"GPIO*AF\" (regex, case sensitive)\n\n0 matches\n\nSearching 1249 files for \"GPIO.*AF\" (regex, case sensitive)\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g431xx.h:\n 5789  #define GPIO_LCKR_LCKK                 GPIO_LCKR_LCKK_Msk\n 5790  \n 5791: /****************** Bit definition for GPIO_AFRL register *********************/\n 5792: #define GPIO_AFRL_AFSEL0_Pos           (0U)\n 5793: #define GPIO_AFRL_AFSEL0_Msk           (0xFUL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x0000000F */\n 5794: #define GPIO_AFRL_AFSEL0               GPIO_AFRL_AFSEL0_Msk\n 5795: #define GPIO_AFRL_AFSEL0_0             (0x1UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000001 */\n 5796: #define GPIO_AFRL_AFSEL0_1             (0x2UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000002 */\n 5797: #define GPIO_AFRL_AFSEL0_2             (0x4UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000004 */\n 5798: #define GPIO_AFRL_AFSEL0_3             (0x8UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000008 */\n 5799: #define GPIO_AFRL_AFSEL1_Pos           (4U)\n 5800: #define GPIO_AFRL_AFSEL1_Msk           (0xFUL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x000000F0 */\n 5801: #define GPIO_AFRL_AFSEL1               GPIO_AFRL_AFSEL1_Msk\n 5802: #define GPIO_AFRL_AFSEL1_0             (0x1UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000010 */\n 5803: #define GPIO_AFRL_AFSEL1_1             (0x2UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000020 */\n 5804: #define GPIO_AFRL_AFSEL1_2             (0x4UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000040 */\n 5805: #define GPIO_AFRL_AFSEL1_3             (0x8UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000080 */\n 5806: #define GPIO_AFRL_AFSEL2_Pos           (8U)\n 5807: #define GPIO_AFRL_AFSEL2_Msk           (0xFUL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000F00 */\n 5808: #define GPIO_AFRL_AFSEL2               GPIO_AFRL_AFSEL2_Msk\n 5809: #define GPIO_AFRL_AFSEL2_0             (0x1UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000100 */\n 5810: #define GPIO_AFRL_AFSEL2_1             (0x2UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000200 */\n 5811: #define GPIO_AFRL_AFSEL2_2             (0x4UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000400 */\n 5812: #define GPIO_AFRL_AFSEL2_3             (0x8UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000800 */\n 5813: #define GPIO_AFRL_AFSEL3_Pos           (12U)\n 5814: #define GPIO_AFRL_AFSEL3_Msk           (0xFUL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x0000F000 */\n 5815: #define GPIO_AFRL_AFSEL3               GPIO_AFRL_AFSEL3_Msk\n 5816: #define GPIO_AFRL_AFSEL3_0             (0x1UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00001000 */\n 5817: #define GPIO_AFRL_AFSEL3_1             (0x2UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00002000 */\n 5818: #define GPIO_AFRL_AFSEL3_2             (0x4UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00004000 */\n 5819: #define GPIO_AFRL_AFSEL3_3             (0x8UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00008000 */\n 5820: #define GPIO_AFRL_AFSEL4_Pos           (16U)\n 5821: #define GPIO_AFRL_AFSEL4_Msk           (0xFUL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x000F0000 */\n 5822: #define GPIO_AFRL_AFSEL4               GPIO_AFRL_AFSEL4_Msk\n 5823: #define GPIO_AFRL_AFSEL4_0             (0x1UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00010000 */\n 5824: #define GPIO_AFRL_AFSEL4_1             (0x2UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00020000 */\n 5825: #define GPIO_AFRL_AFSEL4_2             (0x4UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00040000 */\n 5826: #define GPIO_AFRL_AFSEL4_3             (0x8UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00080000 */\n 5827: #define GPIO_AFRL_AFSEL5_Pos           (20U)\n 5828: #define GPIO_AFRL_AFSEL5_Msk           (0xFUL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00F00000 */\n 5829: #define GPIO_AFRL_AFSEL5               GPIO_AFRL_AFSEL5_Msk\n 5830: #define GPIO_AFRL_AFSEL5_0             (0x1UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00100000 */\n 5831: #define GPIO_AFRL_AFSEL5_1             (0x2UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00200000 */\n 5832: #define GPIO_AFRL_AFSEL5_2             (0x4UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00400000 */\n 5833: #define GPIO_AFRL_AFSEL5_3             (0x8UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00800000 */\n 5834: #define GPIO_AFRL_AFSEL6_Pos           (24U)\n 5835: #define GPIO_AFRL_AFSEL6_Msk           (0xFUL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x0F000000 */\n 5836: #define GPIO_AFRL_AFSEL6               GPIO_AFRL_AFSEL6_Msk\n 5837: #define GPIO_AFRL_AFSEL6_0             (0x1UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x01000000 */\n 5838: #define GPIO_AFRL_AFSEL6_1             (0x2UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x02000000 */\n 5839: #define GPIO_AFRL_AFSEL6_2             (0x4UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x04000000 */\n 5840: #define GPIO_AFRL_AFSEL6_3             (0x8UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x08000000 */\n 5841: #define GPIO_AFRL_AFSEL7_Pos           (28U)\n 5842: #define GPIO_AFRL_AFSEL7_Msk           (0xFUL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0xF0000000 */\n 5843: #define GPIO_AFRL_AFSEL7               GPIO_AFRL_AFSEL7_Msk\n 5844: #define GPIO_AFRL_AFSEL7_0             (0x1UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x10000000 */\n 5845: #define GPIO_AFRL_AFSEL7_1             (0x2UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x20000000 */\n 5846: #define GPIO_AFRL_AFSEL7_2             (0x4UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x40000000 */\n 5847: #define GPIO_AFRL_AFSEL7_3             (0x8UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x80000000 */\n 5848  \n 5849  /* Legacy defines */\n 5850: #define GPIO_AFRL_AFRL0                      GPIO_AFRL_AFSEL0\n 5851: #define GPIO_AFRL_AFRL1                      GPIO_AFRL_AFSEL1\n 5852: #define GPIO_AFRL_AFRL2                      GPIO_AFRL_AFSEL2\n 5853: #define GPIO_AFRL_AFRL3                      GPIO_AFRL_AFSEL3\n 5854: #define GPIO_AFRL_AFRL4                      GPIO_AFRL_AFSEL4\n 5855: #define GPIO_AFRL_AFRL5                      GPIO_AFRL_AFSEL5\n 5856: #define GPIO_AFRL_AFRL6                      GPIO_AFRL_AFSEL6\n 5857: #define GPIO_AFRL_AFRL7                      GPIO_AFRL_AFSEL7\n 5858  \n 5859: /****************** Bit definition for GPIO_AFRH register *********************/\n 5860: #define GPIO_AFRH_AFSEL8_Pos           (0U)\n 5861: #define GPIO_AFRH_AFSEL8_Msk           (0xFUL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x0000000F */\n 5862: #define GPIO_AFRH_AFSEL8               GPIO_AFRH_AFSEL8_Msk\n 5863: #define GPIO_AFRH_AFSEL8_0             (0x1UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000001 */\n 5864: #define GPIO_AFRH_AFSEL8_1             (0x2UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000002 */\n 5865: #define GPIO_AFRH_AFSEL8_2             (0x4UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000004 */\n 5866: #define GPIO_AFRH_AFSEL8_3             (0x8UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000008 */\n 5867: #define GPIO_AFRH_AFSEL9_Pos           (4U)\n 5868: #define GPIO_AFRH_AFSEL9_Msk           (0xFUL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x000000F0 */\n 5869: #define GPIO_AFRH_AFSEL9               GPIO_AFRH_AFSEL9_Msk\n 5870: #define GPIO_AFRH_AFSEL9_0             (0x1UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000010 */\n 5871: #define GPIO_AFRH_AFSEL9_1             (0x2UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000020 */\n 5872: #define GPIO_AFRH_AFSEL9_2             (0x4UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000040 */\n 5873: #define GPIO_AFRH_AFSEL9_3             (0x8UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000080 */\n 5874: #define GPIO_AFRH_AFSEL10_Pos          (8U)\n 5875: #define GPIO_AFRH_AFSEL10_Msk          (0xFUL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000F00 */\n 5876: #define GPIO_AFRH_AFSEL10              GPIO_AFRH_AFSEL10_Msk\n 5877: #define GPIO_AFRH_AFSEL10_0            (0x1UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000100 */\n 5878: #define GPIO_AFRH_AFSEL10_1            (0x2UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000200 */\n 5879: #define GPIO_AFRH_AFSEL10_2            (0x4UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000400 */\n 5880: #define GPIO_AFRH_AFSEL10_3            (0x8UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000800 */\n 5881: #define GPIO_AFRH_AFSEL11_Pos          (12U)\n 5882: #define GPIO_AFRH_AFSEL11_Msk          (0xFUL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x0000F000 */\n 5883: #define GPIO_AFRH_AFSEL11              GPIO_AFRH_AFSEL11_Msk\n 5884: #define GPIO_AFRH_AFSEL11_0            (0x1UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00001000 */\n 5885: #define GPIO_AFRH_AFSEL11_1            (0x2UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00002000 */\n 5886: #define GPIO_AFRH_AFSEL11_2            (0x4UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00004000 */\n 5887: #define GPIO_AFRH_AFSEL11_3            (0x8UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00008000 */\n 5888: #define GPIO_AFRH_AFSEL12_Pos          (16U)\n 5889: #define GPIO_AFRH_AFSEL12_Msk          (0xFUL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x000F0000 */\n 5890: #define GPIO_AFRH_AFSEL12              GPIO_AFRH_AFSEL12_Msk\n 5891: #define GPIO_AFRH_AFSEL12_0            (0x1UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00010000 */\n 5892: #define GPIO_AFRH_AFSEL12_1            (0x2UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00020000 */\n 5893: #define GPIO_AFRH_AFSEL12_2            (0x4UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00040000 */\n 5894: #define GPIO_AFRH_AFSEL12_3            (0x8UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00080000 */\n 5895: #define GPIO_AFRH_AFSEL13_Pos          (20U)\n 5896: #define GPIO_AFRH_AFSEL13_Msk          (0xFUL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00F00000 */\n 5897: #define GPIO_AFRH_AFSEL13              GPIO_AFRH_AFSEL13_Msk\n 5898: #define GPIO_AFRH_AFSEL13_0            (0x1UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00100000 */\n 5899: #define GPIO_AFRH_AFSEL13_1            (0x2UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00200000 */\n 5900: #define GPIO_AFRH_AFSEL13_2            (0x4UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00400000 */\n 5901: #define GPIO_AFRH_AFSEL13_3            (0x8UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00800000 */\n 5902: #define GPIO_AFRH_AFSEL14_Pos          (24U)\n 5903: #define GPIO_AFRH_AFSEL14_Msk          (0xFUL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x0F000000 */\n 5904: #define GPIO_AFRH_AFSEL14              GPIO_AFRH_AFSEL14_Msk\n 5905: #define GPIO_AFRH_AFSEL14_0            (0x1UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x01000000 */\n 5906: #define GPIO_AFRH_AFSEL14_1            (0x2UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x02000000 */\n 5907: #define GPIO_AFRH_AFSEL14_2            (0x4UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x04000000 */\n 5908: #define GPIO_AFRH_AFSEL14_3            (0x8UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x08000000 */\n 5909: #define GPIO_AFRH_AFSEL15_Pos          (28U)\n 5910: #define GPIO_AFRH_AFSEL15_Msk          (0xFUL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0xF0000000 */\n 5911: #define GPIO_AFRH_AFSEL15              GPIO_AFRH_AFSEL15_Msk\n 5912: #define GPIO_AFRH_AFSEL15_0            (0x1UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x10000000 */\n 5913: #define GPIO_AFRH_AFSEL15_1            (0x2UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x20000000 */\n 5914: #define GPIO_AFRH_AFSEL15_2            (0x4UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x40000000 */\n 5915: #define GPIO_AFRH_AFSEL15_3            (0x8UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x80000000 */\n 5916  \n 5917  /* Legacy defines */\n 5918: #define GPIO_AFRH_AFRH0                      GPIO_AFRH_AFSEL8\n 5919: #define GPIO_AFRH_AFRH1                      GPIO_AFRH_AFSEL9\n 5920: #define GPIO_AFRH_AFRH2                      GPIO_AFRH_AFSEL10\n 5921: #define GPIO_AFRH_AFRH3                      GPIO_AFRH_AFSEL11\n 5922: #define GPIO_AFRH_AFRH4                      GPIO_AFRH_AFSEL12\n 5923: #define GPIO_AFRH_AFRH5                      GPIO_AFRH_AFSEL13\n 5924: #define GPIO_AFRH_AFRH6                      GPIO_AFRH_AFSEL14\n 5925: #define GPIO_AFRH_AFRH7                      GPIO_AFRH_AFSEL15\n 5926  \n 5927  /******************  Bits definition for GPIO_BRR register  ******************/\n ....\n 12600                                          ((INSTANCE) == GPIOG))\n 12601  \n 12602: /******************************* GPIO AF Instances ****************************/\n 12603: #define IS_GPIO_AF_INSTANCE(INSTANCE)   IS_GPIO_ALL_INSTANCE(INSTANCE)\n 12604  \n 12605  /**************************** GPIO Lock Instances *****************************/\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g441xx.h:\n 6011  #define GPIO_LCKR_LCKK                 GPIO_LCKR_LCKK_Msk\n 6012  \n 6013: /****************** Bit definition for GPIO_AFRL register *********************/\n 6014: #define GPIO_AFRL_AFSEL0_Pos           (0U)\n 6015: #define GPIO_AFRL_AFSEL0_Msk           (0xFUL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x0000000F */\n 6016: #define GPIO_AFRL_AFSEL0               GPIO_AFRL_AFSEL0_Msk\n 6017: #define GPIO_AFRL_AFSEL0_0             (0x1UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000001 */\n 6018: #define GPIO_AFRL_AFSEL0_1             (0x2UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000002 */\n 6019: #define GPIO_AFRL_AFSEL0_2             (0x4UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000004 */\n 6020: #define GPIO_AFRL_AFSEL0_3             (0x8UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000008 */\n 6021: #define GPIO_AFRL_AFSEL1_Pos           (4U)\n 6022: #define GPIO_AFRL_AFSEL1_Msk           (0xFUL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x000000F0 */\n 6023: #define GPIO_AFRL_AFSEL1               GPIO_AFRL_AFSEL1_Msk\n 6024: #define GPIO_AFRL_AFSEL1_0             (0x1UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000010 */\n 6025: #define GPIO_AFRL_AFSEL1_1             (0x2UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000020 */\n 6026: #define GPIO_AFRL_AFSEL1_2             (0x4UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000040 */\n 6027: #define GPIO_AFRL_AFSEL1_3             (0x8UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000080 */\n 6028: #define GPIO_AFRL_AFSEL2_Pos           (8U)\n 6029: #define GPIO_AFRL_AFSEL2_Msk           (0xFUL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000F00 */\n 6030: #define GPIO_AFRL_AFSEL2               GPIO_AFRL_AFSEL2_Msk\n 6031: #define GPIO_AFRL_AFSEL2_0             (0x1UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000100 */\n 6032: #define GPIO_AFRL_AFSEL2_1             (0x2UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000200 */\n 6033: #define GPIO_AFRL_AFSEL2_2             (0x4UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000400 */\n 6034: #define GPIO_AFRL_AFSEL2_3             (0x8UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000800 */\n 6035: #define GPIO_AFRL_AFSEL3_Pos           (12U)\n 6036: #define GPIO_AFRL_AFSEL3_Msk           (0xFUL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x0000F000 */\n 6037: #define GPIO_AFRL_AFSEL3               GPIO_AFRL_AFSEL3_Msk\n 6038: #define GPIO_AFRL_AFSEL3_0             (0x1UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00001000 */\n 6039: #define GPIO_AFRL_AFSEL3_1             (0x2UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00002000 */\n 6040: #define GPIO_AFRL_AFSEL3_2             (0x4UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00004000 */\n 6041: #define GPIO_AFRL_AFSEL3_3             (0x8UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00008000 */\n 6042: #define GPIO_AFRL_AFSEL4_Pos           (16U)\n 6043: #define GPIO_AFRL_AFSEL4_Msk           (0xFUL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x000F0000 */\n 6044: #define GPIO_AFRL_AFSEL4               GPIO_AFRL_AFSEL4_Msk\n 6045: #define GPIO_AFRL_AFSEL4_0             (0x1UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00010000 */\n 6046: #define GPIO_AFRL_AFSEL4_1             (0x2UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00020000 */\n 6047: #define GPIO_AFRL_AFSEL4_2             (0x4UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00040000 */\n 6048: #define GPIO_AFRL_AFSEL4_3             (0x8UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00080000 */\n 6049: #define GPIO_AFRL_AFSEL5_Pos           (20U)\n 6050: #define GPIO_AFRL_AFSEL5_Msk           (0xFUL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00F00000 */\n 6051: #define GPIO_AFRL_AFSEL5               GPIO_AFRL_AFSEL5_Msk\n 6052: #define GPIO_AFRL_AFSEL5_0             (0x1UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00100000 */\n 6053: #define GPIO_AFRL_AFSEL5_1             (0x2UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00200000 */\n 6054: #define GPIO_AFRL_AFSEL5_2             (0x4UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00400000 */\n 6055: #define GPIO_AFRL_AFSEL5_3             (0x8UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00800000 */\n 6056: #define GPIO_AFRL_AFSEL6_Pos           (24U)\n 6057: #define GPIO_AFRL_AFSEL6_Msk           (0xFUL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x0F000000 */\n 6058: #define GPIO_AFRL_AFSEL6               GPIO_AFRL_AFSEL6_Msk\n 6059: #define GPIO_AFRL_AFSEL6_0             (0x1UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x01000000 */\n 6060: #define GPIO_AFRL_AFSEL6_1             (0x2UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x02000000 */\n 6061: #define GPIO_AFRL_AFSEL6_2             (0x4UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x04000000 */\n 6062: #define GPIO_AFRL_AFSEL6_3             (0x8UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x08000000 */\n 6063: #define GPIO_AFRL_AFSEL7_Pos           (28U)\n 6064: #define GPIO_AFRL_AFSEL7_Msk           (0xFUL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0xF0000000 */\n 6065: #define GPIO_AFRL_AFSEL7               GPIO_AFRL_AFSEL7_Msk\n 6066: #define GPIO_AFRL_AFSEL7_0             (0x1UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x10000000 */\n 6067: #define GPIO_AFRL_AFSEL7_1             (0x2UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x20000000 */\n 6068: #define GPIO_AFRL_AFSEL7_2             (0x4UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x40000000 */\n 6069: #define GPIO_AFRL_AFSEL7_3             (0x8UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x80000000 */\n 6070  \n 6071  /* Legacy defines */\n 6072: #define GPIO_AFRL_AFRL0                      GPIO_AFRL_AFSEL0\n 6073: #define GPIO_AFRL_AFRL1                      GPIO_AFRL_AFSEL1\n 6074: #define GPIO_AFRL_AFRL2                      GPIO_AFRL_AFSEL2\n 6075: #define GPIO_AFRL_AFRL3                      GPIO_AFRL_AFSEL3\n 6076: #define GPIO_AFRL_AFRL4                      GPIO_AFRL_AFSEL4\n 6077: #define GPIO_AFRL_AFRL5                      GPIO_AFRL_AFSEL5\n 6078: #define GPIO_AFRL_AFRL6                      GPIO_AFRL_AFSEL6\n 6079: #define GPIO_AFRL_AFRL7                      GPIO_AFRL_AFSEL7\n 6080  \n 6081: /****************** Bit definition for GPIO_AFRH register *********************/\n 6082: #define GPIO_AFRH_AFSEL8_Pos           (0U)\n 6083: #define GPIO_AFRH_AFSEL8_Msk           (0xFUL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x0000000F */\n 6084: #define GPIO_AFRH_AFSEL8               GPIO_AFRH_AFSEL8_Msk\n 6085: #define GPIO_AFRH_AFSEL8_0             (0x1UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000001 */\n 6086: #define GPIO_AFRH_AFSEL8_1             (0x2UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000002 */\n 6087: #define GPIO_AFRH_AFSEL8_2             (0x4UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000004 */\n 6088: #define GPIO_AFRH_AFSEL8_3             (0x8UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000008 */\n 6089: #define GPIO_AFRH_AFSEL9_Pos           (4U)\n 6090: #define GPIO_AFRH_AFSEL9_Msk           (0xFUL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x000000F0 */\n 6091: #define GPIO_AFRH_AFSEL9               GPIO_AFRH_AFSEL9_Msk\n 6092: #define GPIO_AFRH_AFSEL9_0             (0x1UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000010 */\n 6093: #define GPIO_AFRH_AFSEL9_1             (0x2UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000020 */\n 6094: #define GPIO_AFRH_AFSEL9_2             (0x4UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000040 */\n 6095: #define GPIO_AFRH_AFSEL9_3             (0x8UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000080 */\n 6096: #define GPIO_AFRH_AFSEL10_Pos          (8U)\n 6097: #define GPIO_AFRH_AFSEL10_Msk          (0xFUL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000F00 */\n 6098: #define GPIO_AFRH_AFSEL10              GPIO_AFRH_AFSEL10_Msk\n 6099: #define GPIO_AFRH_AFSEL10_0            (0x1UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000100 */\n 6100: #define GPIO_AFRH_AFSEL10_1            (0x2UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000200 */\n 6101: #define GPIO_AFRH_AFSEL10_2            (0x4UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000400 */\n 6102: #define GPIO_AFRH_AFSEL10_3            (0x8UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000800 */\n 6103: #define GPIO_AFRH_AFSEL11_Pos          (12U)\n 6104: #define GPIO_AFRH_AFSEL11_Msk          (0xFUL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x0000F000 */\n 6105: #define GPIO_AFRH_AFSEL11              GPIO_AFRH_AFSEL11_Msk\n 6106: #define GPIO_AFRH_AFSEL11_0            (0x1UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00001000 */\n 6107: #define GPIO_AFRH_AFSEL11_1            (0x2UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00002000 */\n 6108: #define GPIO_AFRH_AFSEL11_2            (0x4UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00004000 */\n 6109: #define GPIO_AFRH_AFSEL11_3            (0x8UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00008000 */\n 6110: #define GPIO_AFRH_AFSEL12_Pos          (16U)\n 6111: #define GPIO_AFRH_AFSEL12_Msk          (0xFUL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x000F0000 */\n 6112: #define GPIO_AFRH_AFSEL12              GPIO_AFRH_AFSEL12_Msk\n 6113: #define GPIO_AFRH_AFSEL12_0            (0x1UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00010000 */\n 6114: #define GPIO_AFRH_AFSEL12_1            (0x2UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00020000 */\n 6115: #define GPIO_AFRH_AFSEL12_2            (0x4UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00040000 */\n 6116: #define GPIO_AFRH_AFSEL12_3            (0x8UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00080000 */\n 6117: #define GPIO_AFRH_AFSEL13_Pos          (20U)\n 6118: #define GPIO_AFRH_AFSEL13_Msk          (0xFUL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00F00000 */\n 6119: #define GPIO_AFRH_AFSEL13              GPIO_AFRH_AFSEL13_Msk\n 6120: #define GPIO_AFRH_AFSEL13_0            (0x1UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00100000 */\n 6121: #define GPIO_AFRH_AFSEL13_1            (0x2UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00200000 */\n 6122: #define GPIO_AFRH_AFSEL13_2            (0x4UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00400000 */\n 6123: #define GPIO_AFRH_AFSEL13_3            (0x8UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00800000 */\n 6124: #define GPIO_AFRH_AFSEL14_Pos          (24U)\n 6125: #define GPIO_AFRH_AFSEL14_Msk          (0xFUL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x0F000000 */\n 6126: #define GPIO_AFRH_AFSEL14              GPIO_AFRH_AFSEL14_Msk\n 6127: #define GPIO_AFRH_AFSEL14_0            (0x1UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x01000000 */\n 6128: #define GPIO_AFRH_AFSEL14_1            (0x2UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x02000000 */\n 6129: #define GPIO_AFRH_AFSEL14_2            (0x4UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x04000000 */\n 6130: #define GPIO_AFRH_AFSEL14_3            (0x8UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x08000000 */\n 6131: #define GPIO_AFRH_AFSEL15_Pos          (28U)\n 6132: #define GPIO_AFRH_AFSEL15_Msk          (0xFUL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0xF0000000 */\n 6133: #define GPIO_AFRH_AFSEL15              GPIO_AFRH_AFSEL15_Msk\n 6134: #define GPIO_AFRH_AFSEL15_0            (0x1UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x10000000 */\n 6135: #define GPIO_AFRH_AFSEL15_1            (0x2UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x20000000 */\n 6136: #define GPIO_AFRH_AFSEL15_2            (0x4UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x40000000 */\n 6137: #define GPIO_AFRH_AFSEL15_3            (0x8UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x80000000 */\n 6138  \n 6139  /* Legacy defines */\n 6140: #define GPIO_AFRH_AFRH0                      GPIO_AFRH_AFSEL8\n 6141: #define GPIO_AFRH_AFRH1                      GPIO_AFRH_AFSEL9\n 6142: #define GPIO_AFRH_AFRH2                      GPIO_AFRH_AFSEL10\n 6143: #define GPIO_AFRH_AFRH3                      GPIO_AFRH_AFSEL11\n 6144: #define GPIO_AFRH_AFRH4                      GPIO_AFRH_AFSEL12\n 6145: #define GPIO_AFRH_AFRH5                      GPIO_AFRH_AFSEL13\n 6146: #define GPIO_AFRH_AFRH6                      GPIO_AFRH_AFSEL14\n 6147: #define GPIO_AFRH_AFRH7                      GPIO_AFRH_AFSEL15\n 6148  \n 6149  /******************  Bits definition for GPIO_BRR register  ******************/\n ....\n 12833                                          ((INSTANCE) == GPIOG))\n 12834  \n 12835: /******************************* GPIO AF Instances ****************************/\n 12836: #define IS_GPIO_AF_INSTANCE(INSTANCE)   IS_GPIO_ALL_INSTANCE(INSTANCE)\n 12837  \n 12838  /**************************** GPIO Lock Instances *****************************/\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g471xx.h:\n 5996  #define GPIO_LCKR_LCKK                 GPIO_LCKR_LCKK_Msk\n 5997  \n 5998: /****************** Bit definition for GPIO_AFRL register *********************/\n 5999: #define GPIO_AFRL_AFSEL0_Pos           (0U)\n 6000: #define GPIO_AFRL_AFSEL0_Msk           (0xFUL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x0000000F */\n 6001: #define GPIO_AFRL_AFSEL0               GPIO_AFRL_AFSEL0_Msk\n 6002: #define GPIO_AFRL_AFSEL0_0             (0x1UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000001 */\n 6003: #define GPIO_AFRL_AFSEL0_1             (0x2UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000002 */\n 6004: #define GPIO_AFRL_AFSEL0_2             (0x4UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000004 */\n 6005: #define GPIO_AFRL_AFSEL0_3             (0x8UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000008 */\n 6006: #define GPIO_AFRL_AFSEL1_Pos           (4U)\n 6007: #define GPIO_AFRL_AFSEL1_Msk           (0xFUL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x000000F0 */\n 6008: #define GPIO_AFRL_AFSEL1               GPIO_AFRL_AFSEL1_Msk\n 6009: #define GPIO_AFRL_AFSEL1_0             (0x1UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000010 */\n 6010: #define GPIO_AFRL_AFSEL1_1             (0x2UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000020 */\n 6011: #define GPIO_AFRL_AFSEL1_2             (0x4UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000040 */\n 6012: #define GPIO_AFRL_AFSEL1_3             (0x8UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000080 */\n 6013: #define GPIO_AFRL_AFSEL2_Pos           (8U)\n 6014: #define GPIO_AFRL_AFSEL2_Msk           (0xFUL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000F00 */\n 6015: #define GPIO_AFRL_AFSEL2               GPIO_AFRL_AFSEL2_Msk\n 6016: #define GPIO_AFRL_AFSEL2_0             (0x1UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000100 */\n 6017: #define GPIO_AFRL_AFSEL2_1             (0x2UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000200 */\n 6018: #define GPIO_AFRL_AFSEL2_2             (0x4UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000400 */\n 6019: #define GPIO_AFRL_AFSEL2_3             (0x8UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000800 */\n 6020: #define GPIO_AFRL_AFSEL3_Pos           (12U)\n 6021: #define GPIO_AFRL_AFSEL3_Msk           (0xFUL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x0000F000 */\n 6022: #define GPIO_AFRL_AFSEL3               GPIO_AFRL_AFSEL3_Msk\n 6023: #define GPIO_AFRL_AFSEL3_0             (0x1UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00001000 */\n 6024: #define GPIO_AFRL_AFSEL3_1             (0x2UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00002000 */\n 6025: #define GPIO_AFRL_AFSEL3_2             (0x4UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00004000 */\n 6026: #define GPIO_AFRL_AFSEL3_3             (0x8UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00008000 */\n 6027: #define GPIO_AFRL_AFSEL4_Pos           (16U)\n 6028: #define GPIO_AFRL_AFSEL4_Msk           (0xFUL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x000F0000 */\n 6029: #define GPIO_AFRL_AFSEL4               GPIO_AFRL_AFSEL4_Msk\n 6030: #define GPIO_AFRL_AFSEL4_0             (0x1UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00010000 */\n 6031: #define GPIO_AFRL_AFSEL4_1             (0x2UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00020000 */\n 6032: #define GPIO_AFRL_AFSEL4_2             (0x4UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00040000 */\n 6033: #define GPIO_AFRL_AFSEL4_3             (0x8UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00080000 */\n 6034: #define GPIO_AFRL_AFSEL5_Pos           (20U)\n 6035: #define GPIO_AFRL_AFSEL5_Msk           (0xFUL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00F00000 */\n 6036: #define GPIO_AFRL_AFSEL5               GPIO_AFRL_AFSEL5_Msk\n 6037: #define GPIO_AFRL_AFSEL5_0             (0x1UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00100000 */\n 6038: #define GPIO_AFRL_AFSEL5_1             (0x2UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00200000 */\n 6039: #define GPIO_AFRL_AFSEL5_2             (0x4UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00400000 */\n 6040: #define GPIO_AFRL_AFSEL5_3             (0x8UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00800000 */\n 6041: #define GPIO_AFRL_AFSEL6_Pos           (24U)\n 6042: #define GPIO_AFRL_AFSEL6_Msk           (0xFUL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x0F000000 */\n 6043: #define GPIO_AFRL_AFSEL6               GPIO_AFRL_AFSEL6_Msk\n 6044: #define GPIO_AFRL_AFSEL6_0             (0x1UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x01000000 */\n 6045: #define GPIO_AFRL_AFSEL6_1             (0x2UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x02000000 */\n 6046: #define GPIO_AFRL_AFSEL6_2             (0x4UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x04000000 */\n 6047: #define GPIO_AFRL_AFSEL6_3             (0x8UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x08000000 */\n 6048: #define GPIO_AFRL_AFSEL7_Pos           (28U)\n 6049: #define GPIO_AFRL_AFSEL7_Msk           (0xFUL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0xF0000000 */\n 6050: #define GPIO_AFRL_AFSEL7               GPIO_AFRL_AFSEL7_Msk\n 6051: #define GPIO_AFRL_AFSEL7_0             (0x1UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x10000000 */\n 6052: #define GPIO_AFRL_AFSEL7_1             (0x2UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x20000000 */\n 6053: #define GPIO_AFRL_AFSEL7_2             (0x4UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x40000000 */\n 6054: #define GPIO_AFRL_AFSEL7_3             (0x8UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x80000000 */\n 6055  \n 6056  /* Legacy defines */\n 6057: #define GPIO_AFRL_AFRL0                      GPIO_AFRL_AFSEL0\n 6058: #define GPIO_AFRL_AFRL1                      GPIO_AFRL_AFSEL1\n 6059: #define GPIO_AFRL_AFRL2                      GPIO_AFRL_AFSEL2\n 6060: #define GPIO_AFRL_AFRL3                      GPIO_AFRL_AFSEL3\n 6061: #define GPIO_AFRL_AFRL4                      GPIO_AFRL_AFSEL4\n 6062: #define GPIO_AFRL_AFRL5                      GPIO_AFRL_AFSEL5\n 6063: #define GPIO_AFRL_AFRL6                      GPIO_AFRL_AFSEL6\n 6064: #define GPIO_AFRL_AFRL7                      GPIO_AFRL_AFSEL7\n 6065  \n 6066: /****************** Bit definition for GPIO_AFRH register *********************/\n 6067: #define GPIO_AFRH_AFSEL8_Pos           (0U)\n 6068: #define GPIO_AFRH_AFSEL8_Msk           (0xFUL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x0000000F */\n 6069: #define GPIO_AFRH_AFSEL8               GPIO_AFRH_AFSEL8_Msk\n 6070: #define GPIO_AFRH_AFSEL8_0             (0x1UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000001 */\n 6071: #define GPIO_AFRH_AFSEL8_1             (0x2UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000002 */\n 6072: #define GPIO_AFRH_AFSEL8_2             (0x4UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000004 */\n 6073: #define GPIO_AFRH_AFSEL8_3             (0x8UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000008 */\n 6074: #define GPIO_AFRH_AFSEL9_Pos           (4U)\n 6075: #define GPIO_AFRH_AFSEL9_Msk           (0xFUL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x000000F0 */\n 6076: #define GPIO_AFRH_AFSEL9               GPIO_AFRH_AFSEL9_Msk\n 6077: #define GPIO_AFRH_AFSEL9_0             (0x1UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000010 */\n 6078: #define GPIO_AFRH_AFSEL9_1             (0x2UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000020 */\n 6079: #define GPIO_AFRH_AFSEL9_2             (0x4UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000040 */\n 6080: #define GPIO_AFRH_AFSEL9_3             (0x8UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000080 */\n 6081: #define GPIO_AFRH_AFSEL10_Pos          (8U)\n 6082: #define GPIO_AFRH_AFSEL10_Msk          (0xFUL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000F00 */\n 6083: #define GPIO_AFRH_AFSEL10              GPIO_AFRH_AFSEL10_Msk\n 6084: #define GPIO_AFRH_AFSEL10_0            (0x1UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000100 */\n 6085: #define GPIO_AFRH_AFSEL10_1            (0x2UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000200 */\n 6086: #define GPIO_AFRH_AFSEL10_2            (0x4UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000400 */\n 6087: #define GPIO_AFRH_AFSEL10_3            (0x8UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000800 */\n 6088: #define GPIO_AFRH_AFSEL11_Pos          (12U)\n 6089: #define GPIO_AFRH_AFSEL11_Msk          (0xFUL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x0000F000 */\n 6090: #define GPIO_AFRH_AFSEL11              GPIO_AFRH_AFSEL11_Msk\n 6091: #define GPIO_AFRH_AFSEL11_0            (0x1UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00001000 */\n 6092: #define GPIO_AFRH_AFSEL11_1            (0x2UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00002000 */\n 6093: #define GPIO_AFRH_AFSEL11_2            (0x4UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00004000 */\n 6094: #define GPIO_AFRH_AFSEL11_3            (0x8UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00008000 */\n 6095: #define GPIO_AFRH_AFSEL12_Pos          (16U)\n 6096: #define GPIO_AFRH_AFSEL12_Msk          (0xFUL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x000F0000 */\n 6097: #define GPIO_AFRH_AFSEL12              GPIO_AFRH_AFSEL12_Msk\n 6098: #define GPIO_AFRH_AFSEL12_0            (0x1UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00010000 */\n 6099: #define GPIO_AFRH_AFSEL12_1            (0x2UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00020000 */\n 6100: #define GPIO_AFRH_AFSEL12_2            (0x4UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00040000 */\n 6101: #define GPIO_AFRH_AFSEL12_3            (0x8UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00080000 */\n 6102: #define GPIO_AFRH_AFSEL13_Pos          (20U)\n 6103: #define GPIO_AFRH_AFSEL13_Msk          (0xFUL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00F00000 */\n 6104: #define GPIO_AFRH_AFSEL13              GPIO_AFRH_AFSEL13_Msk\n 6105: #define GPIO_AFRH_AFSEL13_0            (0x1UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00100000 */\n 6106: #define GPIO_AFRH_AFSEL13_1            (0x2UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00200000 */\n 6107: #define GPIO_AFRH_AFSEL13_2            (0x4UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00400000 */\n 6108: #define GPIO_AFRH_AFSEL13_3            (0x8UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00800000 */\n 6109: #define GPIO_AFRH_AFSEL14_Pos          (24U)\n 6110: #define GPIO_AFRH_AFSEL14_Msk          (0xFUL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x0F000000 */\n 6111: #define GPIO_AFRH_AFSEL14              GPIO_AFRH_AFSEL14_Msk\n 6112: #define GPIO_AFRH_AFSEL14_0            (0x1UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x01000000 */\n 6113: #define GPIO_AFRH_AFSEL14_1            (0x2UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x02000000 */\n 6114: #define GPIO_AFRH_AFSEL14_2            (0x4UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x04000000 */\n 6115: #define GPIO_AFRH_AFSEL14_3            (0x8UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x08000000 */\n 6116: #define GPIO_AFRH_AFSEL15_Pos          (28U)\n 6117: #define GPIO_AFRH_AFSEL15_Msk          (0xFUL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0xF0000000 */\n 6118: #define GPIO_AFRH_AFSEL15              GPIO_AFRH_AFSEL15_Msk\n 6119: #define GPIO_AFRH_AFSEL15_0            (0x1UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x10000000 */\n 6120: #define GPIO_AFRH_AFSEL15_1            (0x2UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x20000000 */\n 6121: #define GPIO_AFRH_AFSEL15_2            (0x4UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x40000000 */\n 6122: #define GPIO_AFRH_AFSEL15_3            (0x8UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x80000000 */\n 6123  \n 6124  /* Legacy defines */\n 6125: #define GPIO_AFRH_AFRH0                      GPIO_AFRH_AFSEL8\n 6126: #define GPIO_AFRH_AFRH1                      GPIO_AFRH_AFSEL9\n 6127: #define GPIO_AFRH_AFRH2                      GPIO_AFRH_AFSEL10\n 6128: #define GPIO_AFRH_AFRH3                      GPIO_AFRH_AFSEL11\n 6129: #define GPIO_AFRH_AFRH4                      GPIO_AFRH_AFSEL12\n 6130: #define GPIO_AFRH_AFRH5                      GPIO_AFRH_AFSEL13\n 6131: #define GPIO_AFRH_AFRH6                      GPIO_AFRH_AFSEL14\n 6132: #define GPIO_AFRH_AFRH7                      GPIO_AFRH_AFSEL15\n 6133  \n 6134  /******************  Bits definition for GPIO_BRR register  ******************/\n ....\n 13115                                          ((INSTANCE) == GPIOG))\n 13116  \n 13117: /******************************* GPIO AF Instances ****************************/\n 13118: #define IS_GPIO_AF_INSTANCE(INSTANCE)   IS_GPIO_ALL_INSTANCE(INSTANCE)\n 13119  \n 13120  /**************************** GPIO Lock Instances *****************************/\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g473xx.h:\n 6537  #define GPIO_LCKR_LCKK                 GPIO_LCKR_LCKK_Msk\n 6538  \n 6539: /****************** Bit definition for GPIO_AFRL register *********************/\n 6540: #define GPIO_AFRL_AFSEL0_Pos           (0U)\n 6541: #define GPIO_AFRL_AFSEL0_Msk           (0xFUL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x0000000F */\n 6542: #define GPIO_AFRL_AFSEL0               GPIO_AFRL_AFSEL0_Msk\n 6543: #define GPIO_AFRL_AFSEL0_0             (0x1UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000001 */\n 6544: #define GPIO_AFRL_AFSEL0_1             (0x2UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000002 */\n 6545: #define GPIO_AFRL_AFSEL0_2             (0x4UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000004 */\n 6546: #define GPIO_AFRL_AFSEL0_3             (0x8UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000008 */\n 6547: #define GPIO_AFRL_AFSEL1_Pos           (4U)\n 6548: #define GPIO_AFRL_AFSEL1_Msk           (0xFUL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x000000F0 */\n 6549: #define GPIO_AFRL_AFSEL1               GPIO_AFRL_AFSEL1_Msk\n 6550: #define GPIO_AFRL_AFSEL1_0             (0x1UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000010 */\n 6551: #define GPIO_AFRL_AFSEL1_1             (0x2UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000020 */\n 6552: #define GPIO_AFRL_AFSEL1_2             (0x4UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000040 */\n 6553: #define GPIO_AFRL_AFSEL1_3             (0x8UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000080 */\n 6554: #define GPIO_AFRL_AFSEL2_Pos           (8U)\n 6555: #define GPIO_AFRL_AFSEL2_Msk           (0xFUL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000F00 */\n 6556: #define GPIO_AFRL_AFSEL2               GPIO_AFRL_AFSEL2_Msk\n 6557: #define GPIO_AFRL_AFSEL2_0             (0x1UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000100 */\n 6558: #define GPIO_AFRL_AFSEL2_1             (0x2UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000200 */\n 6559: #define GPIO_AFRL_AFSEL2_2             (0x4UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000400 */\n 6560: #define GPIO_AFRL_AFSEL2_3             (0x8UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000800 */\n 6561: #define GPIO_AFRL_AFSEL3_Pos           (12U)\n 6562: #define GPIO_AFRL_AFSEL3_Msk           (0xFUL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x0000F000 */\n 6563: #define GPIO_AFRL_AFSEL3               GPIO_AFRL_AFSEL3_Msk\n 6564: #define GPIO_AFRL_AFSEL3_0             (0x1UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00001000 */\n 6565: #define GPIO_AFRL_AFSEL3_1             (0x2UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00002000 */\n 6566: #define GPIO_AFRL_AFSEL3_2             (0x4UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00004000 */\n 6567: #define GPIO_AFRL_AFSEL3_3             (0x8UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00008000 */\n 6568: #define GPIO_AFRL_AFSEL4_Pos           (16U)\n 6569: #define GPIO_AFRL_AFSEL4_Msk           (0xFUL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x000F0000 */\n 6570: #define GPIO_AFRL_AFSEL4               GPIO_AFRL_AFSEL4_Msk\n 6571: #define GPIO_AFRL_AFSEL4_0             (0x1UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00010000 */\n 6572: #define GPIO_AFRL_AFSEL4_1             (0x2UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00020000 */\n 6573: #define GPIO_AFRL_AFSEL4_2             (0x4UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00040000 */\n 6574: #define GPIO_AFRL_AFSEL4_3             (0x8UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00080000 */\n 6575: #define GPIO_AFRL_AFSEL5_Pos           (20U)\n 6576: #define GPIO_AFRL_AFSEL5_Msk           (0xFUL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00F00000 */\n 6577: #define GPIO_AFRL_AFSEL5               GPIO_AFRL_AFSEL5_Msk\n 6578: #define GPIO_AFRL_AFSEL5_0             (0x1UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00100000 */\n 6579: #define GPIO_AFRL_AFSEL5_1             (0x2UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00200000 */\n 6580: #define GPIO_AFRL_AFSEL5_2             (0x4UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00400000 */\n 6581: #define GPIO_AFRL_AFSEL5_3             (0x8UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00800000 */\n 6582: #define GPIO_AFRL_AFSEL6_Pos           (24U)\n 6583: #define GPIO_AFRL_AFSEL6_Msk           (0xFUL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x0F000000 */\n 6584: #define GPIO_AFRL_AFSEL6               GPIO_AFRL_AFSEL6_Msk\n 6585: #define GPIO_AFRL_AFSEL6_0             (0x1UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x01000000 */\n 6586: #define GPIO_AFRL_AFSEL6_1             (0x2UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x02000000 */\n 6587: #define GPIO_AFRL_AFSEL6_2             (0x4UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x04000000 */\n 6588: #define GPIO_AFRL_AFSEL6_3             (0x8UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x08000000 */\n 6589: #define GPIO_AFRL_AFSEL7_Pos           (28U)\n 6590: #define GPIO_AFRL_AFSEL7_Msk           (0xFUL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0xF0000000 */\n 6591: #define GPIO_AFRL_AFSEL7               GPIO_AFRL_AFSEL7_Msk\n 6592: #define GPIO_AFRL_AFSEL7_0             (0x1UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x10000000 */\n 6593: #define GPIO_AFRL_AFSEL7_1             (0x2UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x20000000 */\n 6594: #define GPIO_AFRL_AFSEL7_2             (0x4UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x40000000 */\n 6595: #define GPIO_AFRL_AFSEL7_3             (0x8UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x80000000 */\n 6596  \n 6597  /* Legacy defines */\n 6598: #define GPIO_AFRL_AFRL0                      GPIO_AFRL_AFSEL0\n 6599: #define GPIO_AFRL_AFRL1                      GPIO_AFRL_AFSEL1\n 6600: #define GPIO_AFRL_AFRL2                      GPIO_AFRL_AFSEL2\n 6601: #define GPIO_AFRL_AFRL3                      GPIO_AFRL_AFSEL3\n 6602: #define GPIO_AFRL_AFRL4                      GPIO_AFRL_AFSEL4\n 6603: #define GPIO_AFRL_AFRL5                      GPIO_AFRL_AFSEL5\n 6604: #define GPIO_AFRL_AFRL6                      GPIO_AFRL_AFSEL6\n 6605: #define GPIO_AFRL_AFRL7                      GPIO_AFRL_AFSEL7\n 6606  \n 6607: /****************** Bit definition for GPIO_AFRH register *********************/\n 6608: #define GPIO_AFRH_AFSEL8_Pos           (0U)\n 6609: #define GPIO_AFRH_AFSEL8_Msk           (0xFUL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x0000000F */\n 6610: #define GPIO_AFRH_AFSEL8               GPIO_AFRH_AFSEL8_Msk\n 6611: #define GPIO_AFRH_AFSEL8_0             (0x1UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000001 */\n 6612: #define GPIO_AFRH_AFSEL8_1             (0x2UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000002 */\n 6613: #define GPIO_AFRH_AFSEL8_2             (0x4UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000004 */\n 6614: #define GPIO_AFRH_AFSEL8_3             (0x8UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000008 */\n 6615: #define GPIO_AFRH_AFSEL9_Pos           (4U)\n 6616: #define GPIO_AFRH_AFSEL9_Msk           (0xFUL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x000000F0 */\n 6617: #define GPIO_AFRH_AFSEL9               GPIO_AFRH_AFSEL9_Msk\n 6618: #define GPIO_AFRH_AFSEL9_0             (0x1UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000010 */\n 6619: #define GPIO_AFRH_AFSEL9_1             (0x2UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000020 */\n 6620: #define GPIO_AFRH_AFSEL9_2             (0x4UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000040 */\n 6621: #define GPIO_AFRH_AFSEL9_3             (0x8UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000080 */\n 6622: #define GPIO_AFRH_AFSEL10_Pos          (8U)\n 6623: #define GPIO_AFRH_AFSEL10_Msk          (0xFUL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000F00 */\n 6624: #define GPIO_AFRH_AFSEL10              GPIO_AFRH_AFSEL10_Msk\n 6625: #define GPIO_AFRH_AFSEL10_0            (0x1UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000100 */\n 6626: #define GPIO_AFRH_AFSEL10_1            (0x2UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000200 */\n 6627: #define GPIO_AFRH_AFSEL10_2            (0x4UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000400 */\n 6628: #define GPIO_AFRH_AFSEL10_3            (0x8UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000800 */\n 6629: #define GPIO_AFRH_AFSEL11_Pos          (12U)\n 6630: #define GPIO_AFRH_AFSEL11_Msk          (0xFUL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x0000F000 */\n 6631: #define GPIO_AFRH_AFSEL11              GPIO_AFRH_AFSEL11_Msk\n 6632: #define GPIO_AFRH_AFSEL11_0            (0x1UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00001000 */\n 6633: #define GPIO_AFRH_AFSEL11_1            (0x2UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00002000 */\n 6634: #define GPIO_AFRH_AFSEL11_2            (0x4UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00004000 */\n 6635: #define GPIO_AFRH_AFSEL11_3            (0x8UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00008000 */\n 6636: #define GPIO_AFRH_AFSEL12_Pos          (16U)\n 6637: #define GPIO_AFRH_AFSEL12_Msk          (0xFUL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x000F0000 */\n 6638: #define GPIO_AFRH_AFSEL12              GPIO_AFRH_AFSEL12_Msk\n 6639: #define GPIO_AFRH_AFSEL12_0            (0x1UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00010000 */\n 6640: #define GPIO_AFRH_AFSEL12_1            (0x2UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00020000 */\n 6641: #define GPIO_AFRH_AFSEL12_2            (0x4UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00040000 */\n 6642: #define GPIO_AFRH_AFSEL12_3            (0x8UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00080000 */\n 6643: #define GPIO_AFRH_AFSEL13_Pos          (20U)\n 6644: #define GPIO_AFRH_AFSEL13_Msk          (0xFUL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00F00000 */\n 6645: #define GPIO_AFRH_AFSEL13              GPIO_AFRH_AFSEL13_Msk\n 6646: #define GPIO_AFRH_AFSEL13_0            (0x1UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00100000 */\n 6647: #define GPIO_AFRH_AFSEL13_1            (0x2UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00200000 */\n 6648: #define GPIO_AFRH_AFSEL13_2            (0x4UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00400000 */\n 6649: #define GPIO_AFRH_AFSEL13_3            (0x8UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00800000 */\n 6650: #define GPIO_AFRH_AFSEL14_Pos          (24U)\n 6651: #define GPIO_AFRH_AFSEL14_Msk          (0xFUL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x0F000000 */\n 6652: #define GPIO_AFRH_AFSEL14              GPIO_AFRH_AFSEL14_Msk\n 6653: #define GPIO_AFRH_AFSEL14_0            (0x1UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x01000000 */\n 6654: #define GPIO_AFRH_AFSEL14_1            (0x2UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x02000000 */\n 6655: #define GPIO_AFRH_AFSEL14_2            (0x4UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x04000000 */\n 6656: #define GPIO_AFRH_AFSEL14_3            (0x8UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x08000000 */\n 6657: #define GPIO_AFRH_AFSEL15_Pos          (28U)\n 6658: #define GPIO_AFRH_AFSEL15_Msk          (0xFUL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0xF0000000 */\n 6659: #define GPIO_AFRH_AFSEL15              GPIO_AFRH_AFSEL15_Msk\n 6660: #define GPIO_AFRH_AFSEL15_0            (0x1UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x10000000 */\n 6661: #define GPIO_AFRH_AFSEL15_1            (0x2UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x20000000 */\n 6662: #define GPIO_AFRH_AFSEL15_2            (0x4UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x40000000 */\n 6663: #define GPIO_AFRH_AFSEL15_3            (0x8UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x80000000 */\n 6664  \n 6665  /* Legacy defines */\n 6666: #define GPIO_AFRH_AFRH0                      GPIO_AFRH_AFSEL8\n 6667: #define GPIO_AFRH_AFRH1                      GPIO_AFRH_AFSEL9\n 6668: #define GPIO_AFRH_AFRH2                      GPIO_AFRH_AFSEL10\n 6669: #define GPIO_AFRH_AFRH3                      GPIO_AFRH_AFSEL11\n 6670: #define GPIO_AFRH_AFRH4                      GPIO_AFRH_AFSEL12\n 6671: #define GPIO_AFRH_AFRH5                      GPIO_AFRH_AFSEL13\n 6672: #define GPIO_AFRH_AFRH6                      GPIO_AFRH_AFSEL14\n 6673: #define GPIO_AFRH_AFRH7                      GPIO_AFRH_AFSEL15\n 6674  \n 6675  /******************  Bits definition for GPIO_BRR register  ******************/\n ....\n 13916                                          ((INSTANCE) == GPIOG))\n 13917  \n 13918: /******************************* GPIO AF Instances ****************************/\n 13919: #define IS_GPIO_AF_INSTANCE(INSTANCE)   IS_GPIO_ALL_INSTANCE(INSTANCE)\n 13920  \n 13921  /**************************** GPIO Lock Instances *****************************/\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g474xx.h:\n 6675  #define GPIO_LCKR_LCKK                 GPIO_LCKR_LCKK_Msk\n 6676  \n 6677: /****************** Bit definition for GPIO_AFRL register *********************/\n 6678: #define GPIO_AFRL_AFSEL0_Pos           (0U)\n 6679: #define GPIO_AFRL_AFSEL0_Msk           (0xFUL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x0000000F */\n 6680: #define GPIO_AFRL_AFSEL0               GPIO_AFRL_AFSEL0_Msk\n 6681: #define GPIO_AFRL_AFSEL0_0             (0x1UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000001 */\n 6682: #define GPIO_AFRL_AFSEL0_1             (0x2UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000002 */\n 6683: #define GPIO_AFRL_AFSEL0_2             (0x4UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000004 */\n 6684: #define GPIO_AFRL_AFSEL0_3             (0x8UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000008 */\n 6685: #define GPIO_AFRL_AFSEL1_Pos           (4U)\n 6686: #define GPIO_AFRL_AFSEL1_Msk           (0xFUL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x000000F0 */\n 6687: #define GPIO_AFRL_AFSEL1               GPIO_AFRL_AFSEL1_Msk\n 6688: #define GPIO_AFRL_AFSEL1_0             (0x1UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000010 */\n 6689: #define GPIO_AFRL_AFSEL1_1             (0x2UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000020 */\n 6690: #define GPIO_AFRL_AFSEL1_2             (0x4UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000040 */\n 6691: #define GPIO_AFRL_AFSEL1_3             (0x8UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000080 */\n 6692: #define GPIO_AFRL_AFSEL2_Pos           (8U)\n 6693: #define GPIO_AFRL_AFSEL2_Msk           (0xFUL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000F00 */\n 6694: #define GPIO_AFRL_AFSEL2               GPIO_AFRL_AFSEL2_Msk\n 6695: #define GPIO_AFRL_AFSEL2_0             (0x1UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000100 */\n 6696: #define GPIO_AFRL_AFSEL2_1             (0x2UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000200 */\n 6697: #define GPIO_AFRL_AFSEL2_2             (0x4UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000400 */\n 6698: #define GPIO_AFRL_AFSEL2_3             (0x8UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000800 */\n 6699: #define GPIO_AFRL_AFSEL3_Pos           (12U)\n 6700: #define GPIO_AFRL_AFSEL3_Msk           (0xFUL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x0000F000 */\n 6701: #define GPIO_AFRL_AFSEL3               GPIO_AFRL_AFSEL3_Msk\n 6702: #define GPIO_AFRL_AFSEL3_0             (0x1UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00001000 */\n 6703: #define GPIO_AFRL_AFSEL3_1             (0x2UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00002000 */\n 6704: #define GPIO_AFRL_AFSEL3_2             (0x4UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00004000 */\n 6705: #define GPIO_AFRL_AFSEL3_3             (0x8UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00008000 */\n 6706: #define GPIO_AFRL_AFSEL4_Pos           (16U)\n 6707: #define GPIO_AFRL_AFSEL4_Msk           (0xFUL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x000F0000 */\n 6708: #define GPIO_AFRL_AFSEL4               GPIO_AFRL_AFSEL4_Msk\n 6709: #define GPIO_AFRL_AFSEL4_0             (0x1UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00010000 */\n 6710: #define GPIO_AFRL_AFSEL4_1             (0x2UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00020000 */\n 6711: #define GPIO_AFRL_AFSEL4_2             (0x4UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00040000 */\n 6712: #define GPIO_AFRL_AFSEL4_3             (0x8UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00080000 */\n 6713: #define GPIO_AFRL_AFSEL5_Pos           (20U)\n 6714: #define GPIO_AFRL_AFSEL5_Msk           (0xFUL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00F00000 */\n 6715: #define GPIO_AFRL_AFSEL5               GPIO_AFRL_AFSEL5_Msk\n 6716: #define GPIO_AFRL_AFSEL5_0             (0x1UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00100000 */\n 6717: #define GPIO_AFRL_AFSEL5_1             (0x2UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00200000 */\n 6718: #define GPIO_AFRL_AFSEL5_2             (0x4UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00400000 */\n 6719: #define GPIO_AFRL_AFSEL5_3             (0x8UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00800000 */\n 6720: #define GPIO_AFRL_AFSEL6_Pos           (24U)\n 6721: #define GPIO_AFRL_AFSEL6_Msk           (0xFUL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x0F000000 */\n 6722: #define GPIO_AFRL_AFSEL6               GPIO_AFRL_AFSEL6_Msk\n 6723: #define GPIO_AFRL_AFSEL6_0             (0x1UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x01000000 */\n 6724: #define GPIO_AFRL_AFSEL6_1             (0x2UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x02000000 */\n 6725: #define GPIO_AFRL_AFSEL6_2             (0x4UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x04000000 */\n 6726: #define GPIO_AFRL_AFSEL6_3             (0x8UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x08000000 */\n 6727: #define GPIO_AFRL_AFSEL7_Pos           (28U)\n 6728: #define GPIO_AFRL_AFSEL7_Msk           (0xFUL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0xF0000000 */\n 6729: #define GPIO_AFRL_AFSEL7               GPIO_AFRL_AFSEL7_Msk\n 6730: #define GPIO_AFRL_AFSEL7_0             (0x1UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x10000000 */\n 6731: #define GPIO_AFRL_AFSEL7_1             (0x2UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x20000000 */\n 6732: #define GPIO_AFRL_AFSEL7_2             (0x4UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x40000000 */\n 6733: #define GPIO_AFRL_AFSEL7_3             (0x8UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x80000000 */\n 6734  \n 6735  /* Legacy defines */\n 6736: #define GPIO_AFRL_AFRL0                      GPIO_AFRL_AFSEL0\n 6737: #define GPIO_AFRL_AFRL1                      GPIO_AFRL_AFSEL1\n 6738: #define GPIO_AFRL_AFRL2                      GPIO_AFRL_AFSEL2\n 6739: #define GPIO_AFRL_AFRL3                      GPIO_AFRL_AFSEL3\n 6740: #define GPIO_AFRL_AFRL4                      GPIO_AFRL_AFSEL4\n 6741: #define GPIO_AFRL_AFRL5                      GPIO_AFRL_AFSEL5\n 6742: #define GPIO_AFRL_AFRL6                      GPIO_AFRL_AFSEL6\n 6743: #define GPIO_AFRL_AFRL7                      GPIO_AFRL_AFSEL7\n 6744  \n 6745: /****************** Bit definition for GPIO_AFRH register *********************/\n 6746: #define GPIO_AFRH_AFSEL8_Pos           (0U)\n 6747: #define GPIO_AFRH_AFSEL8_Msk           (0xFUL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x0000000F */\n 6748: #define GPIO_AFRH_AFSEL8               GPIO_AFRH_AFSEL8_Msk\n 6749: #define GPIO_AFRH_AFSEL8_0             (0x1UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000001 */\n 6750: #define GPIO_AFRH_AFSEL8_1             (0x2UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000002 */\n 6751: #define GPIO_AFRH_AFSEL8_2             (0x4UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000004 */\n 6752: #define GPIO_AFRH_AFSEL8_3             (0x8UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000008 */\n 6753: #define GPIO_AFRH_AFSEL9_Pos           (4U)\n 6754: #define GPIO_AFRH_AFSEL9_Msk           (0xFUL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x000000F0 */\n 6755: #define GPIO_AFRH_AFSEL9               GPIO_AFRH_AFSEL9_Msk\n 6756: #define GPIO_AFRH_AFSEL9_0             (0x1UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000010 */\n 6757: #define GPIO_AFRH_AFSEL9_1             (0x2UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000020 */\n 6758: #define GPIO_AFRH_AFSEL9_2             (0x4UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000040 */\n 6759: #define GPIO_AFRH_AFSEL9_3             (0x8UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000080 */\n 6760: #define GPIO_AFRH_AFSEL10_Pos          (8U)\n 6761: #define GPIO_AFRH_AFSEL10_Msk          (0xFUL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000F00 */\n 6762: #define GPIO_AFRH_AFSEL10              GPIO_AFRH_AFSEL10_Msk\n 6763: #define GPIO_AFRH_AFSEL10_0            (0x1UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000100 */\n 6764: #define GPIO_AFRH_AFSEL10_1            (0x2UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000200 */\n 6765: #define GPIO_AFRH_AFSEL10_2            (0x4UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000400 */\n 6766: #define GPIO_AFRH_AFSEL10_3            (0x8UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000800 */\n 6767: #define GPIO_AFRH_AFSEL11_Pos          (12U)\n 6768: #define GPIO_AFRH_AFSEL11_Msk          (0xFUL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x0000F000 */\n 6769: #define GPIO_AFRH_AFSEL11              GPIO_AFRH_AFSEL11_Msk\n 6770: #define GPIO_AFRH_AFSEL11_0            (0x1UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00001000 */\n 6771: #define GPIO_AFRH_AFSEL11_1            (0x2UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00002000 */\n 6772: #define GPIO_AFRH_AFSEL11_2            (0x4UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00004000 */\n 6773: #define GPIO_AFRH_AFSEL11_3            (0x8UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00008000 */\n 6774: #define GPIO_AFRH_AFSEL12_Pos          (16U)\n 6775: #define GPIO_AFRH_AFSEL12_Msk          (0xFUL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x000F0000 */\n 6776: #define GPIO_AFRH_AFSEL12              GPIO_AFRH_AFSEL12_Msk\n 6777: #define GPIO_AFRH_AFSEL12_0            (0x1UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00010000 */\n 6778: #define GPIO_AFRH_AFSEL12_1            (0x2UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00020000 */\n 6779: #define GPIO_AFRH_AFSEL12_2            (0x4UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00040000 */\n 6780: #define GPIO_AFRH_AFSEL12_3            (0x8UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00080000 */\n 6781: #define GPIO_AFRH_AFSEL13_Pos          (20U)\n 6782: #define GPIO_AFRH_AFSEL13_Msk          (0xFUL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00F00000 */\n 6783: #define GPIO_AFRH_AFSEL13              GPIO_AFRH_AFSEL13_Msk\n 6784: #define GPIO_AFRH_AFSEL13_0            (0x1UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00100000 */\n 6785: #define GPIO_AFRH_AFSEL13_1            (0x2UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00200000 */\n 6786: #define GPIO_AFRH_AFSEL13_2            (0x4UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00400000 */\n 6787: #define GPIO_AFRH_AFSEL13_3            (0x8UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00800000 */\n 6788: #define GPIO_AFRH_AFSEL14_Pos          (24U)\n 6789: #define GPIO_AFRH_AFSEL14_Msk          (0xFUL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x0F000000 */\n 6790: #define GPIO_AFRH_AFSEL14              GPIO_AFRH_AFSEL14_Msk\n 6791: #define GPIO_AFRH_AFSEL14_0            (0x1UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x01000000 */\n 6792: #define GPIO_AFRH_AFSEL14_1            (0x2UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x02000000 */\n 6793: #define GPIO_AFRH_AFSEL14_2            (0x4UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x04000000 */\n 6794: #define GPIO_AFRH_AFSEL14_3            (0x8UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x08000000 */\n 6795: #define GPIO_AFRH_AFSEL15_Pos          (28U)\n 6796: #define GPIO_AFRH_AFSEL15_Msk          (0xFUL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0xF0000000 */\n 6797: #define GPIO_AFRH_AFSEL15              GPIO_AFRH_AFSEL15_Msk\n 6798: #define GPIO_AFRH_AFSEL15_0            (0x1UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x10000000 */\n 6799: #define GPIO_AFRH_AFSEL15_1            (0x2UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x20000000 */\n 6800: #define GPIO_AFRH_AFSEL15_2            (0x4UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x40000000 */\n 6801: #define GPIO_AFRH_AFSEL15_3            (0x8UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x80000000 */\n 6802  \n 6803  /* Legacy defines */\n 6804: #define GPIO_AFRH_AFRH0                      GPIO_AFRH_AFSEL8\n 6805: #define GPIO_AFRH_AFRH1                      GPIO_AFRH_AFSEL9\n 6806: #define GPIO_AFRH_AFRH2                      GPIO_AFRH_AFSEL10\n 6807: #define GPIO_AFRH_AFRH3                      GPIO_AFRH_AFSEL11\n 6808: #define GPIO_AFRH_AFRH4                      GPIO_AFRH_AFSEL12\n 6809: #define GPIO_AFRH_AFRH5                      GPIO_AFRH_AFSEL13\n 6810: #define GPIO_AFRH_AFRH6                      GPIO_AFRH_AFSEL14\n 6811: #define GPIO_AFRH_AFRH7                      GPIO_AFRH_AFSEL15\n 6812  \n 6813  /******************  Bits definition for GPIO_BRR register  ******************/\n ....\n 17278                                          ((INSTANCE) == GPIOG))\n 17279  \n 17280: /******************************* GPIO AF Instances ****************************/\n 17281: #define IS_GPIO_AF_INSTANCE(INSTANCE)   IS_GPIO_ALL_INSTANCE(INSTANCE)\n 17282  \n 17283  /**************************** GPIO Lock Instances *****************************/\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g483xx.h:\n 6759  #define GPIO_LCKR_LCKK                 GPIO_LCKR_LCKK_Msk\n 6760  \n 6761: /****************** Bit definition for GPIO_AFRL register *********************/\n 6762: #define GPIO_AFRL_AFSEL0_Pos           (0U)\n 6763: #define GPIO_AFRL_AFSEL0_Msk           (0xFUL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x0000000F */\n 6764: #define GPIO_AFRL_AFSEL0               GPIO_AFRL_AFSEL0_Msk\n 6765: #define GPIO_AFRL_AFSEL0_0             (0x1UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000001 */\n 6766: #define GPIO_AFRL_AFSEL0_1             (0x2UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000002 */\n 6767: #define GPIO_AFRL_AFSEL0_2             (0x4UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000004 */\n 6768: #define GPIO_AFRL_AFSEL0_3             (0x8UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000008 */\n 6769: #define GPIO_AFRL_AFSEL1_Pos           (4U)\n 6770: #define GPIO_AFRL_AFSEL1_Msk           (0xFUL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x000000F0 */\n 6771: #define GPIO_AFRL_AFSEL1               GPIO_AFRL_AFSEL1_Msk\n 6772: #define GPIO_AFRL_AFSEL1_0             (0x1UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000010 */\n 6773: #define GPIO_AFRL_AFSEL1_1             (0x2UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000020 */\n 6774: #define GPIO_AFRL_AFSEL1_2             (0x4UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000040 */\n 6775: #define GPIO_AFRL_AFSEL1_3             (0x8UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000080 */\n 6776: #define GPIO_AFRL_AFSEL2_Pos           (8U)\n 6777: #define GPIO_AFRL_AFSEL2_Msk           (0xFUL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000F00 */\n 6778: #define GPIO_AFRL_AFSEL2               GPIO_AFRL_AFSEL2_Msk\n 6779: #define GPIO_AFRL_AFSEL2_0             (0x1UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000100 */\n 6780: #define GPIO_AFRL_AFSEL2_1             (0x2UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000200 */\n 6781: #define GPIO_AFRL_AFSEL2_2             (0x4UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000400 */\n 6782: #define GPIO_AFRL_AFSEL2_3             (0x8UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000800 */\n 6783: #define GPIO_AFRL_AFSEL3_Pos           (12U)\n 6784: #define GPIO_AFRL_AFSEL3_Msk           (0xFUL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x0000F000 */\n 6785: #define GPIO_AFRL_AFSEL3               GPIO_AFRL_AFSEL3_Msk\n 6786: #define GPIO_AFRL_AFSEL3_0             (0x1UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00001000 */\n 6787: #define GPIO_AFRL_AFSEL3_1             (0x2UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00002000 */\n 6788: #define GPIO_AFRL_AFSEL3_2             (0x4UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00004000 */\n 6789: #define GPIO_AFRL_AFSEL3_3             (0x8UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00008000 */\n 6790: #define GPIO_AFRL_AFSEL4_Pos           (16U)\n 6791: #define GPIO_AFRL_AFSEL4_Msk           (0xFUL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x000F0000 */\n 6792: #define GPIO_AFRL_AFSEL4               GPIO_AFRL_AFSEL4_Msk\n 6793: #define GPIO_AFRL_AFSEL4_0             (0x1UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00010000 */\n 6794: #define GPIO_AFRL_AFSEL4_1             (0x2UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00020000 */\n 6795: #define GPIO_AFRL_AFSEL4_2             (0x4UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00040000 */\n 6796: #define GPIO_AFRL_AFSEL4_3             (0x8UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00080000 */\n 6797: #define GPIO_AFRL_AFSEL5_Pos           (20U)\n 6798: #define GPIO_AFRL_AFSEL5_Msk           (0xFUL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00F00000 */\n 6799: #define GPIO_AFRL_AFSEL5               GPIO_AFRL_AFSEL5_Msk\n 6800: #define GPIO_AFRL_AFSEL5_0             (0x1UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00100000 */\n 6801: #define GPIO_AFRL_AFSEL5_1             (0x2UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00200000 */\n 6802: #define GPIO_AFRL_AFSEL5_2             (0x4UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00400000 */\n 6803: #define GPIO_AFRL_AFSEL5_3             (0x8UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00800000 */\n 6804: #define GPIO_AFRL_AFSEL6_Pos           (24U)\n 6805: #define GPIO_AFRL_AFSEL6_Msk           (0xFUL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x0F000000 */\n 6806: #define GPIO_AFRL_AFSEL6               GPIO_AFRL_AFSEL6_Msk\n 6807: #define GPIO_AFRL_AFSEL6_0             (0x1UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x01000000 */\n 6808: #define GPIO_AFRL_AFSEL6_1             (0x2UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x02000000 */\n 6809: #define GPIO_AFRL_AFSEL6_2             (0x4UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x04000000 */\n 6810: #define GPIO_AFRL_AFSEL6_3             (0x8UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x08000000 */\n 6811: #define GPIO_AFRL_AFSEL7_Pos           (28U)\n 6812: #define GPIO_AFRL_AFSEL7_Msk           (0xFUL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0xF0000000 */\n 6813: #define GPIO_AFRL_AFSEL7               GPIO_AFRL_AFSEL7_Msk\n 6814: #define GPIO_AFRL_AFSEL7_0             (0x1UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x10000000 */\n 6815: #define GPIO_AFRL_AFSEL7_1             (0x2UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x20000000 */\n 6816: #define GPIO_AFRL_AFSEL7_2             (0x4UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x40000000 */\n 6817: #define GPIO_AFRL_AFSEL7_3             (0x8UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x80000000 */\n 6818  \n 6819  /* Legacy defines */\n 6820: #define GPIO_AFRL_AFRL0                      GPIO_AFRL_AFSEL0\n 6821: #define GPIO_AFRL_AFRL1                      GPIO_AFRL_AFSEL1\n 6822: #define GPIO_AFRL_AFRL2                      GPIO_AFRL_AFSEL2\n 6823: #define GPIO_AFRL_AFRL3                      GPIO_AFRL_AFSEL3\n 6824: #define GPIO_AFRL_AFRL4                      GPIO_AFRL_AFSEL4\n 6825: #define GPIO_AFRL_AFRL5                      GPIO_AFRL_AFSEL5\n 6826: #define GPIO_AFRL_AFRL6                      GPIO_AFRL_AFSEL6\n 6827: #define GPIO_AFRL_AFRL7                      GPIO_AFRL_AFSEL7\n 6828  \n 6829: /****************** Bit definition for GPIO_AFRH register *********************/\n 6830: #define GPIO_AFRH_AFSEL8_Pos           (0U)\n 6831: #define GPIO_AFRH_AFSEL8_Msk           (0xFUL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x0000000F */\n 6832: #define GPIO_AFRH_AFSEL8               GPIO_AFRH_AFSEL8_Msk\n 6833: #define GPIO_AFRH_AFSEL8_0             (0x1UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000001 */\n 6834: #define GPIO_AFRH_AFSEL8_1             (0x2UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000002 */\n 6835: #define GPIO_AFRH_AFSEL8_2             (0x4UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000004 */\n 6836: #define GPIO_AFRH_AFSEL8_3             (0x8UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000008 */\n 6837: #define GPIO_AFRH_AFSEL9_Pos           (4U)\n 6838: #define GPIO_AFRH_AFSEL9_Msk           (0xFUL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x000000F0 */\n 6839: #define GPIO_AFRH_AFSEL9               GPIO_AFRH_AFSEL9_Msk\n 6840: #define GPIO_AFRH_AFSEL9_0             (0x1UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000010 */\n 6841: #define GPIO_AFRH_AFSEL9_1             (0x2UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000020 */\n 6842: #define GPIO_AFRH_AFSEL9_2             (0x4UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000040 */\n 6843: #define GPIO_AFRH_AFSEL9_3             (0x8UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000080 */\n 6844: #define GPIO_AFRH_AFSEL10_Pos          (8U)\n 6845: #define GPIO_AFRH_AFSEL10_Msk          (0xFUL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000F00 */\n 6846: #define GPIO_AFRH_AFSEL10              GPIO_AFRH_AFSEL10_Msk\n 6847: #define GPIO_AFRH_AFSEL10_0            (0x1UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000100 */\n 6848: #define GPIO_AFRH_AFSEL10_1            (0x2UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000200 */\n 6849: #define GPIO_AFRH_AFSEL10_2            (0x4UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000400 */\n 6850: #define GPIO_AFRH_AFSEL10_3            (0x8UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000800 */\n 6851: #define GPIO_AFRH_AFSEL11_Pos          (12U)\n 6852: #define GPIO_AFRH_AFSEL11_Msk          (0xFUL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x0000F000 */\n 6853: #define GPIO_AFRH_AFSEL11              GPIO_AFRH_AFSEL11_Msk\n 6854: #define GPIO_AFRH_AFSEL11_0            (0x1UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00001000 */\n 6855: #define GPIO_AFRH_AFSEL11_1            (0x2UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00002000 */\n 6856: #define GPIO_AFRH_AFSEL11_2            (0x4UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00004000 */\n 6857: #define GPIO_AFRH_AFSEL11_3            (0x8UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00008000 */\n 6858: #define GPIO_AFRH_AFSEL12_Pos          (16U)\n 6859: #define GPIO_AFRH_AFSEL12_Msk          (0xFUL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x000F0000 */\n 6860: #define GPIO_AFRH_AFSEL12              GPIO_AFRH_AFSEL12_Msk\n 6861: #define GPIO_AFRH_AFSEL12_0            (0x1UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00010000 */\n 6862: #define GPIO_AFRH_AFSEL12_1            (0x2UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00020000 */\n 6863: #define GPIO_AFRH_AFSEL12_2            (0x4UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00040000 */\n 6864: #define GPIO_AFRH_AFSEL12_3            (0x8UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00080000 */\n 6865: #define GPIO_AFRH_AFSEL13_Pos          (20U)\n 6866: #define GPIO_AFRH_AFSEL13_Msk          (0xFUL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00F00000 */\n 6867: #define GPIO_AFRH_AFSEL13              GPIO_AFRH_AFSEL13_Msk\n 6868: #define GPIO_AFRH_AFSEL13_0            (0x1UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00100000 */\n 6869: #define GPIO_AFRH_AFSEL13_1            (0x2UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00200000 */\n 6870: #define GPIO_AFRH_AFSEL13_2            (0x4UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00400000 */\n 6871: #define GPIO_AFRH_AFSEL13_3            (0x8UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00800000 */\n 6872: #define GPIO_AFRH_AFSEL14_Pos          (24U)\n 6873: #define GPIO_AFRH_AFSEL14_Msk          (0xFUL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x0F000000 */\n 6874: #define GPIO_AFRH_AFSEL14              GPIO_AFRH_AFSEL14_Msk\n 6875: #define GPIO_AFRH_AFSEL14_0            (0x1UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x01000000 */\n 6876: #define GPIO_AFRH_AFSEL14_1            (0x2UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x02000000 */\n 6877: #define GPIO_AFRH_AFSEL14_2            (0x4UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x04000000 */\n 6878: #define GPIO_AFRH_AFSEL14_3            (0x8UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x08000000 */\n 6879: #define GPIO_AFRH_AFSEL15_Pos          (28U)\n 6880: #define GPIO_AFRH_AFSEL15_Msk          (0xFUL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0xF0000000 */\n 6881: #define GPIO_AFRH_AFSEL15              GPIO_AFRH_AFSEL15_Msk\n 6882: #define GPIO_AFRH_AFSEL15_0            (0x1UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x10000000 */\n 6883: #define GPIO_AFRH_AFSEL15_1            (0x2UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x20000000 */\n 6884: #define GPIO_AFRH_AFSEL15_2            (0x4UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x40000000 */\n 6885: #define GPIO_AFRH_AFSEL15_3            (0x8UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x80000000 */\n 6886  \n 6887  /* Legacy defines */\n 6888: #define GPIO_AFRH_AFRH0                      GPIO_AFRH_AFSEL8\n 6889: #define GPIO_AFRH_AFRH1                      GPIO_AFRH_AFSEL9\n 6890: #define GPIO_AFRH_AFRH2                      GPIO_AFRH_AFSEL10\n 6891: #define GPIO_AFRH_AFRH3                      GPIO_AFRH_AFSEL11\n 6892: #define GPIO_AFRH_AFRH4                      GPIO_AFRH_AFSEL12\n 6893: #define GPIO_AFRH_AFRH5                      GPIO_AFRH_AFSEL13\n 6894: #define GPIO_AFRH_AFRH6                      GPIO_AFRH_AFSEL14\n 6895: #define GPIO_AFRH_AFRH7                      GPIO_AFRH_AFSEL15\n 6896  \n 6897  /******************  Bits definition for GPIO_BRR register  ******************/\n ....\n 14149                                          ((INSTANCE) == GPIOG))\n 14150  \n 14151: /******************************* GPIO AF Instances ****************************/\n 14152: #define IS_GPIO_AF_INSTANCE(INSTANCE)   IS_GPIO_ALL_INSTANCE(INSTANCE)\n 14153  \n 14154  /**************************** GPIO Lock Instances *****************************/\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g484xx.h:\n 6897  #define GPIO_LCKR_LCKK                 GPIO_LCKR_LCKK_Msk\n 6898  \n 6899: /****************** Bit definition for GPIO_AFRL register *********************/\n 6900: #define GPIO_AFRL_AFSEL0_Pos           (0U)\n 6901: #define GPIO_AFRL_AFSEL0_Msk           (0xFUL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x0000000F */\n 6902: #define GPIO_AFRL_AFSEL0               GPIO_AFRL_AFSEL0_Msk\n 6903: #define GPIO_AFRL_AFSEL0_0             (0x1UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000001 */\n 6904: #define GPIO_AFRL_AFSEL0_1             (0x2UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000002 */\n 6905: #define GPIO_AFRL_AFSEL0_2             (0x4UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000004 */\n 6906: #define GPIO_AFRL_AFSEL0_3             (0x8UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000008 */\n 6907: #define GPIO_AFRL_AFSEL1_Pos           (4U)\n 6908: #define GPIO_AFRL_AFSEL1_Msk           (0xFUL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x000000F0 */\n 6909: #define GPIO_AFRL_AFSEL1               GPIO_AFRL_AFSEL1_Msk\n 6910: #define GPIO_AFRL_AFSEL1_0             (0x1UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000010 */\n 6911: #define GPIO_AFRL_AFSEL1_1             (0x2UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000020 */\n 6912: #define GPIO_AFRL_AFSEL1_2             (0x4UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000040 */\n 6913: #define GPIO_AFRL_AFSEL1_3             (0x8UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000080 */\n 6914: #define GPIO_AFRL_AFSEL2_Pos           (8U)\n 6915: #define GPIO_AFRL_AFSEL2_Msk           (0xFUL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000F00 */\n 6916: #define GPIO_AFRL_AFSEL2               GPIO_AFRL_AFSEL2_Msk\n 6917: #define GPIO_AFRL_AFSEL2_0             (0x1UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000100 */\n 6918: #define GPIO_AFRL_AFSEL2_1             (0x2UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000200 */\n 6919: #define GPIO_AFRL_AFSEL2_2             (0x4UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000400 */\n 6920: #define GPIO_AFRL_AFSEL2_3             (0x8UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000800 */\n 6921: #define GPIO_AFRL_AFSEL3_Pos           (12U)\n 6922: #define GPIO_AFRL_AFSEL3_Msk           (0xFUL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x0000F000 */\n 6923: #define GPIO_AFRL_AFSEL3               GPIO_AFRL_AFSEL3_Msk\n 6924: #define GPIO_AFRL_AFSEL3_0             (0x1UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00001000 */\n 6925: #define GPIO_AFRL_AFSEL3_1             (0x2UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00002000 */\n 6926: #define GPIO_AFRL_AFSEL3_2             (0x4UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00004000 */\n 6927: #define GPIO_AFRL_AFSEL3_3             (0x8UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00008000 */\n 6928: #define GPIO_AFRL_AFSEL4_Pos           (16U)\n 6929: #define GPIO_AFRL_AFSEL4_Msk           (0xFUL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x000F0000 */\n 6930: #define GPIO_AFRL_AFSEL4               GPIO_AFRL_AFSEL4_Msk\n 6931: #define GPIO_AFRL_AFSEL4_0             (0x1UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00010000 */\n 6932: #define GPIO_AFRL_AFSEL4_1             (0x2UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00020000 */\n 6933: #define GPIO_AFRL_AFSEL4_2             (0x4UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00040000 */\n 6934: #define GPIO_AFRL_AFSEL4_3             (0x8UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00080000 */\n 6935: #define GPIO_AFRL_AFSEL5_Pos           (20U)\n 6936: #define GPIO_AFRL_AFSEL5_Msk           (0xFUL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00F00000 */\n 6937: #define GPIO_AFRL_AFSEL5               GPIO_AFRL_AFSEL5_Msk\n 6938: #define GPIO_AFRL_AFSEL5_0             (0x1UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00100000 */\n 6939: #define GPIO_AFRL_AFSEL5_1             (0x2UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00200000 */\n 6940: #define GPIO_AFRL_AFSEL5_2             (0x4UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00400000 */\n 6941: #define GPIO_AFRL_AFSEL5_3             (0x8UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00800000 */\n 6942: #define GPIO_AFRL_AFSEL6_Pos           (24U)\n 6943: #define GPIO_AFRL_AFSEL6_Msk           (0xFUL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x0F000000 */\n 6944: #define GPIO_AFRL_AFSEL6               GPIO_AFRL_AFSEL6_Msk\n 6945: #define GPIO_AFRL_AFSEL6_0             (0x1UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x01000000 */\n 6946: #define GPIO_AFRL_AFSEL6_1             (0x2UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x02000000 */\n 6947: #define GPIO_AFRL_AFSEL6_2             (0x4UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x04000000 */\n 6948: #define GPIO_AFRL_AFSEL6_3             (0x8UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x08000000 */\n 6949: #define GPIO_AFRL_AFSEL7_Pos           (28U)\n 6950: #define GPIO_AFRL_AFSEL7_Msk           (0xFUL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0xF0000000 */\n 6951: #define GPIO_AFRL_AFSEL7               GPIO_AFRL_AFSEL7_Msk\n 6952: #define GPIO_AFRL_AFSEL7_0             (0x1UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x10000000 */\n 6953: #define GPIO_AFRL_AFSEL7_1             (0x2UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x20000000 */\n 6954: #define GPIO_AFRL_AFSEL7_2             (0x4UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x40000000 */\n 6955: #define GPIO_AFRL_AFSEL7_3             (0x8UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x80000000 */\n 6956  \n 6957  /* Legacy defines */\n 6958: #define GPIO_AFRL_AFRL0                      GPIO_AFRL_AFSEL0\n 6959: #define GPIO_AFRL_AFRL1                      GPIO_AFRL_AFSEL1\n 6960: #define GPIO_AFRL_AFRL2                      GPIO_AFRL_AFSEL2\n 6961: #define GPIO_AFRL_AFRL3                      GPIO_AFRL_AFSEL3\n 6962: #define GPIO_AFRL_AFRL4                      GPIO_AFRL_AFSEL4\n 6963: #define GPIO_AFRL_AFRL5                      GPIO_AFRL_AFSEL5\n 6964: #define GPIO_AFRL_AFRL6                      GPIO_AFRL_AFSEL6\n 6965: #define GPIO_AFRL_AFRL7                      GPIO_AFRL_AFSEL7\n 6966  \n 6967: /****************** Bit definition for GPIO_AFRH register *********************/\n 6968: #define GPIO_AFRH_AFSEL8_Pos           (0U)\n 6969: #define GPIO_AFRH_AFSEL8_Msk           (0xFUL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x0000000F */\n 6970: #define GPIO_AFRH_AFSEL8               GPIO_AFRH_AFSEL8_Msk\n 6971: #define GPIO_AFRH_AFSEL8_0             (0x1UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000001 */\n 6972: #define GPIO_AFRH_AFSEL8_1             (0x2UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000002 */\n 6973: #define GPIO_AFRH_AFSEL8_2             (0x4UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000004 */\n 6974: #define GPIO_AFRH_AFSEL8_3             (0x8UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000008 */\n 6975: #define GPIO_AFRH_AFSEL9_Pos           (4U)\n 6976: #define GPIO_AFRH_AFSEL9_Msk           (0xFUL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x000000F0 */\n 6977: #define GPIO_AFRH_AFSEL9               GPIO_AFRH_AFSEL9_Msk\n 6978: #define GPIO_AFRH_AFSEL9_0             (0x1UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000010 */\n 6979: #define GPIO_AFRH_AFSEL9_1             (0x2UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000020 */\n 6980: #define GPIO_AFRH_AFSEL9_2             (0x4UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000040 */\n 6981: #define GPIO_AFRH_AFSEL9_3             (0x8UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000080 */\n 6982: #define GPIO_AFRH_AFSEL10_Pos          (8U)\n 6983: #define GPIO_AFRH_AFSEL10_Msk          (0xFUL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000F00 */\n 6984: #define GPIO_AFRH_AFSEL10              GPIO_AFRH_AFSEL10_Msk\n 6985: #define GPIO_AFRH_AFSEL10_0            (0x1UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000100 */\n 6986: #define GPIO_AFRH_AFSEL10_1            (0x2UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000200 */\n 6987: #define GPIO_AFRH_AFSEL10_2            (0x4UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000400 */\n 6988: #define GPIO_AFRH_AFSEL10_3            (0x8UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000800 */\n 6989: #define GPIO_AFRH_AFSEL11_Pos          (12U)\n 6990: #define GPIO_AFRH_AFSEL11_Msk          (0xFUL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x0000F000 */\n 6991: #define GPIO_AFRH_AFSEL11              GPIO_AFRH_AFSEL11_Msk\n 6992: #define GPIO_AFRH_AFSEL11_0            (0x1UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00001000 */\n 6993: #define GPIO_AFRH_AFSEL11_1            (0x2UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00002000 */\n 6994: #define GPIO_AFRH_AFSEL11_2            (0x4UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00004000 */\n 6995: #define GPIO_AFRH_AFSEL11_3            (0x8UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00008000 */\n 6996: #define GPIO_AFRH_AFSEL12_Pos          (16U)\n 6997: #define GPIO_AFRH_AFSEL12_Msk          (0xFUL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x000F0000 */\n 6998: #define GPIO_AFRH_AFSEL12              GPIO_AFRH_AFSEL12_Msk\n 6999: #define GPIO_AFRH_AFSEL12_0            (0x1UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00010000 */\n 7000: #define GPIO_AFRH_AFSEL12_1            (0x2UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00020000 */\n 7001: #define GPIO_AFRH_AFSEL12_2            (0x4UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00040000 */\n 7002: #define GPIO_AFRH_AFSEL12_3            (0x8UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00080000 */\n 7003: #define GPIO_AFRH_AFSEL13_Pos          (20U)\n 7004: #define GPIO_AFRH_AFSEL13_Msk          (0xFUL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00F00000 */\n 7005: #define GPIO_AFRH_AFSEL13              GPIO_AFRH_AFSEL13_Msk\n 7006: #define GPIO_AFRH_AFSEL13_0            (0x1UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00100000 */\n 7007: #define GPIO_AFRH_AFSEL13_1            (0x2UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00200000 */\n 7008: #define GPIO_AFRH_AFSEL13_2            (0x4UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00400000 */\n 7009: #define GPIO_AFRH_AFSEL13_3            (0x8UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00800000 */\n 7010: #define GPIO_AFRH_AFSEL14_Pos          (24U)\n 7011: #define GPIO_AFRH_AFSEL14_Msk          (0xFUL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x0F000000 */\n 7012: #define GPIO_AFRH_AFSEL14              GPIO_AFRH_AFSEL14_Msk\n 7013: #define GPIO_AFRH_AFSEL14_0            (0x1UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x01000000 */\n 7014: #define GPIO_AFRH_AFSEL14_1            (0x2UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x02000000 */\n 7015: #define GPIO_AFRH_AFSEL14_2            (0x4UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x04000000 */\n 7016: #define GPIO_AFRH_AFSEL14_3            (0x8UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x08000000 */\n 7017: #define GPIO_AFRH_AFSEL15_Pos          (28U)\n 7018: #define GPIO_AFRH_AFSEL15_Msk          (0xFUL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0xF0000000 */\n 7019: #define GPIO_AFRH_AFSEL15              GPIO_AFRH_AFSEL15_Msk\n 7020: #define GPIO_AFRH_AFSEL15_0            (0x1UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x10000000 */\n 7021: #define GPIO_AFRH_AFSEL15_1            (0x2UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x20000000 */\n 7022: #define GPIO_AFRH_AFSEL15_2            (0x4UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x40000000 */\n 7023: #define GPIO_AFRH_AFSEL15_3            (0x8UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x80000000 */\n 7024  \n 7025  /* Legacy defines */\n 7026: #define GPIO_AFRH_AFRH0                      GPIO_AFRH_AFSEL8\n 7027: #define GPIO_AFRH_AFRH1                      GPIO_AFRH_AFSEL9\n 7028: #define GPIO_AFRH_AFRH2                      GPIO_AFRH_AFSEL10\n 7029: #define GPIO_AFRH_AFRH3                      GPIO_AFRH_AFSEL11\n 7030: #define GPIO_AFRH_AFRH4                      GPIO_AFRH_AFSEL12\n 7031: #define GPIO_AFRH_AFRH5                      GPIO_AFRH_AFSEL13\n 7032: #define GPIO_AFRH_AFRH6                      GPIO_AFRH_AFSEL14\n 7033: #define GPIO_AFRH_AFRH7                      GPIO_AFRH_AFSEL15\n 7034  \n 7035  /******************  Bits definition for GPIO_BRR register  ******************/\n ....\n 17511                                          ((INSTANCE) == GPIOG))\n 17512  \n 17513: /******************************* GPIO AF Instances ****************************/\n 17514: #define IS_GPIO_AF_INSTANCE(INSTANCE)   IS_GPIO_ALL_INSTANCE(INSTANCE)\n 17515  \n 17516  /**************************** GPIO Lock Instances *****************************/\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32gbk1cb.h:\n 5775  #define GPIO_LCKR_LCKK                 GPIO_LCKR_LCKK_Msk\n 5776  \n 5777: /****************** Bit definition for GPIO_AFRL register *********************/\n 5778: #define GPIO_AFRL_AFSEL0_Pos           (0U)\n 5779: #define GPIO_AFRL_AFSEL0_Msk           (0xFUL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x0000000F */\n 5780: #define GPIO_AFRL_AFSEL0               GPIO_AFRL_AFSEL0_Msk\n 5781: #define GPIO_AFRL_AFSEL0_0             (0x1UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000001 */\n 5782: #define GPIO_AFRL_AFSEL0_1             (0x2UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000002 */\n 5783: #define GPIO_AFRL_AFSEL0_2             (0x4UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000004 */\n 5784: #define GPIO_AFRL_AFSEL0_3             (0x8UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000008 */\n 5785: #define GPIO_AFRL_AFSEL1_Pos           (4U)\n 5786: #define GPIO_AFRL_AFSEL1_Msk           (0xFUL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x000000F0 */\n 5787: #define GPIO_AFRL_AFSEL1               GPIO_AFRL_AFSEL1_Msk\n 5788: #define GPIO_AFRL_AFSEL1_0             (0x1UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000010 */\n 5789: #define GPIO_AFRL_AFSEL1_1             (0x2UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000020 */\n 5790: #define GPIO_AFRL_AFSEL1_2             (0x4UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000040 */\n 5791: #define GPIO_AFRL_AFSEL1_3             (0x8UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000080 */\n 5792: #define GPIO_AFRL_AFSEL2_Pos           (8U)\n 5793: #define GPIO_AFRL_AFSEL2_Msk           (0xFUL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000F00 */\n 5794: #define GPIO_AFRL_AFSEL2               GPIO_AFRL_AFSEL2_Msk\n 5795: #define GPIO_AFRL_AFSEL2_0             (0x1UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000100 */\n 5796: #define GPIO_AFRL_AFSEL2_1             (0x2UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000200 */\n 5797: #define GPIO_AFRL_AFSEL2_2             (0x4UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000400 */\n 5798: #define GPIO_AFRL_AFSEL2_3             (0x8UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000800 */\n 5799: #define GPIO_AFRL_AFSEL3_Pos           (12U)\n 5800: #define GPIO_AFRL_AFSEL3_Msk           (0xFUL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x0000F000 */\n 5801: #define GPIO_AFRL_AFSEL3               GPIO_AFRL_AFSEL3_Msk\n 5802: #define GPIO_AFRL_AFSEL3_0             (0x1UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00001000 */\n 5803: #define GPIO_AFRL_AFSEL3_1             (0x2UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00002000 */\n 5804: #define GPIO_AFRL_AFSEL3_2             (0x4UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00004000 */\n 5805: #define GPIO_AFRL_AFSEL3_3             (0x8UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00008000 */\n 5806: #define GPIO_AFRL_AFSEL4_Pos           (16U)\n 5807: #define GPIO_AFRL_AFSEL4_Msk           (0xFUL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x000F0000 */\n 5808: #define GPIO_AFRL_AFSEL4               GPIO_AFRL_AFSEL4_Msk\n 5809: #define GPIO_AFRL_AFSEL4_0             (0x1UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00010000 */\n 5810: #define GPIO_AFRL_AFSEL4_1             (0x2UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00020000 */\n 5811: #define GPIO_AFRL_AFSEL4_2             (0x4UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00040000 */\n 5812: #define GPIO_AFRL_AFSEL4_3             (0x8UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00080000 */\n 5813: #define GPIO_AFRL_AFSEL5_Pos           (20U)\n 5814: #define GPIO_AFRL_AFSEL5_Msk           (0xFUL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00F00000 */\n 5815: #define GPIO_AFRL_AFSEL5               GPIO_AFRL_AFSEL5_Msk\n 5816: #define GPIO_AFRL_AFSEL5_0             (0x1UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00100000 */\n 5817: #define GPIO_AFRL_AFSEL5_1             (0x2UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00200000 */\n 5818: #define GPIO_AFRL_AFSEL5_2             (0x4UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00400000 */\n 5819: #define GPIO_AFRL_AFSEL5_3             (0x8UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00800000 */\n 5820: #define GPIO_AFRL_AFSEL6_Pos           (24U)\n 5821: #define GPIO_AFRL_AFSEL6_Msk           (0xFUL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x0F000000 */\n 5822: #define GPIO_AFRL_AFSEL6               GPIO_AFRL_AFSEL6_Msk\n 5823: #define GPIO_AFRL_AFSEL6_0             (0x1UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x01000000 */\n 5824: #define GPIO_AFRL_AFSEL6_1             (0x2UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x02000000 */\n 5825: #define GPIO_AFRL_AFSEL6_2             (0x4UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x04000000 */\n 5826: #define GPIO_AFRL_AFSEL6_3             (0x8UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x08000000 */\n 5827: #define GPIO_AFRL_AFSEL7_Pos           (28U)\n 5828: #define GPIO_AFRL_AFSEL7_Msk           (0xFUL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0xF0000000 */\n 5829: #define GPIO_AFRL_AFSEL7               GPIO_AFRL_AFSEL7_Msk\n 5830: #define GPIO_AFRL_AFSEL7_0             (0x1UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x10000000 */\n 5831: #define GPIO_AFRL_AFSEL7_1             (0x2UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x20000000 */\n 5832: #define GPIO_AFRL_AFSEL7_2             (0x4UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x40000000 */\n 5833: #define GPIO_AFRL_AFSEL7_3             (0x8UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x80000000 */\n 5834  \n 5835  /* Legacy defines */\n 5836: #define GPIO_AFRL_AFRL0                      GPIO_AFRL_AFSEL0\n 5837: #define GPIO_AFRL_AFRL1                      GPIO_AFRL_AFSEL1\n 5838: #define GPIO_AFRL_AFRL2                      GPIO_AFRL_AFSEL2\n 5839: #define GPIO_AFRL_AFRL3                      GPIO_AFRL_AFSEL3\n 5840: #define GPIO_AFRL_AFRL4                      GPIO_AFRL_AFSEL4\n 5841: #define GPIO_AFRL_AFRL5                      GPIO_AFRL_AFSEL5\n 5842: #define GPIO_AFRL_AFRL6                      GPIO_AFRL_AFSEL6\n 5843: #define GPIO_AFRL_AFRL7                      GPIO_AFRL_AFSEL7\n 5844  \n 5845: /****************** Bit definition for GPIO_AFRH register *********************/\n 5846: #define GPIO_AFRH_AFSEL8_Pos           (0U)\n 5847: #define GPIO_AFRH_AFSEL8_Msk           (0xFUL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x0000000F */\n 5848: #define GPIO_AFRH_AFSEL8               GPIO_AFRH_AFSEL8_Msk\n 5849: #define GPIO_AFRH_AFSEL8_0             (0x1UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000001 */\n 5850: #define GPIO_AFRH_AFSEL8_1             (0x2UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000002 */\n 5851: #define GPIO_AFRH_AFSEL8_2             (0x4UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000004 */\n 5852: #define GPIO_AFRH_AFSEL8_3             (0x8UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000008 */\n 5853: #define GPIO_AFRH_AFSEL9_Pos           (4U)\n 5854: #define GPIO_AFRH_AFSEL9_Msk           (0xFUL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x000000F0 */\n 5855: #define GPIO_AFRH_AFSEL9               GPIO_AFRH_AFSEL9_Msk\n 5856: #define GPIO_AFRH_AFSEL9_0             (0x1UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000010 */\n 5857: #define GPIO_AFRH_AFSEL9_1             (0x2UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000020 */\n 5858: #define GPIO_AFRH_AFSEL9_2             (0x4UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000040 */\n 5859: #define GPIO_AFRH_AFSEL9_3             (0x8UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000080 */\n 5860: #define GPIO_AFRH_AFSEL10_Pos          (8U)\n 5861: #define GPIO_AFRH_AFSEL10_Msk          (0xFUL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000F00 */\n 5862: #define GPIO_AFRH_AFSEL10              GPIO_AFRH_AFSEL10_Msk\n 5863: #define GPIO_AFRH_AFSEL10_0            (0x1UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000100 */\n 5864: #define GPIO_AFRH_AFSEL10_1            (0x2UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000200 */\n 5865: #define GPIO_AFRH_AFSEL10_2            (0x4UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000400 */\n 5866: #define GPIO_AFRH_AFSEL10_3            (0x8UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000800 */\n 5867: #define GPIO_AFRH_AFSEL11_Pos          (12U)\n 5868: #define GPIO_AFRH_AFSEL11_Msk          (0xFUL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x0000F000 */\n 5869: #define GPIO_AFRH_AFSEL11              GPIO_AFRH_AFSEL11_Msk\n 5870: #define GPIO_AFRH_AFSEL11_0            (0x1UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00001000 */\n 5871: #define GPIO_AFRH_AFSEL11_1            (0x2UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00002000 */\n 5872: #define GPIO_AFRH_AFSEL11_2            (0x4UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00004000 */\n 5873: #define GPIO_AFRH_AFSEL11_3            (0x8UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00008000 */\n 5874: #define GPIO_AFRH_AFSEL12_Pos          (16U)\n 5875: #define GPIO_AFRH_AFSEL12_Msk          (0xFUL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x000F0000 */\n 5876: #define GPIO_AFRH_AFSEL12              GPIO_AFRH_AFSEL12_Msk\n 5877: #define GPIO_AFRH_AFSEL12_0            (0x1UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00010000 */\n 5878: #define GPIO_AFRH_AFSEL12_1            (0x2UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00020000 */\n 5879: #define GPIO_AFRH_AFSEL12_2            (0x4UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00040000 */\n 5880: #define GPIO_AFRH_AFSEL12_3            (0x8UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00080000 */\n 5881: #define GPIO_AFRH_AFSEL13_Pos          (20U)\n 5882: #define GPIO_AFRH_AFSEL13_Msk          (0xFUL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00F00000 */\n 5883: #define GPIO_AFRH_AFSEL13              GPIO_AFRH_AFSEL13_Msk\n 5884: #define GPIO_AFRH_AFSEL13_0            (0x1UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00100000 */\n 5885: #define GPIO_AFRH_AFSEL13_1            (0x2UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00200000 */\n 5886: #define GPIO_AFRH_AFSEL13_2            (0x4UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00400000 */\n 5887: #define GPIO_AFRH_AFSEL13_3            (0x8UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00800000 */\n 5888: #define GPIO_AFRH_AFSEL14_Pos          (24U)\n 5889: #define GPIO_AFRH_AFSEL14_Msk          (0xFUL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x0F000000 */\n 5890: #define GPIO_AFRH_AFSEL14              GPIO_AFRH_AFSEL14_Msk\n 5891: #define GPIO_AFRH_AFSEL14_0            (0x1UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x01000000 */\n 5892: #define GPIO_AFRH_AFSEL14_1            (0x2UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x02000000 */\n 5893: #define GPIO_AFRH_AFSEL14_2            (0x4UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x04000000 */\n 5894: #define GPIO_AFRH_AFSEL14_3            (0x8UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x08000000 */\n 5895: #define GPIO_AFRH_AFSEL15_Pos          (28U)\n 5896: #define GPIO_AFRH_AFSEL15_Msk          (0xFUL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0xF0000000 */\n 5897: #define GPIO_AFRH_AFSEL15              GPIO_AFRH_AFSEL15_Msk\n 5898: #define GPIO_AFRH_AFSEL15_0            (0x1UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x10000000 */\n 5899: #define GPIO_AFRH_AFSEL15_1            (0x2UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x20000000 */\n 5900: #define GPIO_AFRH_AFSEL15_2            (0x4UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x40000000 */\n 5901: #define GPIO_AFRH_AFSEL15_3            (0x8UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x80000000 */\n 5902  \n 5903  /* Legacy defines */\n 5904: #define GPIO_AFRH_AFRH0                      GPIO_AFRH_AFSEL8\n 5905: #define GPIO_AFRH_AFRH1                      GPIO_AFRH_AFSEL9\n 5906: #define GPIO_AFRH_AFRH2                      GPIO_AFRH_AFSEL10\n 5907: #define GPIO_AFRH_AFRH3                      GPIO_AFRH_AFSEL11\n 5908: #define GPIO_AFRH_AFRH4                      GPIO_AFRH_AFSEL12\n 5909: #define GPIO_AFRH_AFRH5                      GPIO_AFRH_AFSEL13\n 5910: #define GPIO_AFRH_AFRH6                      GPIO_AFRH_AFSEL14\n 5911: #define GPIO_AFRH_AFRH7                      GPIO_AFRH_AFSEL15\n 5912  \n 5913  /******************  Bits definition for GPIO_BRR register  ******************/\n ....\n 12547                                          ((INSTANCE) == GPIOG))\n 12548  \n 12549: /******************************* GPIO AF Instances ****************************/\n 12550: #define IS_GPIO_AF_INSTANCE(INSTANCE)   IS_GPIO_ALL_INSTANCE(INSTANCE)\n 12551  \n 12552  /**************************** GPIO Lock Instances *****************************/\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_gpio.h:\n  119  #define  GPIO_MODE_OUTPUT_PP                    (0x00000001U)   /*!< Output Push Pull Mode                 */\n  120  #define  GPIO_MODE_OUTPUT_OD                    (0x00000011U)   /*!< Output Open Drain Mode                */\n  121: #define  GPIO_MODE_AF_PP                        (0x00000002U)   /*!< Alternate Function Push Pull Mode     */\n  122: #define  GPIO_MODE_AF_OD                        (0x00000012U)   /*!< Alternate Function Open Drain Mode    */\n  123  #define  GPIO_MODE_ANALOG                       (0x00000003U)   /*!< Analog Mode  */\n  124  #define  GPIO_MODE_IT_RISING                    (0x10110000U)   /*!< External Interrupt Mode with Rising edge trigger detection          */\n  ...\n  220                                       ((__MODE__) == GPIO_MODE_OUTPUT_PP)          ||\\\n  221                                       ((__MODE__) == GPIO_MODE_OUTPUT_OD)          ||\\\n  222:                                      ((__MODE__) == GPIO_MODE_AF_PP)              ||\\\n  223:                                      ((__MODE__) == GPIO_MODE_AF_OD)              ||\\\n  224                                       ((__MODE__) == GPIO_MODE_IT_RISING)          ||\\\n  225                                       ((__MODE__) == GPIO_MODE_IT_FALLING)         ||\\\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_gpio_ex.h:\n   52    * @brief   AF 0 selection\n   53    */\n   54: #define GPIO_AF0_RTC_50Hz      ((uint8_t)0x00)  /* RTC_50Hz Alternate Function mapping                       */\n   55: #define GPIO_AF0_MCO           ((uint8_t)0x00)  /* MCO (MCO1 and MCO2) Alternate Function mapping            */\n   56: #define GPIO_AF0_SWJ           ((uint8_t)0x00)  /* SWJ (SWD and JTAG) Alternate Function mapping             */\n   57: #define GPIO_AF0_TRACE         ((uint8_t)0x00)  /* TRACE Alternate Function mapping                          */\n   58  \n   59  /**\n   60    * @brief   AF 1 selection\n   61    */\n   62: #define GPIO_AF1_TIM2          ((uint8_t)0x01)  /* TIM2 Alternate Function mapping   */\n   63  #if defined(TIM5)\n   64: #define GPIO_AF1_TIM5          ((uint8_t)0x01)  /* TIM5 Alternate Function mapping   */\n   65  #endif /* TIM5 */\n   66: #define GPIO_AF1_TIM16         ((uint8_t)0x01)  /* TIM16 Alternate Function mapping  */\n   67: #define GPIO_AF1_TIM17         ((uint8_t)0x01)  /* TIM17 Alternate Function mapping  */\n   68: #define GPIO_AF1_TIM17_COMP1   ((uint8_t)0x01)  /* TIM17/COMP1 Break in Alternate Function mapping  */\n   69: #define GPIO_AF1_TIM15         ((uint8_t)0x01)  /* TIM15 Alternate Function mapping  */\n   70: #define GPIO_AF1_LPTIM1        ((uint8_t)0x01)  /* LPTIM1 Alternate Function mapping */\n   71: #define GPIO_AF1_IR            ((uint8_t)0x01)  /* IR Alternate Function mapping     */\n   72  \n   73  /**\n   74    * @brief   AF 2 selection\n   75    */\n   76: #define GPIO_AF2_TIM1          ((uint8_t)0x02)  /* TIM1 Alternate Function mapping  */\n   77: #define GPIO_AF2_TIM2          ((uint8_t)0x02)  /* TIM2 Alternate Function mapping  */\n   78: #define GPIO_AF2_TIM3          ((uint8_t)0x02)  /* TIM3 Alternate Function mapping  */\n   79: #define GPIO_AF2_TIM4          ((uint8_t)0x02)  /* TIM4 Alternate Function mapping  */\n   80  #if defined(TIM5)\n   81: #define GPIO_AF2_TIM5          ((uint8_t)0x02)  /* TIM5 Alternate Function mapping  */\n   82  #endif /* TIM5 */\n   83: #define GPIO_AF2_TIM8          ((uint8_t)0x02)  /* TIM8 Alternate Function mapping  */\n   84: #define GPIO_AF2_TIM15         ((uint8_t)0x02)  /* TIM15 Alternate Function mapping */\n   85: #define GPIO_AF2_TIM16         ((uint8_t)0x02)  /* TIM16 Alternate Function mapping */\n   86  #if defined(TIM20)\n   87: #define GPIO_AF2_TIM20         ((uint8_t)0x02)  /* TIM20 Alternate Function mapping */\n   88  #endif /* TIM20 */\n   89: #define GPIO_AF2_TIM1_COMP1    ((uint8_t)0x02)  /* TIM1/COMP1 Break in Alternate Function mapping   */\n   90: #define GPIO_AF2_TIM15_COMP1   ((uint8_t)0x02)  /* TIM15/COMP1 Break in Alternate Function mapping  */\n   91: #define GPIO_AF2_TIM16_COMP1   ((uint8_t)0x02)  /* TIM16/COMP1 Break in Alternate Function mapping  */\n   92  #if defined(TIM20)\n   93: #define GPIO_AF2_TIM20_COMP1   ((uint8_t)0x02)  /* TIM20/COMP1 Break in Alternate Function mapping  */\n   94: #define GPIO_AF2_TIM20_COMP2   ((uint8_t)0x02)  /* TIM20/COMP2 Break in Alternate Function mapping  */\n   95  #endif /* TIM20 */\n   96: #define GPIO_AF2_I2C3          ((uint8_t)0x02)  /* I2C3 Alternate Function mapping  */\n   97: #define GPIO_AF2_COMP1         ((uint8_t)0x02)  /* COMP1 Alternate Function mapping */\n   98  \n   99  /**\n  100    * @brief   AF 3 selection\n  101    */\n  102: #define GPIO_AF3_TIM15         ((uint8_t)0x03)  /* TIM15 Alternate Function mapping   */\n  103  #if defined(TIM20)\n  104: #define GPIO_AF3_TIM20         ((uint8_t)0x03)  /* TIM20 Alternate Function mapping   */\n  105  #endif /* TIM20 */\n  106: #define GPIO_AF3_UCPD1         ((uint8_t)0x03)  /* UCPD1 Alternate Function mapping   */\n  107: #define GPIO_AF3_I2C3          ((uint8_t)0x03)  /* I2C3 Alternate Function mapping    */\n  108  #if defined(I2C4)\n  109: #define GPIO_AF3_I2C4          ((uint8_t)0x03)  /* I2C4 Alternate Function mapping    */\n  110  #endif /* I2C4 */\n  111  #if defined(HRTIM1)\n  112: #define GPIO_AF3_HRTIM1        ((uint8_t)0x03)  /* HRTIM1 Alternate Function mapping  */\n  113  #endif /* HRTIM1 */\n  114  #if defined(QUADSPI)\n  115: #define GPIO_AF3_QUADSPI       ((uint8_t)0x03)  /* QUADSPI Alternate Function mapping */\n  116  #endif /* QUADSPI */\n  117: #define GPIO_AF3_TIM8          ((uint8_t)0x03)  /* TIM8 Alternate Function mapping    */\n  118: #define GPIO_AF3_SAI1          ((uint8_t)0x03)  /* SAI1 Alternate Function mapping  */\n  119: #define GPIO_AF3_COMP3         ((uint8_t)0x03)  /* COMP3 Alternate Function mapping */\n  120  \n  121  /**\n  122    * @brief   AF 4 selection\n  123    */\n  124: #define GPIO_AF4_TIM1          ((uint8_t)0x04)  /* TIM1 Alternate Function mapping    */\n  125: #define GPIO_AF4_TIM8          ((uint8_t)0x04)  /* TIM8 Alternate Function mapping    */\n  126: #define GPIO_AF4_TIM16         ((uint8_t)0x04)  /* TIM16 Alternate Function mapping   */\n  127: #define GPIO_AF4_TIM17         ((uint8_t)0x04)  /* TIM17 Alternate Function mapping   */\n  128: #define GPIO_AF4_TIM8_COMP1    ((uint8_t)0x04)  /* TIM8/COMP1 Break in Alternate Function mapping  */\n  129: #define GPIO_AF4_I2C1          ((uint8_t)0x04)  /* I2C1 Alternate Function mapping    */\n  130: #define GPIO_AF4_I2C2          ((uint8_t)0x04)  /* I2C2 Alternate Function mapping    */\n  131: #define GPIO_AF4_I2C3          ((uint8_t)0x04)  /* I2C3 Alternate Function mapping    */\n  132  #if defined(I2C4)\n  133: #define GPIO_AF4_I2C4          ((uint8_t)0x04)  /* I2C4 Alternate Function mapping    */\n  134  #endif /* I2C4 */\n  135  \n  ...\n  137    * @brief   AF 5 selection\n  138    */\n  139: #define GPIO_AF5_SPI1          ((uint8_t)0x05)  /* SPI1 Alternate Function mapping       */\n  140: #define GPIO_AF5_SPI2          ((uint8_t)0x05)  /* SPI2 Alternate Function mapping       */\n  141  #if defined(SPI4)\n  142: #define GPIO_AF5_SPI4          ((uint8_t)0x05)  /* SPI4 Alternate Function mapping       */\n  143  #endif /* SPI4 */\n  144: #define GPIO_AF5_IR            ((uint8_t)0x05)  /* IR Alternate Function mapping         */\n  145: #define GPIO_AF5_TIM8          ((uint8_t)0x05)  /* TIM8 Alternate Function mapping       */\n  146: #define GPIO_AF5_TIM8_COMP1    ((uint8_t)0x05)  /* TIM8/COMP1 Break in Alternate Function mapping  */\n  147: #define GPIO_AF5_UART4         ((uint8_t)0x05)  /* UART4 Alternate Function mapping      */\n  148  #if defined(UART5)\n  149: #define GPIO_AF5_UART5         ((uint8_t)0x05)  /* UART5 Alternate Function mapping      */\n  150  #endif /* UART5 */\n  151: #define GPIO_AF5_I2S2ext       ((uint8_t)0x05)  /* I2S2ext_SD Alternate Function mapping */\n  152  \n  153  /**\n  154    * @brief   AF 6 selection\n  155    */\n  156: #define GPIO_AF6_SPI2          ((uint8_t)0x06)  /* SPI2 Alternate Function mapping       */\n  157: #define GPIO_AF6_SPI3          ((uint8_t)0x06)  /* SPI3 Alternate Function mapping       */\n  158: #define GPIO_AF6_TIM1          ((uint8_t)0x06)  /* TIM1 Alternate Function mapping       */\n  159  #if defined(TIM5)\n  160: #define GPIO_AF6_TIM5          ((uint8_t)0x06)  /* TIM5 Alternate Function mapping       */\n  161  #endif /* TIM5 */\n  162: #define GPIO_AF6_TIM8          ((uint8_t)0x06)  /* TIM8 Alternate Function mapping       */\n  163  #if defined(TIM20)\n  164: #define GPIO_AF6_TIM20         ((uint8_t)0x06)  /* TIM20 Alternate Function mapping      */\n  165  #endif /* TIM20 */\n  166: #define GPIO_AF6_TIM1_COMP1    ((uint8_t)0x06)  /* TIM1/COMP1 Break in Alternate Function mapping  */\n  167: #define GPIO_AF6_TIM1_COMP2    ((uint8_t)0x06)  /* TIM1/COMP2 Break in Alternate Function mapping  */\n  168: #define GPIO_AF6_TIM8_COMP2    ((uint8_t)0x06)  /* TIM8/COMP2 Break in Alternate Function mapping  */\n  169: #define GPIO_AF6_IR            ((uint8_t)0x06)  /* IR Alternate Function mapping         */\n  170: #define GPIO_AF6_I2S3ext       ((uint8_t)0x06)  /* I2S3ext_SD Alternate Function mapping */\n  171  \n  172  /**\n  173    * @brief   AF 7 selection\n  174    */\n  175: #define GPIO_AF7_USART1        ((uint8_t)0x07)  /* USART1 Alternate Function mapping  */\n  176: #define GPIO_AF7_USART2        ((uint8_t)0x07)  /* USART2 Alternate Function mapping  */\n  177: #define GPIO_AF7_USART3        ((uint8_t)0x07)  /* USART3 Alternate Function mapping  */\n  178  #if defined(COMP5)\n  179: #define GPIO_AF7_COMP5         ((uint8_t)0x07)  /* COMP5 Alternate Function mapping   */\n  180  #endif /* COMP5 */\n  181  #if defined(COMP6)\n  182: #define GPIO_AF7_COMP6         ((uint8_t)0x07)  /* COMP6 Alternate Function mapping   */\n  183  #endif /* COMP6 */\n  184  #if defined(COMP7)\n  185: #define GPIO_AF7_COMP7         ((uint8_t)0x07)  /* COMP7 Alternate Function mapping   */\n  186  #endif /* COMP7 */\n  187  \n  ...\n  189    * @brief   AF 8 selection\n  190    */\n  191: #define GPIO_AF8_COMP1         ((uint8_t)0x08)  /* COMP1 Alternate Function mapping   */\n  192: #define GPIO_AF8_COMP2         ((uint8_t)0x08)  /* COMP2 Alternate Function mapping   */\n  193: #define GPIO_AF8_COMP3         ((uint8_t)0x08)  /* COMP3 Alternate Function mapping   */\n  194: #define GPIO_AF8_COMP4         ((uint8_t)0x08)  /* COMP4 Alternate Function mapping   */\n  195  #if defined(COMP5)\n  196: #define GPIO_AF8_COMP5         ((uint8_t)0x08)  /* COMP5 Alternate Function mapping   */\n  197  #endif /* COMP5 */\n  198  #if defined(COMP6)\n  199: #define GPIO_AF8_COMP6         ((uint8_t)0x08)  /* COMP6 Alternate Function mapping   */\n  200  #endif /* COMP6 */\n  201  #if defined(COMP7)\n  202: #define GPIO_AF8_COMP7         ((uint8_t)0x08)  /* COMP7 Alternate Function mapping   */\n  203  #endif /* COMP7 */\n  204: #define GPIO_AF8_I2C3          ((uint8_t)0x08)  /* I2C3 Alternate Function mapping    */\n  205  #if defined(I2C4)\n  206: #define GPIO_AF8_I2C4          ((uint8_t)0x08)  /* I2C4 Alternate Function mapping    */\n  207  #endif /* I2C4 */\n  208: #define GPIO_AF8_LPUART1       ((uint8_t)0x08)  /* LPUART1 Alternate Function mapping */\n  209: #define GPIO_AF8_UART4         ((uint8_t)0x08)  /* UART4 Alternate Function mapping   */\n  210  #if defined(UART5)\n  211: #define GPIO_AF8_UART5         ((uint8_t)0x08)  /* UART5 Alternate Function mapping   */\n  212  #endif /* UART5 */\n  213  \n  ...\n  215    * @brief   AF 9 selection\n  216    */\n  217: #define GPIO_AF9_TIM1          ((uint8_t)0x09)  /* TIM1 Alternate Function mapping    */\n  218: #define GPIO_AF9_TIM8          ((uint8_t)0x09)  /* TIM8 Alternate Function mapping    */\n  219: #define GPIO_AF9_TIM15         ((uint8_t)0x09)  /* TIM15 Alternate Function mapping   */\n  220: #define GPIO_AF9_TIM1_COMP1    ((uint8_t)0x09)  /* TIM1/COMP1 Break in Alternate Function mapping   */\n  221: #define GPIO_AF9_TIM8_COMP1    ((uint8_t)0x09)  /* TIM8/COMP1 Break in Alternate Function mapping   */\n  222: #define GPIO_AF9_TIM15_COMP1   ((uint8_t)0x09)  /* TIM15/COMP1 Break in Alternate Function mapping  */\n  223: #define GPIO_AF9_FDCAN1        ((uint8_t)0x09)  /* FDCAN1 Alternate Function mapping  */\n  224  #if defined(FDCAN2)\n  225: #define GPIO_AF9_FDCAN2        ((uint8_t)0x09)  /* FDCAN2 Alternate Function mapping  */\n  226  #endif /* FDCAN2 */\n  227  \n  ...\n  229    * @brief   AF 10 selection\n  230    */\n  231: #define GPIO_AF10_TIM2         ((uint8_t)0x0A)  /* TIM2 Alternate Function mapping    */\n  232: #define GPIO_AF10_TIM3         ((uint8_t)0x0A)  /* TIM3 Alternate Function mapping    */\n  233: #define GPIO_AF10_TIM4         ((uint8_t)0x0A)  /* TIM4 Alternate Function mapping    */\n  234: #define GPIO_AF10_TIM8         ((uint8_t)0x0A)  /* TIM8 Alternate Function mapping    */\n  235: #define GPIO_AF10_TIM17        ((uint8_t)0x0A)  /* TIM17 Alternate Function mapping   */\n  236: #define GPIO_AF10_TIM8_COMP2   ((uint8_t)0x0A)  /* TIM8/COMP2 Break in Alternate Function mapping    */\n  237: #define GPIO_AF10_TIM17_COMP1  ((uint8_t)0x0A)  /* TIM17/COMP1 Break in Alternate Function mapping   */\n  238  #if defined(QUADSPI)\n  239: #define GPIO_AF10_QUADSPI      ((uint8_t)0x0A)  /* OctoSPI Manager Port 1 Alternate Function mapping */\n  240  #endif /* QUADSPI */\n  241  \n  ...\n  243    * @brief   AF 11 selection\n  244    */\n  245: #define GPIO_AF11_FDCAN1       ((uint8_t)0x0B)  /* FDCAN1 Alternate Function mapping  */\n  246  #if defined(FDCAN3)\n  247: #define GPIO_AF11_FDCAN3       ((uint8_t)0x0B)  /* FDCAN3 Alternate Function mapping  */\n  248  #endif /* FDCAN3 */\n  249: #define GPIO_AF11_TIM1         ((uint8_t)0x0B)  /* TIM1 Alternate Function mapping    */\n  250: #define GPIO_AF11_TIM8         ((uint8_t)0x0B)  /* TIM8 Alternate Function mapping    */\n  251: #define GPIO_AF11_TIM8_COMP1   ((uint8_t)0x0B)  /* TIM8/COMP1 Break in Alternate Function mapping  */\n  252: #define GPIO_AF11_LPTIM1       ((uint8_t)0x0B)  /* LPTIM1 Alternate Function mapping  */\n  253  \n  254  /**\n  255    * @brief   AF 12 selection\n  256    */\n  257: #define GPIO_AF12_LPUART1      ((uint8_t)0x0C)  /* LPUART1 Alternate Function mapping */\n  258: #define GPIO_AF12_TIM1         ((uint8_t)0x0C)  /* TIM1 Alternate Function mapping    */\n  259: #define GPIO_AF12_TIM1_COMP1   ((uint8_t)0x0C)  /* TIM1/COMP1 Break in Alternate Function mapping  */\n  260: #define GPIO_AF12_TIM1_COMP2   ((uint8_t)0x0C)  /* TIM1/COMP2 Break in Alternate Function mapping  */\n  261  #if defined(HRTIM1)\n  262: #define GPIO_AF12_HRTIM1       ((uint8_t)0x0C)  /* HRTIM1 Alternate Function mapping  */\n  263  #endif /* HRTIM1 */\n  264  #if defined(FMC_BANK1)\n  265: #define GPIO_AF12_FMC          ((uint8_t)0x0C)  /* FMC Alternate Function mapping     */\n  266  #endif /* FMC_BANK1 */\n  267: #define GPIO_AF12_SAI1         ((uint8_t)0x0C)  /* SAI1 Alternate Function mapping  */\n  268  \n  269  /**\n  ...\n  271    */\n  272  #if defined(HRTIM1)\n  273: #define GPIO_AF13_HRTIM1       ((uint8_t)0x0D)  /* HRTIM1 Alternate Function mapping  */\n  274  #endif /* HRTIM1 */\n  275: #define GPIO_AF13_SAI1         ((uint8_t)0x0D)  /* SAI1 Alternate Function mapping  */\n  276  \n  277  /**\n  278    * @brief   AF 14 selection\n  279    */\n  280: #define GPIO_AF14_TIM2         ((uint8_t)0x0E)  /* TIM2 Alternate Function mapping   */\n  281: #define GPIO_AF14_TIM15        ((uint8_t)0x0E)  /* TIM15 Alternate Function mapping   */\n  282: #define GPIO_AF14_UCPD1        ((uint8_t)0x0E)  /* UCPD1 Alternate Function mapping  */\n  283: #define GPIO_AF14_SAI1         ((uint8_t)0x0E)  /* SAI1 Alternate Function mapping  */\n  284: #define GPIO_AF14_UART4        ((uint8_t)0x0E)  /* UART4 Alternate Function mapping      */\n  285  #if defined(UART5)\n  286: #define GPIO_AF14_UART5        ((uint8_t)0x0E)  /* UART5 Alternate Function mapping      */\n  287  #endif /* UART5 */\n  288  \n  ...\n  290    * @brief   AF 15 selection\n  291    */\n  292: #define GPIO_AF15_EVENTOUT     ((uint8_t)0x0F)  /* EVENTOUT Alternate Function mapping */\n  293  \n  294: #define IS_GPIO_AF(AF)   ((AF) <= (uint8_t)0x0F)\n  295  \n  296  /**\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h:\n   41    * Rule-18.1_d - Medium: Array pointer `GPIOx' is accessed with index [..,..]\n   42    * which may be out of array bounds [..,UNKNOWN] in following APIs:\n   43:   * LL_GPIO_GetAFPin_0_7\n   44:   * LL_GPIO_SetAFPin_0_7\n   45:   * LL_GPIO_SetAFPin_8_15\n   46:   * LL_GPIO_GetAFPin_8_15\n   47    */\n   48  \n   ..\n   96  \n   97    uint32_t Alternate;    /*!< Specifies the Peripheral to be connected to the selected pins.\n   98:                               This parameter can be a value of @ref GPIO_LL_EC_AF.\n   99  \n  100:                               GPIO HW configuration can be modified afterwards using unitary function @ref LL_GPIO_SetAFPin_0_7() and LL_GPIO_SetAFPin_8_15().*/\n  101  } LL_GPIO_InitTypeDef;\n  102  \n  ...\n  185    */\n  186  \n  187: /** @defgroup GPIO_LL_EC_AF Alternate Function\n  188    * @{\n  189    */\n  190: #define LL_GPIO_AF_0                       (0x0000000U) /*!< Select alternate function 0 */\n  191: #define LL_GPIO_AF_1                       (0x0000001U) /*!< Select alternate function 1 */\n  192: #define LL_GPIO_AF_2                       (0x0000002U) /*!< Select alternate function 2 */\n  193: #define LL_GPIO_AF_3                       (0x0000003U) /*!< Select alternate function 3 */\n  194: #define LL_GPIO_AF_4                       (0x0000004U) /*!< Select alternate function 4 */\n  195: #define LL_GPIO_AF_5                       (0x0000005U) /*!< Select alternate function 5 */\n  196: #define LL_GPIO_AF_6                       (0x0000006U) /*!< Select alternate function 6 */\n  197: #define LL_GPIO_AF_7                       (0x0000007U) /*!< Select alternate function 7 */\n  198: #define LL_GPIO_AF_8                       (0x0000008U) /*!< Select alternate function 8 */\n  199: #define LL_GPIO_AF_9                       (0x0000009U) /*!< Select alternate function 9 */\n  200: #define LL_GPIO_AF_10                      (0x000000AU) /*!< Select alternate function 10 */\n  201: #define LL_GPIO_AF_11                      (0x000000BU) /*!< Select alternate function 11 */\n  202: #define LL_GPIO_AF_12                      (0x000000CU) /*!< Select alternate function 12 */\n  203: #define LL_GPIO_AF_13                      (0x000000DU) /*!< Select alternate function 13 */\n  204: #define LL_GPIO_AF_14                      (0x000000EU) /*!< Select alternate function 14 */\n  205: #define LL_GPIO_AF_15                      (0x000000FU) /*!< Select alternate function 15 */\n  206  /**\n  207    * @}\n  ...\n  537    * @note   Possible values are from AF0 to AF15 depending on target.\n  538    * @note   Warning: only one pin can be passed as parameter.\n  539:   * @rmtoll AFRL         AFSELy        LL_GPIO_SetAFPin_0_7\n  540    * @param  GPIOx GPIO Port\n  541    * @param  Pin This parameter can be one of the following values:\n  ...\n  549    *         @arg @ref LL_GPIO_PIN_7\n  550    * @param  Alternate This parameter can be one of the following values:\n  551:   *         @arg @ref LL_GPIO_AF_0\n  552:   *         @arg @ref LL_GPIO_AF_1\n  553:   *         @arg @ref LL_GPIO_AF_2\n  554:   *         @arg @ref LL_GPIO_AF_3\n  555:   *         @arg @ref LL_GPIO_AF_4\n  556:   *         @arg @ref LL_GPIO_AF_5\n  557:   *         @arg @ref LL_GPIO_AF_6\n  558:   *         @arg @ref LL_GPIO_AF_7\n  559:   *         @arg @ref LL_GPIO_AF_8\n  560:   *         @arg @ref LL_GPIO_AF_9\n  561:   *         @arg @ref LL_GPIO_AF_10\n  562:   *         @arg @ref LL_GPIO_AF_11\n  563:   *         @arg @ref LL_GPIO_AF_12\n  564:   *         @arg @ref LL_GPIO_AF_13\n  565:   *         @arg @ref LL_GPIO_AF_14\n  566:   *         @arg @ref LL_GPIO_AF_15\n  567    * @retval None\n  568    */\n  569: __STATIC_INLINE void LL_GPIO_SetAFPin_0_7(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Alternate)\n  570  {\n  571:   MODIFY_REG(GPIOx->AFR[0], (GPIO_AFRL_AFSEL0 << (POSITION_VAL(Pin) * 4U)),\n  572               (Alternate << (POSITION_VAL(Pin) * 4U)));\n  573  }\n  ...\n  575  /**\n  576    * @brief  Return gpio alternate function of a dedicated pin from 0 to 7 for a dedicated port.\n  577:   * @rmtoll AFRL         AFSELy        LL_GPIO_GetAFPin_0_7\n  578    * @param  GPIOx GPIO Port\n  579    * @param  Pin This parameter can be one of the following values:\n  ...\n  587    *         @arg @ref LL_GPIO_PIN_7\n  588    * @retval Returned value can be one of the following values:\n  589:   *         @arg @ref LL_GPIO_AF_0\n  590:   *         @arg @ref LL_GPIO_AF_1\n  591:   *         @arg @ref LL_GPIO_AF_2\n  592:   *         @arg @ref LL_GPIO_AF_3\n  593:   *         @arg @ref LL_GPIO_AF_4\n  594:   *         @arg @ref LL_GPIO_AF_5\n  595:   *         @arg @ref LL_GPIO_AF_6\n  596:   *         @arg @ref LL_GPIO_AF_7\n  597:   *         @arg @ref LL_GPIO_AF_8\n  598:   *         @arg @ref LL_GPIO_AF_9\n  599:   *         @arg @ref LL_GPIO_AF_10\n  600:   *         @arg @ref LL_GPIO_AF_11\n  601:   *         @arg @ref LL_GPIO_AF_12\n  602:   *         @arg @ref LL_GPIO_AF_13\n  603:   *         @arg @ref LL_GPIO_AF_14\n  604:   *         @arg @ref LL_GPIO_AF_15\n  605    */\n  606: __STATIC_INLINE uint32_t LL_GPIO_GetAFPin_0_7(GPIO_TypeDef *GPIOx, uint32_t Pin)\n  607  {\n  608:   return (uint32_t)(READ_BIT(GPIOx->AFR[0],\n  609:                              (GPIO_AFRL_AFSEL0 << (POSITION_VAL(Pin) * 4U))) >> (POSITION_VAL(Pin) * 4U));\n  610  }\n  611  \n  ...\n  614    * @note   Possible values are from AF0 to AF15 depending on target.\n  615    * @note   Warning: only one pin can be passed as parameter.\n  616:   * @rmtoll AFRH         AFSELy        LL_GPIO_SetAFPin_8_15\n  617    * @param  GPIOx GPIO Port\n  618    * @param  Pin This parameter can be one of the following values:\n  ...\n  626    *         @arg @ref LL_GPIO_PIN_15\n  627    * @param  Alternate This parameter can be one of the following values:\n  628:   *         @arg @ref LL_GPIO_AF_0\n  629:   *         @arg @ref LL_GPIO_AF_1\n  630:   *         @arg @ref LL_GPIO_AF_2\n  631:   *         @arg @ref LL_GPIO_AF_3\n  632:   *         @arg @ref LL_GPIO_AF_4\n  633:   *         @arg @ref LL_GPIO_AF_5\n  634:   *         @arg @ref LL_GPIO_AF_6\n  635:   *         @arg @ref LL_GPIO_AF_7\n  636:   *         @arg @ref LL_GPIO_AF_8\n  637:   *         @arg @ref LL_GPIO_AF_9\n  638:   *         @arg @ref LL_GPIO_AF_10\n  639:   *         @arg @ref LL_GPIO_AF_11\n  640:   *         @arg @ref LL_GPIO_AF_12\n  641:   *         @arg @ref LL_GPIO_AF_13\n  642:   *         @arg @ref LL_GPIO_AF_14\n  643:   *         @arg @ref LL_GPIO_AF_15\n  644    * @retval None\n  645    */\n  646: __STATIC_INLINE void LL_GPIO_SetAFPin_8_15(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Alternate)\n  647  {\n  648:   MODIFY_REG(GPIOx->AFR[1], (GPIO_AFRH_AFSEL8 << (POSITION_VAL(Pin >> 8U) * 4U)),\n  649               (Alternate << (POSITION_VAL(Pin >> 8U) * 4U)));\n  650  }\n  ...\n  653    * @brief  Return gpio alternate function of a dedicated pin from 8 to 15 for a dedicated port.\n  654    * @note   Possible values are from AF0 to AF15 depending on target.\n  655:   * @rmtoll AFRH         AFSELy        LL_GPIO_GetAFPin_8_15\n  656    * @param  GPIOx GPIO Port\n  657    * @param  Pin This parameter can be one of the following values:\n  ...\n  665    *         @arg @ref LL_GPIO_PIN_15\n  666    * @retval Returned value can be one of the following values:\n  667:   *         @arg @ref LL_GPIO_AF_0\n  668:   *         @arg @ref LL_GPIO_AF_1\n  669:   *         @arg @ref LL_GPIO_AF_2\n  670:   *         @arg @ref LL_GPIO_AF_3\n  671:   *         @arg @ref LL_GPIO_AF_4\n  672:   *         @arg @ref LL_GPIO_AF_5\n  673:   *         @arg @ref LL_GPIO_AF_6\n  674:   *         @arg @ref LL_GPIO_AF_7\n  675:   *         @arg @ref LL_GPIO_AF_8\n  676:   *         @arg @ref LL_GPIO_AF_9\n  677:   *         @arg @ref LL_GPIO_AF_10\n  678:   *         @arg @ref LL_GPIO_AF_11\n  679:   *         @arg @ref LL_GPIO_AF_12\n  680:   *         @arg @ref LL_GPIO_AF_13\n  681:   *         @arg @ref LL_GPIO_AF_14\n  682:   *         @arg @ref LL_GPIO_AF_15\n  683    */\n  684: __STATIC_INLINE uint32_t LL_GPIO_GetAFPin_8_15(GPIO_TypeDef *GPIOx, uint32_t Pin)\n  685  {\n  686:   return (uint32_t)(READ_BIT(GPIOx->AFR[1],\n  687:                              (GPIO_AFRH_AFSEL8 << (POSITION_VAL(Pin >> 8U) * 4U))) >> (POSITION_VAL(Pin >> 8U) * 4U));\n  688  }\n  689  \n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Inc/Legacy/stm32_hal_legacy.h:\n  558  \n  559  #if defined(STM32F4)\n  560: #define GPIO_AF12_SDMMC                           GPIO_AF12_SDIO\n  561: #define GPIO_AF12_SDMMC1                          GPIO_AF12_SDIO\n  562  #endif\n  563  \n  564  #if defined(STM32F7)\n  565: #define GPIO_AF12_SDIO                            GPIO_AF12_SDMMC1\n  566: #define GPIO_AF12_SDMMC                           GPIO_AF12_SDMMC1\n  567  #endif\n  568  \n  569  #if defined(STM32L4)\n  570: #define GPIO_AF12_SDIO                            GPIO_AF12_SDMMC1\n  571: #define GPIO_AF12_SDMMC                           GPIO_AF12_SDMMC1\n  572  #endif\n  573  \n  574  #if defined(STM32H7)\n  575: #define GPIO_AF7_SDIO1                            GPIO_AF7_SDMMC1\n  576: #define GPIO_AF8_SDIO1                            GPIO_AF8_SDMMC1\n  577: #define GPIO_AF12_SDIO1                           GPIO_AF12_SDMMC1\n  578: #define GPIO_AF9_SDIO2                            GPIO_AF9_SDMMC2\n  579: #define GPIO_AF10_SDIO2                           GPIO_AF10_SDMMC2\n  580: #define GPIO_AF11_SDIO2                           GPIO_AF11_SDMMC2\n  581  \n  582  #if defined (STM32H743xx) || defined (STM32H753xx)  || defined (STM32H750xx) || defined (STM32H742xx) || \\\n  583      defined (STM32H745xx) || defined (STM32H755xx)  || defined (STM32H747xx) || defined (STM32H757xx)\n  584: #define GPIO_AF10_OTG2_HS  GPIO_AF10_OTG2_FS\n  585: #define GPIO_AF10_OTG1_FS  GPIO_AF10_OTG1_HS\n  586: #define GPIO_AF12_OTG2_FS  GPIO_AF12_OTG1_FS\n  587  #endif /*STM32H743xx || STM32H753xx || STM32H750xx || STM32H742xx || STM32H745xx || STM32H755xx || STM32H747xx || STM32H757xx */\n  588  #endif /* STM32H7 */\n  589  \n  590: #define GPIO_AF0_LPTIM                            GPIO_AF0_LPTIM1\n  591: #define GPIO_AF1_LPTIM                            GPIO_AF1_LPTIM1\n  592: #define GPIO_AF2_LPTIM                            GPIO_AF2_LPTIM1\n  593  \n  594  #if defined(STM32L0) || defined(STM32L4) || defined(STM32F4) || defined(STM32F2) || defined(STM32F7) || defined(STM32G4) || defined(STM32H7)\n  ...\n  612  #endif /* STM32F0 || STM32F3 || STM32F1 */\n  613  \n  614: #define GPIO_AF6_DFSDM                            GPIO_AF6_DFSDM1\n  615  /**\n  616    * @}\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_gpio.c:\n  190        /*--------------------- GPIO Mode Configuration ------------------------*/\n  191        /* In case of Output or Alternate function mode selection */\n  192:       if ((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||\n  193:           (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))\n  194        {\n  195          /* Check the Speed parameter */\n  ...\n  215  \n  216        /* In case of Alternate function mode selection */\n  217:       if ((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))\n  218        {\n  219          /* Check the Alternate function parameters */\n  220:         assert_param(IS_GPIO_AF_INSTANCE(GPIOx));\n  221:         assert_param(IS_GPIO_AF(GPIO_Init->Alternate));\n  222  \n  223          /* Configure Alternate function mapped with the current IO */\n  224:         temp = GPIOx->AFR[position >> 3U];\n  225          temp &= ~(0xFU << ((position & 0x07U) * 4U));\n  226          temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));\n  227:         GPIOx->AFR[position >> 3U] = temp;\n  228        }\n  229  \n  ...\n  335  \n  336        /* Configure the default Alternate Function in current IO */\n  337:       GPIOx->AFR[position >> 3u] &= ~(0xFu << ((position & 0x07u) * 4u));\n  338  \n  339        /* Deactivate the Pull-up and Pull-down resistor for the current IO */\n  ...\n  449    * @brief  Lock GPIO Pins configuration registers.\n  450    * @note   The locked registers are GPIOx_MODER, GPIOx_OTYPER, GPIOx_OSPEEDR,\n  451:   *         GPIOx_PUPDR, GPIOx_AFRL and GPIOx_AFRH.\n  452    * @note   The configuration of the locked GPIO pins can no longer be modified\n  453    *         until the next reset.\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c:\n 1011    /* Configue the MCO1 pin in alternate function mode */\n 1012    GPIO_InitStruct.Pin = MCO1_PIN;\n 1013:   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;\n 1014    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;\n 1015    GPIO_InitStruct.Pull = GPIO_NOPULL;\n 1016:   GPIO_InitStruct.Alternate = GPIO_AF0_MCO;\n 1017    HAL_GPIO_Init(MCO1_GPIO_PORT, &GPIO_InitStruct);\n 1018  \n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_gpio.c:\n   69                                              ((__VALUE__) == LL_GPIO_PULL_DOWN))\n   70  \n   71: #define IS_LL_GPIO_ALTERNATE(__VALUE__)    (((__VALUE__) == LL_GPIO_AF_0  )   ||\\\n   72:                                             ((__VALUE__) == LL_GPIO_AF_1  )   ||\\\n   73:                                             ((__VALUE__) == LL_GPIO_AF_2  )   ||\\\n   74:                                             ((__VALUE__) == LL_GPIO_AF_3  )   ||\\\n   75:                                             ((__VALUE__) == LL_GPIO_AF_4  )   ||\\\n   76:                                             ((__VALUE__) == LL_GPIO_AF_5  )   ||\\\n   77:                                             ((__VALUE__) == LL_GPIO_AF_6  )   ||\\\n   78:                                             ((__VALUE__) == LL_GPIO_AF_7  )   ||\\\n   79:                                             ((__VALUE__) == LL_GPIO_AF_8  )   ||\\\n   80:                                             ((__VALUE__) == LL_GPIO_AF_9  )   ||\\\n   81:                                             ((__VALUE__) == LL_GPIO_AF_10 )   ||\\\n   82:                                             ((__VALUE__) == LL_GPIO_AF_11 )   ||\\\n   83:                                             ((__VALUE__) == LL_GPIO_AF_12 )   ||\\\n   84:                                             ((__VALUE__) == LL_GPIO_AF_13 )   ||\\\n   85:                                             ((__VALUE__) == LL_GPIO_AF_14 )   ||\\\n   86:                                             ((__VALUE__) == LL_GPIO_AF_15 ))\n   87  /**\n   88    * @}\n   ..\n  213          if (currentpin < LL_GPIO_PIN_8)\n  214          {\n  215:           LL_GPIO_SetAFPin_0_7(GPIOx, currentpin, GPIO_InitStruct->Alternate);\n  216          }\n  217          else\n  218          {\n  219:           LL_GPIO_SetAFPin_8_15(GPIOx, currentpin, GPIO_InitStruct->Alternate);\n  220          }\n  221        }\n  ...\n  251    GPIO_InitStruct->OutputType = LL_GPIO_OUTPUT_PUSHPULL;\n  252    GPIO_InitStruct->Pull       = LL_GPIO_PULL_NO;\n  253:   GPIO_InitStruct->Alternate  = LL_GPIO_AF_0;\n  254  }\n  255  \n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Middlewares/USBDevice4Cube/Src/hal_usb.c:\n   31  \n   32      GPIO_InitStruct.Pin = GPIO_PIN_11 | GPIO_PIN_12;\n   33:     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;\n   34      GPIO_InitStruct.Pull = GPIO_NOPULL;\n   35      GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;\n   36:     GPIO_InitStruct.Alternate = GPIO_AF10_OTG_FS;\n   37      HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);\n   38  \n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Src/stm32g4xx_hal_msp.c:\n  351      */\n  352      GPIO_InitStruct.Pin = GPIO_PIN_8;\n  353:     GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;\n  354      GPIO_InitStruct.Pull = GPIO_PULLUP;\n  355      GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;\n  356:     GPIO_InitStruct.Alternate = GPIO_AF2_I2C3;\n  357      HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);\n  358  \n  359      GPIO_InitStruct.Pin = GPIO_PIN_11;\n  360:     GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;\n  361      GPIO_InitStruct.Pull = GPIO_PULLUP;\n  362      GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;\n  363:     GPIO_InitStruct.Alternate = GPIO_AF8_I2C3;\n  364      HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);\n  365  \n  ...\n  428      */\n  429      GPIO_InitStruct.Pin = GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15;\n  430:     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;\n  431      GPIO_InitStruct.Pull = GPIO_NOPULL;\n  432      GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;\n  433:     GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;\n  434      HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);\n  435  \n  ...\n  539      */\n  540      GPIO_InitStruct.Pin = GPIO_PIN_3;\n  541:     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;\n  542      GPIO_InitStruct.Pull = GPIO_NOPULL;\n  543      GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;\n  544:     GPIO_InitStruct.Alternate = GPIO_AF10_TIM3;\n  545      HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);\n  546  \n  547      GPIO_InitStruct.Pin = GPIO_PIN_4|GPIO_PIN_5;\n  548:     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;\n  549      GPIO_InitStruct.Pull = GPIO_NOPULL;\n  550      GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;\n  551:     GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;\n  552      HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);\n  553  \n  ...\n  575      */\n  576      GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3;\n  577:     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;\n  578      GPIO_InitStruct.Pull = GPIO_NOPULL;\n  579      GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;\n  580:     GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;\n  581      HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);\n  582  \n  ...\n  599      */\n  600      GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;\n  601:     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;\n  602      GPIO_InitStruct.Pull = GPIO_NOPULL;\n  603      GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;\n  604:     GPIO_InitStruct.Alternate = GPIO_AF2_TIM4;\n  605      HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);\n  606  \n  ...\n  708      */\n  709      GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;\n  710:     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;\n  711      GPIO_InitStruct.Pull = GPIO_NOPULL;\n  712      GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;\n  713:     GPIO_InitStruct.Alternate = GPIO_AF7_USART1;\n  714      HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);\n  715  \n\n/Users/dog/Documents/electronics/stm32-nema17-servo/stm32-servo-firmware/src/usbd/hal_usb.c:\n    7      GPIO_InitTypeDef GPIO_InitStruct = {\n    8          .Pin = GPIO_PIN_11 | GPIO_PIN_12,\n    9:         .Mode = GPIO_MODE_AF_PP,\n   10          .Pull = GPIO_NOPULL,\n   11          .Speed = GPIO_SPEED_FREQ_VERY_HIGH,\n   12:         .Alternate = GPIO_AF10_OTG_FS,\n   13      };\n   14  \n\n1354 matches across 18 files\n\n\nSearching 1249 files for \"GPIO.*AF.*FS\" (regex, case sensitive)\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g431xx.h:\n 5790  \n 5791  /****************** Bit definition for GPIO_AFRL register *********************/\n 5792: #define GPIO_AFRL_AFSEL0_Pos           (0U)\n 5793: #define GPIO_AFRL_AFSEL0_Msk           (0xFUL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x0000000F */\n 5794: #define GPIO_AFRL_AFSEL0               GPIO_AFRL_AFSEL0_Msk\n 5795: #define GPIO_AFRL_AFSEL0_0             (0x1UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000001 */\n 5796: #define GPIO_AFRL_AFSEL0_1             (0x2UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000002 */\n 5797: #define GPIO_AFRL_AFSEL0_2             (0x4UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000004 */\n 5798: #define GPIO_AFRL_AFSEL0_3             (0x8UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000008 */\n 5799: #define GPIO_AFRL_AFSEL1_Pos           (4U)\n 5800: #define GPIO_AFRL_AFSEL1_Msk           (0xFUL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x000000F0 */\n 5801: #define GPIO_AFRL_AFSEL1               GPIO_AFRL_AFSEL1_Msk\n 5802: #define GPIO_AFRL_AFSEL1_0             (0x1UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000010 */\n 5803: #define GPIO_AFRL_AFSEL1_1             (0x2UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000020 */\n 5804: #define GPIO_AFRL_AFSEL1_2             (0x4UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000040 */\n 5805: #define GPIO_AFRL_AFSEL1_3             (0x8UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000080 */\n 5806: #define GPIO_AFRL_AFSEL2_Pos           (8U)\n 5807: #define GPIO_AFRL_AFSEL2_Msk           (0xFUL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000F00 */\n 5808: #define GPIO_AFRL_AFSEL2               GPIO_AFRL_AFSEL2_Msk\n 5809: #define GPIO_AFRL_AFSEL2_0             (0x1UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000100 */\n 5810: #define GPIO_AFRL_AFSEL2_1             (0x2UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000200 */\n 5811: #define GPIO_AFRL_AFSEL2_2             (0x4UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000400 */\n 5812: #define GPIO_AFRL_AFSEL2_3             (0x8UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000800 */\n 5813: #define GPIO_AFRL_AFSEL3_Pos           (12U)\n 5814: #define GPIO_AFRL_AFSEL3_Msk           (0xFUL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x0000F000 */\n 5815: #define GPIO_AFRL_AFSEL3               GPIO_AFRL_AFSEL3_Msk\n 5816: #define GPIO_AFRL_AFSEL3_0             (0x1UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00001000 */\n 5817: #define GPIO_AFRL_AFSEL3_1             (0x2UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00002000 */\n 5818: #define GPIO_AFRL_AFSEL3_2             (0x4UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00004000 */\n 5819: #define GPIO_AFRL_AFSEL3_3             (0x8UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00008000 */\n 5820: #define GPIO_AFRL_AFSEL4_Pos           (16U)\n 5821: #define GPIO_AFRL_AFSEL4_Msk           (0xFUL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x000F0000 */\n 5822: #define GPIO_AFRL_AFSEL4               GPIO_AFRL_AFSEL4_Msk\n 5823: #define GPIO_AFRL_AFSEL4_0             (0x1UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00010000 */\n 5824: #define GPIO_AFRL_AFSEL4_1             (0x2UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00020000 */\n 5825: #define GPIO_AFRL_AFSEL4_2             (0x4UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00040000 */\n 5826: #define GPIO_AFRL_AFSEL4_3             (0x8UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00080000 */\n 5827: #define GPIO_AFRL_AFSEL5_Pos           (20U)\n 5828: #define GPIO_AFRL_AFSEL5_Msk           (0xFUL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00F00000 */\n 5829: #define GPIO_AFRL_AFSEL5               GPIO_AFRL_AFSEL5_Msk\n 5830: #define GPIO_AFRL_AFSEL5_0             (0x1UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00100000 */\n 5831: #define GPIO_AFRL_AFSEL5_1             (0x2UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00200000 */\n 5832: #define GPIO_AFRL_AFSEL5_2             (0x4UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00400000 */\n 5833: #define GPIO_AFRL_AFSEL5_3             (0x8UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00800000 */\n 5834: #define GPIO_AFRL_AFSEL6_Pos           (24U)\n 5835: #define GPIO_AFRL_AFSEL6_Msk           (0xFUL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x0F000000 */\n 5836: #define GPIO_AFRL_AFSEL6               GPIO_AFRL_AFSEL6_Msk\n 5837: #define GPIO_AFRL_AFSEL6_0             (0x1UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x01000000 */\n 5838: #define GPIO_AFRL_AFSEL6_1             (0x2UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x02000000 */\n 5839: #define GPIO_AFRL_AFSEL6_2             (0x4UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x04000000 */\n 5840: #define GPIO_AFRL_AFSEL6_3             (0x8UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x08000000 */\n 5841: #define GPIO_AFRL_AFSEL7_Pos           (28U)\n 5842: #define GPIO_AFRL_AFSEL7_Msk           (0xFUL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0xF0000000 */\n 5843: #define GPIO_AFRL_AFSEL7               GPIO_AFRL_AFSEL7_Msk\n 5844: #define GPIO_AFRL_AFSEL7_0             (0x1UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x10000000 */\n 5845: #define GPIO_AFRL_AFSEL7_1             (0x2UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x20000000 */\n 5846: #define GPIO_AFRL_AFSEL7_2             (0x4UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x40000000 */\n 5847: #define GPIO_AFRL_AFSEL7_3             (0x8UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x80000000 */\n 5848  \n 5849  /* Legacy defines */\n 5850: #define GPIO_AFRL_AFRL0                      GPIO_AFRL_AFSEL0\n 5851: #define GPIO_AFRL_AFRL1                      GPIO_AFRL_AFSEL1\n 5852: #define GPIO_AFRL_AFRL2                      GPIO_AFRL_AFSEL2\n 5853: #define GPIO_AFRL_AFRL3                      GPIO_AFRL_AFSEL3\n 5854: #define GPIO_AFRL_AFRL4                      GPIO_AFRL_AFSEL4\n 5855: #define GPIO_AFRL_AFRL5                      GPIO_AFRL_AFSEL5\n 5856: #define GPIO_AFRL_AFRL6                      GPIO_AFRL_AFSEL6\n 5857: #define GPIO_AFRL_AFRL7                      GPIO_AFRL_AFSEL7\n 5858  \n 5859  /****************** Bit definition for GPIO_AFRH register *********************/\n 5860: #define GPIO_AFRH_AFSEL8_Pos           (0U)\n 5861: #define GPIO_AFRH_AFSEL8_Msk           (0xFUL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x0000000F */\n 5862: #define GPIO_AFRH_AFSEL8               GPIO_AFRH_AFSEL8_Msk\n 5863: #define GPIO_AFRH_AFSEL8_0             (0x1UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000001 */\n 5864: #define GPIO_AFRH_AFSEL8_1             (0x2UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000002 */\n 5865: #define GPIO_AFRH_AFSEL8_2             (0x4UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000004 */\n 5866: #define GPIO_AFRH_AFSEL8_3             (0x8UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000008 */\n 5867: #define GPIO_AFRH_AFSEL9_Pos           (4U)\n 5868: #define GPIO_AFRH_AFSEL9_Msk           (0xFUL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x000000F0 */\n 5869: #define GPIO_AFRH_AFSEL9               GPIO_AFRH_AFSEL9_Msk\n 5870: #define GPIO_AFRH_AFSEL9_0             (0x1UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000010 */\n 5871: #define GPIO_AFRH_AFSEL9_1             (0x2UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000020 */\n 5872: #define GPIO_AFRH_AFSEL9_2             (0x4UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000040 */\n 5873: #define GPIO_AFRH_AFSEL9_3             (0x8UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000080 */\n 5874: #define GPIO_AFRH_AFSEL10_Pos          (8U)\n 5875: #define GPIO_AFRH_AFSEL10_Msk          (0xFUL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000F00 */\n 5876: #define GPIO_AFRH_AFSEL10              GPIO_AFRH_AFSEL10_Msk\n 5877: #define GPIO_AFRH_AFSEL10_0            (0x1UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000100 */\n 5878: #define GPIO_AFRH_AFSEL10_1            (0x2UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000200 */\n 5879: #define GPIO_AFRH_AFSEL10_2            (0x4UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000400 */\n 5880: #define GPIO_AFRH_AFSEL10_3            (0x8UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000800 */\n 5881: #define GPIO_AFRH_AFSEL11_Pos          (12U)\n 5882: #define GPIO_AFRH_AFSEL11_Msk          (0xFUL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x0000F000 */\n 5883: #define GPIO_AFRH_AFSEL11              GPIO_AFRH_AFSEL11_Msk\n 5884: #define GPIO_AFRH_AFSEL11_0            (0x1UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00001000 */\n 5885: #define GPIO_AFRH_AFSEL11_1            (0x2UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00002000 */\n 5886: #define GPIO_AFRH_AFSEL11_2            (0x4UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00004000 */\n 5887: #define GPIO_AFRH_AFSEL11_3            (0x8UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00008000 */\n 5888: #define GPIO_AFRH_AFSEL12_Pos          (16U)\n 5889: #define GPIO_AFRH_AFSEL12_Msk          (0xFUL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x000F0000 */\n 5890: #define GPIO_AFRH_AFSEL12              GPIO_AFRH_AFSEL12_Msk\n 5891: #define GPIO_AFRH_AFSEL12_0            (0x1UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00010000 */\n 5892: #define GPIO_AFRH_AFSEL12_1            (0x2UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00020000 */\n 5893: #define GPIO_AFRH_AFSEL12_2            (0x4UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00040000 */\n 5894: #define GPIO_AFRH_AFSEL12_3            (0x8UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00080000 */\n 5895: #define GPIO_AFRH_AFSEL13_Pos          (20U)\n 5896: #define GPIO_AFRH_AFSEL13_Msk          (0xFUL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00F00000 */\n 5897: #define GPIO_AFRH_AFSEL13              GPIO_AFRH_AFSEL13_Msk\n 5898: #define GPIO_AFRH_AFSEL13_0            (0x1UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00100000 */\n 5899: #define GPIO_AFRH_AFSEL13_1            (0x2UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00200000 */\n 5900: #define GPIO_AFRH_AFSEL13_2            (0x4UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00400000 */\n 5901: #define GPIO_AFRH_AFSEL13_3            (0x8UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00800000 */\n 5902: #define GPIO_AFRH_AFSEL14_Pos          (24U)\n 5903: #define GPIO_AFRH_AFSEL14_Msk          (0xFUL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x0F000000 */\n 5904: #define GPIO_AFRH_AFSEL14              GPIO_AFRH_AFSEL14_Msk\n 5905: #define GPIO_AFRH_AFSEL14_0            (0x1UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x01000000 */\n 5906: #define GPIO_AFRH_AFSEL14_1            (0x2UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x02000000 */\n 5907: #define GPIO_AFRH_AFSEL14_2            (0x4UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x04000000 */\n 5908: #define GPIO_AFRH_AFSEL14_3            (0x8UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x08000000 */\n 5909: #define GPIO_AFRH_AFSEL15_Pos          (28U)\n 5910: #define GPIO_AFRH_AFSEL15_Msk          (0xFUL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0xF0000000 */\n 5911: #define GPIO_AFRH_AFSEL15              GPIO_AFRH_AFSEL15_Msk\n 5912: #define GPIO_AFRH_AFSEL15_0            (0x1UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x10000000 */\n 5913: #define GPIO_AFRH_AFSEL15_1            (0x2UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x20000000 */\n 5914: #define GPIO_AFRH_AFSEL15_2            (0x4UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x40000000 */\n 5915: #define GPIO_AFRH_AFSEL15_3            (0x8UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x80000000 */\n 5916  \n 5917  /* Legacy defines */\n 5918: #define GPIO_AFRH_AFRH0                      GPIO_AFRH_AFSEL8\n 5919: #define GPIO_AFRH_AFRH1                      GPIO_AFRH_AFSEL9\n 5920: #define GPIO_AFRH_AFRH2                      GPIO_AFRH_AFSEL10\n 5921: #define GPIO_AFRH_AFRH3                      GPIO_AFRH_AFSEL11\n 5922: #define GPIO_AFRH_AFRH4                      GPIO_AFRH_AFSEL12\n 5923: #define GPIO_AFRH_AFRH5                      GPIO_AFRH_AFSEL13\n 5924: #define GPIO_AFRH_AFRH6                      GPIO_AFRH_AFSEL14\n 5925: #define GPIO_AFRH_AFRH7                      GPIO_AFRH_AFSEL15\n 5926  \n 5927  /******************  Bits definition for GPIO_BRR register  ******************/\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g441xx.h:\n 6012  \n 6013  /****************** Bit definition for GPIO_AFRL register *********************/\n 6014: #define GPIO_AFRL_AFSEL0_Pos           (0U)\n 6015: #define GPIO_AFRL_AFSEL0_Msk           (0xFUL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x0000000F */\n 6016: #define GPIO_AFRL_AFSEL0               GPIO_AFRL_AFSEL0_Msk\n 6017: #define GPIO_AFRL_AFSEL0_0             (0x1UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000001 */\n 6018: #define GPIO_AFRL_AFSEL0_1             (0x2UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000002 */\n 6019: #define GPIO_AFRL_AFSEL0_2             (0x4UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000004 */\n 6020: #define GPIO_AFRL_AFSEL0_3             (0x8UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000008 */\n 6021: #define GPIO_AFRL_AFSEL1_Pos           (4U)\n 6022: #define GPIO_AFRL_AFSEL1_Msk           (0xFUL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x000000F0 */\n 6023: #define GPIO_AFRL_AFSEL1               GPIO_AFRL_AFSEL1_Msk\n 6024: #define GPIO_AFRL_AFSEL1_0             (0x1UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000010 */\n 6025: #define GPIO_AFRL_AFSEL1_1             (0x2UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000020 */\n 6026: #define GPIO_AFRL_AFSEL1_2             (0x4UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000040 */\n 6027: #define GPIO_AFRL_AFSEL1_3             (0x8UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000080 */\n 6028: #define GPIO_AFRL_AFSEL2_Pos           (8U)\n 6029: #define GPIO_AFRL_AFSEL2_Msk           (0xFUL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000F00 */\n 6030: #define GPIO_AFRL_AFSEL2               GPIO_AFRL_AFSEL2_Msk\n 6031: #define GPIO_AFRL_AFSEL2_0             (0x1UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000100 */\n 6032: #define GPIO_AFRL_AFSEL2_1             (0x2UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000200 */\n 6033: #define GPIO_AFRL_AFSEL2_2             (0x4UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000400 */\n 6034: #define GPIO_AFRL_AFSEL2_3             (0x8UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000800 */\n 6035: #define GPIO_AFRL_AFSEL3_Pos           (12U)\n 6036: #define GPIO_AFRL_AFSEL3_Msk           (0xFUL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x0000F000 */\n 6037: #define GPIO_AFRL_AFSEL3               GPIO_AFRL_AFSEL3_Msk\n 6038: #define GPIO_AFRL_AFSEL3_0             (0x1UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00001000 */\n 6039: #define GPIO_AFRL_AFSEL3_1             (0x2UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00002000 */\n 6040: #define GPIO_AFRL_AFSEL3_2             (0x4UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00004000 */\n 6041: #define GPIO_AFRL_AFSEL3_3             (0x8UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00008000 */\n 6042: #define GPIO_AFRL_AFSEL4_Pos           (16U)\n 6043: #define GPIO_AFRL_AFSEL4_Msk           (0xFUL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x000F0000 */\n 6044: #define GPIO_AFRL_AFSEL4               GPIO_AFRL_AFSEL4_Msk\n 6045: #define GPIO_AFRL_AFSEL4_0             (0x1UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00010000 */\n 6046: #define GPIO_AFRL_AFSEL4_1             (0x2UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00020000 */\n 6047: #define GPIO_AFRL_AFSEL4_2             (0x4UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00040000 */\n 6048: #define GPIO_AFRL_AFSEL4_3             (0x8UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00080000 */\n 6049: #define GPIO_AFRL_AFSEL5_Pos           (20U)\n 6050: #define GPIO_AFRL_AFSEL5_Msk           (0xFUL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00F00000 */\n 6051: #define GPIO_AFRL_AFSEL5               GPIO_AFRL_AFSEL5_Msk\n 6052: #define GPIO_AFRL_AFSEL5_0             (0x1UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00100000 */\n 6053: #define GPIO_AFRL_AFSEL5_1             (0x2UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00200000 */\n 6054: #define GPIO_AFRL_AFSEL5_2             (0x4UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00400000 */\n 6055: #define GPIO_AFRL_AFSEL5_3             (0x8UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00800000 */\n 6056: #define GPIO_AFRL_AFSEL6_Pos           (24U)\n 6057: #define GPIO_AFRL_AFSEL6_Msk           (0xFUL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x0F000000 */\n 6058: #define GPIO_AFRL_AFSEL6               GPIO_AFRL_AFSEL6_Msk\n 6059: #define GPIO_AFRL_AFSEL6_0             (0x1UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x01000000 */\n 6060: #define GPIO_AFRL_AFSEL6_1             (0x2UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x02000000 */\n 6061: #define GPIO_AFRL_AFSEL6_2             (0x4UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x04000000 */\n 6062: #define GPIO_AFRL_AFSEL6_3             (0x8UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x08000000 */\n 6063: #define GPIO_AFRL_AFSEL7_Pos           (28U)\n 6064: #define GPIO_AFRL_AFSEL7_Msk           (0xFUL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0xF0000000 */\n 6065: #define GPIO_AFRL_AFSEL7               GPIO_AFRL_AFSEL7_Msk\n 6066: #define GPIO_AFRL_AFSEL7_0             (0x1UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x10000000 */\n 6067: #define GPIO_AFRL_AFSEL7_1             (0x2UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x20000000 */\n 6068: #define GPIO_AFRL_AFSEL7_2             (0x4UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x40000000 */\n 6069: #define GPIO_AFRL_AFSEL7_3             (0x8UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x80000000 */\n 6070  \n 6071  /* Legacy defines */\n 6072: #define GPIO_AFRL_AFRL0                      GPIO_AFRL_AFSEL0\n 6073: #define GPIO_AFRL_AFRL1                      GPIO_AFRL_AFSEL1\n 6074: #define GPIO_AFRL_AFRL2                      GPIO_AFRL_AFSEL2\n 6075: #define GPIO_AFRL_AFRL3                      GPIO_AFRL_AFSEL3\n 6076: #define GPIO_AFRL_AFRL4                      GPIO_AFRL_AFSEL4\n 6077: #define GPIO_AFRL_AFRL5                      GPIO_AFRL_AFSEL5\n 6078: #define GPIO_AFRL_AFRL6                      GPIO_AFRL_AFSEL6\n 6079: #define GPIO_AFRL_AFRL7                      GPIO_AFRL_AFSEL7\n 6080  \n 6081  /****************** Bit definition for GPIO_AFRH register *********************/\n 6082: #define GPIO_AFRH_AFSEL8_Pos           (0U)\n 6083: #define GPIO_AFRH_AFSEL8_Msk           (0xFUL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x0000000F */\n 6084: #define GPIO_AFRH_AFSEL8               GPIO_AFRH_AFSEL8_Msk\n 6085: #define GPIO_AFRH_AFSEL8_0             (0x1UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000001 */\n 6086: #define GPIO_AFRH_AFSEL8_1             (0x2UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000002 */\n 6087: #define GPIO_AFRH_AFSEL8_2             (0x4UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000004 */\n 6088: #define GPIO_AFRH_AFSEL8_3             (0x8UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000008 */\n 6089: #define GPIO_AFRH_AFSEL9_Pos           (4U)\n 6090: #define GPIO_AFRH_AFSEL9_Msk           (0xFUL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x000000F0 */\n 6091: #define GPIO_AFRH_AFSEL9               GPIO_AFRH_AFSEL9_Msk\n 6092: #define GPIO_AFRH_AFSEL9_0             (0x1UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000010 */\n 6093: #define GPIO_AFRH_AFSEL9_1             (0x2UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000020 */\n 6094: #define GPIO_AFRH_AFSEL9_2             (0x4UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000040 */\n 6095: #define GPIO_AFRH_AFSEL9_3             (0x8UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000080 */\n 6096: #define GPIO_AFRH_AFSEL10_Pos          (8U)\n 6097: #define GPIO_AFRH_AFSEL10_Msk          (0xFUL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000F00 */\n 6098: #define GPIO_AFRH_AFSEL10              GPIO_AFRH_AFSEL10_Msk\n 6099: #define GPIO_AFRH_AFSEL10_0            (0x1UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000100 */\n 6100: #define GPIO_AFRH_AFSEL10_1            (0x2UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000200 */\n 6101: #define GPIO_AFRH_AFSEL10_2            (0x4UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000400 */\n 6102: #define GPIO_AFRH_AFSEL10_3            (0x8UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000800 */\n 6103: #define GPIO_AFRH_AFSEL11_Pos          (12U)\n 6104: #define GPIO_AFRH_AFSEL11_Msk          (0xFUL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x0000F000 */\n 6105: #define GPIO_AFRH_AFSEL11              GPIO_AFRH_AFSEL11_Msk\n 6106: #define GPIO_AFRH_AFSEL11_0            (0x1UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00001000 */\n 6107: #define GPIO_AFRH_AFSEL11_1            (0x2UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00002000 */\n 6108: #define GPIO_AFRH_AFSEL11_2            (0x4UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00004000 */\n 6109: #define GPIO_AFRH_AFSEL11_3            (0x8UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00008000 */\n 6110: #define GPIO_AFRH_AFSEL12_Pos          (16U)\n 6111: #define GPIO_AFRH_AFSEL12_Msk          (0xFUL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x000F0000 */\n 6112: #define GPIO_AFRH_AFSEL12              GPIO_AFRH_AFSEL12_Msk\n 6113: #define GPIO_AFRH_AFSEL12_0            (0x1UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00010000 */\n 6114: #define GPIO_AFRH_AFSEL12_1            (0x2UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00020000 */\n 6115: #define GPIO_AFRH_AFSEL12_2            (0x4UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00040000 */\n 6116: #define GPIO_AFRH_AFSEL12_3            (0x8UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00080000 */\n 6117: #define GPIO_AFRH_AFSEL13_Pos          (20U)\n 6118: #define GPIO_AFRH_AFSEL13_Msk          (0xFUL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00F00000 */\n 6119: #define GPIO_AFRH_AFSEL13              GPIO_AFRH_AFSEL13_Msk\n 6120: #define GPIO_AFRH_AFSEL13_0            (0x1UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00100000 */\n 6121: #define GPIO_AFRH_AFSEL13_1            (0x2UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00200000 */\n 6122: #define GPIO_AFRH_AFSEL13_2            (0x4UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00400000 */\n 6123: #define GPIO_AFRH_AFSEL13_3            (0x8UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00800000 */\n 6124: #define GPIO_AFRH_AFSEL14_Pos          (24U)\n 6125: #define GPIO_AFRH_AFSEL14_Msk          (0xFUL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x0F000000 */\n 6126: #define GPIO_AFRH_AFSEL14              GPIO_AFRH_AFSEL14_Msk\n 6127: #define GPIO_AFRH_AFSEL14_0            (0x1UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x01000000 */\n 6128: #define GPIO_AFRH_AFSEL14_1            (0x2UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x02000000 */\n 6129: #define GPIO_AFRH_AFSEL14_2            (0x4UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x04000000 */\n 6130: #define GPIO_AFRH_AFSEL14_3            (0x8UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x08000000 */\n 6131: #define GPIO_AFRH_AFSEL15_Pos          (28U)\n 6132: #define GPIO_AFRH_AFSEL15_Msk          (0xFUL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0xF0000000 */\n 6133: #define GPIO_AFRH_AFSEL15              GPIO_AFRH_AFSEL15_Msk\n 6134: #define GPIO_AFRH_AFSEL15_0            (0x1UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x10000000 */\n 6135: #define GPIO_AFRH_AFSEL15_1            (0x2UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x20000000 */\n 6136: #define GPIO_AFRH_AFSEL15_2            (0x4UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x40000000 */\n 6137: #define GPIO_AFRH_AFSEL15_3            (0x8UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x80000000 */\n 6138  \n 6139  /* Legacy defines */\n 6140: #define GPIO_AFRH_AFRH0                      GPIO_AFRH_AFSEL8\n 6141: #define GPIO_AFRH_AFRH1                      GPIO_AFRH_AFSEL9\n 6142: #define GPIO_AFRH_AFRH2                      GPIO_AFRH_AFSEL10\n 6143: #define GPIO_AFRH_AFRH3                      GPIO_AFRH_AFSEL11\n 6144: #define GPIO_AFRH_AFRH4                      GPIO_AFRH_AFSEL12\n 6145: #define GPIO_AFRH_AFRH5                      GPIO_AFRH_AFSEL13\n 6146: #define GPIO_AFRH_AFRH6                      GPIO_AFRH_AFSEL14\n 6147: #define GPIO_AFRH_AFRH7                      GPIO_AFRH_AFSEL15\n 6148  \n 6149  /******************  Bits definition for GPIO_BRR register  ******************/\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g471xx.h:\n 5997  \n 5998  /****************** Bit definition for GPIO_AFRL register *********************/\n 5999: #define GPIO_AFRL_AFSEL0_Pos           (0U)\n 6000: #define GPIO_AFRL_AFSEL0_Msk           (0xFUL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x0000000F */\n 6001: #define GPIO_AFRL_AFSEL0               GPIO_AFRL_AFSEL0_Msk\n 6002: #define GPIO_AFRL_AFSEL0_0             (0x1UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000001 */\n 6003: #define GPIO_AFRL_AFSEL0_1             (0x2UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000002 */\n 6004: #define GPIO_AFRL_AFSEL0_2             (0x4UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000004 */\n 6005: #define GPIO_AFRL_AFSEL0_3             (0x8UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000008 */\n 6006: #define GPIO_AFRL_AFSEL1_Pos           (4U)\n 6007: #define GPIO_AFRL_AFSEL1_Msk           (0xFUL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x000000F0 */\n 6008: #define GPIO_AFRL_AFSEL1               GPIO_AFRL_AFSEL1_Msk\n 6009: #define GPIO_AFRL_AFSEL1_0             (0x1UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000010 */\n 6010: #define GPIO_AFRL_AFSEL1_1             (0x2UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000020 */\n 6011: #define GPIO_AFRL_AFSEL1_2             (0x4UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000040 */\n 6012: #define GPIO_AFRL_AFSEL1_3             (0x8UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000080 */\n 6013: #define GPIO_AFRL_AFSEL2_Pos           (8U)\n 6014: #define GPIO_AFRL_AFSEL2_Msk           (0xFUL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000F00 */\n 6015: #define GPIO_AFRL_AFSEL2               GPIO_AFRL_AFSEL2_Msk\n 6016: #define GPIO_AFRL_AFSEL2_0             (0x1UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000100 */\n 6017: #define GPIO_AFRL_AFSEL2_1             (0x2UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000200 */\n 6018: #define GPIO_AFRL_AFSEL2_2             (0x4UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000400 */\n 6019: #define GPIO_AFRL_AFSEL2_3             (0x8UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000800 */\n 6020: #define GPIO_AFRL_AFSEL3_Pos           (12U)\n 6021: #define GPIO_AFRL_AFSEL3_Msk           (0xFUL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x0000F000 */\n 6022: #define GPIO_AFRL_AFSEL3               GPIO_AFRL_AFSEL3_Msk\n 6023: #define GPIO_AFRL_AFSEL3_0             (0x1UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00001000 */\n 6024: #define GPIO_AFRL_AFSEL3_1             (0x2UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00002000 */\n 6025: #define GPIO_AFRL_AFSEL3_2             (0x4UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00004000 */\n 6026: #define GPIO_AFRL_AFSEL3_3             (0x8UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00008000 */\n 6027: #define GPIO_AFRL_AFSEL4_Pos           (16U)\n 6028: #define GPIO_AFRL_AFSEL4_Msk           (0xFUL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x000F0000 */\n 6029: #define GPIO_AFRL_AFSEL4               GPIO_AFRL_AFSEL4_Msk\n 6030: #define GPIO_AFRL_AFSEL4_0             (0x1UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00010000 */\n 6031: #define GPIO_AFRL_AFSEL4_1             (0x2UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00020000 */\n 6032: #define GPIO_AFRL_AFSEL4_2             (0x4UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00040000 */\n 6033: #define GPIO_AFRL_AFSEL4_3             (0x8UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00080000 */\n 6034: #define GPIO_AFRL_AFSEL5_Pos           (20U)\n 6035: #define GPIO_AFRL_AFSEL5_Msk           (0xFUL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00F00000 */\n 6036: #define GPIO_AFRL_AFSEL5               GPIO_AFRL_AFSEL5_Msk\n 6037: #define GPIO_AFRL_AFSEL5_0             (0x1UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00100000 */\n 6038: #define GPIO_AFRL_AFSEL5_1             (0x2UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00200000 */\n 6039: #define GPIO_AFRL_AFSEL5_2             (0x4UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00400000 */\n 6040: #define GPIO_AFRL_AFSEL5_3             (0x8UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00800000 */\n 6041: #define GPIO_AFRL_AFSEL6_Pos           (24U)\n 6042: #define GPIO_AFRL_AFSEL6_Msk           (0xFUL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x0F000000 */\n 6043: #define GPIO_AFRL_AFSEL6               GPIO_AFRL_AFSEL6_Msk\n 6044: #define GPIO_AFRL_AFSEL6_0             (0x1UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x01000000 */\n 6045: #define GPIO_AFRL_AFSEL6_1             (0x2UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x02000000 */\n 6046: #define GPIO_AFRL_AFSEL6_2             (0x4UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x04000000 */\n 6047: #define GPIO_AFRL_AFSEL6_3             (0x8UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x08000000 */\n 6048: #define GPIO_AFRL_AFSEL7_Pos           (28U)\n 6049: #define GPIO_AFRL_AFSEL7_Msk           (0xFUL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0xF0000000 */\n 6050: #define GPIO_AFRL_AFSEL7               GPIO_AFRL_AFSEL7_Msk\n 6051: #define GPIO_AFRL_AFSEL7_0             (0x1UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x10000000 */\n 6052: #define GPIO_AFRL_AFSEL7_1             (0x2UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x20000000 */\n 6053: #define GPIO_AFRL_AFSEL7_2             (0x4UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x40000000 */\n 6054: #define GPIO_AFRL_AFSEL7_3             (0x8UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x80000000 */\n 6055  \n 6056  /* Legacy defines */\n 6057: #define GPIO_AFRL_AFRL0                      GPIO_AFRL_AFSEL0\n 6058: #define GPIO_AFRL_AFRL1                      GPIO_AFRL_AFSEL1\n 6059: #define GPIO_AFRL_AFRL2                      GPIO_AFRL_AFSEL2\n 6060: #define GPIO_AFRL_AFRL3                      GPIO_AFRL_AFSEL3\n 6061: #define GPIO_AFRL_AFRL4                      GPIO_AFRL_AFSEL4\n 6062: #define GPIO_AFRL_AFRL5                      GPIO_AFRL_AFSEL5\n 6063: #define GPIO_AFRL_AFRL6                      GPIO_AFRL_AFSEL6\n 6064: #define GPIO_AFRL_AFRL7                      GPIO_AFRL_AFSEL7\n 6065  \n 6066  /****************** Bit definition for GPIO_AFRH register *********************/\n 6067: #define GPIO_AFRH_AFSEL8_Pos           (0U)\n 6068: #define GPIO_AFRH_AFSEL8_Msk           (0xFUL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x0000000F */\n 6069: #define GPIO_AFRH_AFSEL8               GPIO_AFRH_AFSEL8_Msk\n 6070: #define GPIO_AFRH_AFSEL8_0             (0x1UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000001 */\n 6071: #define GPIO_AFRH_AFSEL8_1             (0x2UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000002 */\n 6072: #define GPIO_AFRH_AFSEL8_2             (0x4UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000004 */\n 6073: #define GPIO_AFRH_AFSEL8_3             (0x8UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000008 */\n 6074: #define GPIO_AFRH_AFSEL9_Pos           (4U)\n 6075: #define GPIO_AFRH_AFSEL9_Msk           (0xFUL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x000000F0 */\n 6076: #define GPIO_AFRH_AFSEL9               GPIO_AFRH_AFSEL9_Msk\n 6077: #define GPIO_AFRH_AFSEL9_0             (0x1UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000010 */\n 6078: #define GPIO_AFRH_AFSEL9_1             (0x2UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000020 */\n 6079: #define GPIO_AFRH_AFSEL9_2             (0x4UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000040 */\n 6080: #define GPIO_AFRH_AFSEL9_3             (0x8UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000080 */\n 6081: #define GPIO_AFRH_AFSEL10_Pos          (8U)\n 6082: #define GPIO_AFRH_AFSEL10_Msk          (0xFUL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000F00 */\n 6083: #define GPIO_AFRH_AFSEL10              GPIO_AFRH_AFSEL10_Msk\n 6084: #define GPIO_AFRH_AFSEL10_0            (0x1UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000100 */\n 6085: #define GPIO_AFRH_AFSEL10_1            (0x2UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000200 */\n 6086: #define GPIO_AFRH_AFSEL10_2            (0x4UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000400 */\n 6087: #define GPIO_AFRH_AFSEL10_3            (0x8UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000800 */\n 6088: #define GPIO_AFRH_AFSEL11_Pos          (12U)\n 6089: #define GPIO_AFRH_AFSEL11_Msk          (0xFUL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x0000F000 */\n 6090: #define GPIO_AFRH_AFSEL11              GPIO_AFRH_AFSEL11_Msk\n 6091: #define GPIO_AFRH_AFSEL11_0            (0x1UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00001000 */\n 6092: #define GPIO_AFRH_AFSEL11_1            (0x2UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00002000 */\n 6093: #define GPIO_AFRH_AFSEL11_2            (0x4UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00004000 */\n 6094: #define GPIO_AFRH_AFSEL11_3            (0x8UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00008000 */\n 6095: #define GPIO_AFRH_AFSEL12_Pos          (16U)\n 6096: #define GPIO_AFRH_AFSEL12_Msk          (0xFUL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x000F0000 */\n 6097: #define GPIO_AFRH_AFSEL12              GPIO_AFRH_AFSEL12_Msk\n 6098: #define GPIO_AFRH_AFSEL12_0            (0x1UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00010000 */\n 6099: #define GPIO_AFRH_AFSEL12_1            (0x2UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00020000 */\n 6100: #define GPIO_AFRH_AFSEL12_2            (0x4UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00040000 */\n 6101: #define GPIO_AFRH_AFSEL12_3            (0x8UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00080000 */\n 6102: #define GPIO_AFRH_AFSEL13_Pos          (20U)\n 6103: #define GPIO_AFRH_AFSEL13_Msk          (0xFUL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00F00000 */\n 6104: #define GPIO_AFRH_AFSEL13              GPIO_AFRH_AFSEL13_Msk\n 6105: #define GPIO_AFRH_AFSEL13_0            (0x1UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00100000 */\n 6106: #define GPIO_AFRH_AFSEL13_1            (0x2UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00200000 */\n 6107: #define GPIO_AFRH_AFSEL13_2            (0x4UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00400000 */\n 6108: #define GPIO_AFRH_AFSEL13_3            (0x8UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00800000 */\n 6109: #define GPIO_AFRH_AFSEL14_Pos          (24U)\n 6110: #define GPIO_AFRH_AFSEL14_Msk          (0xFUL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x0F000000 */\n 6111: #define GPIO_AFRH_AFSEL14              GPIO_AFRH_AFSEL14_Msk\n 6112: #define GPIO_AFRH_AFSEL14_0            (0x1UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x01000000 */\n 6113: #define GPIO_AFRH_AFSEL14_1            (0x2UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x02000000 */\n 6114: #define GPIO_AFRH_AFSEL14_2            (0x4UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x04000000 */\n 6115: #define GPIO_AFRH_AFSEL14_3            (0x8UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x08000000 */\n 6116: #define GPIO_AFRH_AFSEL15_Pos          (28U)\n 6117: #define GPIO_AFRH_AFSEL15_Msk          (0xFUL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0xF0000000 */\n 6118: #define GPIO_AFRH_AFSEL15              GPIO_AFRH_AFSEL15_Msk\n 6119: #define GPIO_AFRH_AFSEL15_0            (0x1UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x10000000 */\n 6120: #define GPIO_AFRH_AFSEL15_1            (0x2UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x20000000 */\n 6121: #define GPIO_AFRH_AFSEL15_2            (0x4UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x40000000 */\n 6122: #define GPIO_AFRH_AFSEL15_3            (0x8UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x80000000 */\n 6123  \n 6124  /* Legacy defines */\n 6125: #define GPIO_AFRH_AFRH0                      GPIO_AFRH_AFSEL8\n 6126: #define GPIO_AFRH_AFRH1                      GPIO_AFRH_AFSEL9\n 6127: #define GPIO_AFRH_AFRH2                      GPIO_AFRH_AFSEL10\n 6128: #define GPIO_AFRH_AFRH3                      GPIO_AFRH_AFSEL11\n 6129: #define GPIO_AFRH_AFRH4                      GPIO_AFRH_AFSEL12\n 6130: #define GPIO_AFRH_AFRH5                      GPIO_AFRH_AFSEL13\n 6131: #define GPIO_AFRH_AFRH6                      GPIO_AFRH_AFSEL14\n 6132: #define GPIO_AFRH_AFRH7                      GPIO_AFRH_AFSEL15\n 6133  \n 6134  /******************  Bits definition for GPIO_BRR register  ******************/\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g473xx.h:\n 6538  \n 6539  /****************** Bit definition for GPIO_AFRL register *********************/\n 6540: #define GPIO_AFRL_AFSEL0_Pos           (0U)\n 6541: #define GPIO_AFRL_AFSEL0_Msk           (0xFUL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x0000000F */\n 6542: #define GPIO_AFRL_AFSEL0               GPIO_AFRL_AFSEL0_Msk\n 6543: #define GPIO_AFRL_AFSEL0_0             (0x1UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000001 */\n 6544: #define GPIO_AFRL_AFSEL0_1             (0x2UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000002 */\n 6545: #define GPIO_AFRL_AFSEL0_2             (0x4UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000004 */\n 6546: #define GPIO_AFRL_AFSEL0_3             (0x8UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000008 */\n 6547: #define GPIO_AFRL_AFSEL1_Pos           (4U)\n 6548: #define GPIO_AFRL_AFSEL1_Msk           (0xFUL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x000000F0 */\n 6549: #define GPIO_AFRL_AFSEL1               GPIO_AFRL_AFSEL1_Msk\n 6550: #define GPIO_AFRL_AFSEL1_0             (0x1UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000010 */\n 6551: #define GPIO_AFRL_AFSEL1_1             (0x2UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000020 */\n 6552: #define GPIO_AFRL_AFSEL1_2             (0x4UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000040 */\n 6553: #define GPIO_AFRL_AFSEL1_3             (0x8UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000080 */\n 6554: #define GPIO_AFRL_AFSEL2_Pos           (8U)\n 6555: #define GPIO_AFRL_AFSEL2_Msk           (0xFUL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000F00 */\n 6556: #define GPIO_AFRL_AFSEL2               GPIO_AFRL_AFSEL2_Msk\n 6557: #define GPIO_AFRL_AFSEL2_0             (0x1UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000100 */\n 6558: #define GPIO_AFRL_AFSEL2_1             (0x2UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000200 */\n 6559: #define GPIO_AFRL_AFSEL2_2             (0x4UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000400 */\n 6560: #define GPIO_AFRL_AFSEL2_3             (0x8UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000800 */\n 6561: #define GPIO_AFRL_AFSEL3_Pos           (12U)\n 6562: #define GPIO_AFRL_AFSEL3_Msk           (0xFUL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x0000F000 */\n 6563: #define GPIO_AFRL_AFSEL3               GPIO_AFRL_AFSEL3_Msk\n 6564: #define GPIO_AFRL_AFSEL3_0             (0x1UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00001000 */\n 6565: #define GPIO_AFRL_AFSEL3_1             (0x2UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00002000 */\n 6566: #define GPIO_AFRL_AFSEL3_2             (0x4UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00004000 */\n 6567: #define GPIO_AFRL_AFSEL3_3             (0x8UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00008000 */\n 6568: #define GPIO_AFRL_AFSEL4_Pos           (16U)\n 6569: #define GPIO_AFRL_AFSEL4_Msk           (0xFUL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x000F0000 */\n 6570: #define GPIO_AFRL_AFSEL4               GPIO_AFRL_AFSEL4_Msk\n 6571: #define GPIO_AFRL_AFSEL4_0             (0x1UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00010000 */\n 6572: #define GPIO_AFRL_AFSEL4_1             (0x2UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00020000 */\n 6573: #define GPIO_AFRL_AFSEL4_2             (0x4UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00040000 */\n 6574: #define GPIO_AFRL_AFSEL4_3             (0x8UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00080000 */\n 6575: #define GPIO_AFRL_AFSEL5_Pos           (20U)\n 6576: #define GPIO_AFRL_AFSEL5_Msk           (0xFUL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00F00000 */\n 6577: #define GPIO_AFRL_AFSEL5               GPIO_AFRL_AFSEL5_Msk\n 6578: #define GPIO_AFRL_AFSEL5_0             (0x1UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00100000 */\n 6579: #define GPIO_AFRL_AFSEL5_1             (0x2UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00200000 */\n 6580: #define GPIO_AFRL_AFSEL5_2             (0x4UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00400000 */\n 6581: #define GPIO_AFRL_AFSEL5_3             (0x8UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00800000 */\n 6582: #define GPIO_AFRL_AFSEL6_Pos           (24U)\n 6583: #define GPIO_AFRL_AFSEL6_Msk           (0xFUL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x0F000000 */\n 6584: #define GPIO_AFRL_AFSEL6               GPIO_AFRL_AFSEL6_Msk\n 6585: #define GPIO_AFRL_AFSEL6_0             (0x1UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x01000000 */\n 6586: #define GPIO_AFRL_AFSEL6_1             (0x2UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x02000000 */\n 6587: #define GPIO_AFRL_AFSEL6_2             (0x4UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x04000000 */\n 6588: #define GPIO_AFRL_AFSEL6_3             (0x8UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x08000000 */\n 6589: #define GPIO_AFRL_AFSEL7_Pos           (28U)\n 6590: #define GPIO_AFRL_AFSEL7_Msk           (0xFUL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0xF0000000 */\n 6591: #define GPIO_AFRL_AFSEL7               GPIO_AFRL_AFSEL7_Msk\n 6592: #define GPIO_AFRL_AFSEL7_0             (0x1UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x10000000 */\n 6593: #define GPIO_AFRL_AFSEL7_1             (0x2UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x20000000 */\n 6594: #define GPIO_AFRL_AFSEL7_2             (0x4UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x40000000 */\n 6595: #define GPIO_AFRL_AFSEL7_3             (0x8UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x80000000 */\n 6596  \n 6597  /* Legacy defines */\n 6598: #define GPIO_AFRL_AFRL0                      GPIO_AFRL_AFSEL0\n 6599: #define GPIO_AFRL_AFRL1                      GPIO_AFRL_AFSEL1\n 6600: #define GPIO_AFRL_AFRL2                      GPIO_AFRL_AFSEL2\n 6601: #define GPIO_AFRL_AFRL3                      GPIO_AFRL_AFSEL3\n 6602: #define GPIO_AFRL_AFRL4                      GPIO_AFRL_AFSEL4\n 6603: #define GPIO_AFRL_AFRL5                      GPIO_AFRL_AFSEL5\n 6604: #define GPIO_AFRL_AFRL6                      GPIO_AFRL_AFSEL6\n 6605: #define GPIO_AFRL_AFRL7                      GPIO_AFRL_AFSEL7\n 6606  \n 6607  /****************** Bit definition for GPIO_AFRH register *********************/\n 6608: #define GPIO_AFRH_AFSEL8_Pos           (0U)\n 6609: #define GPIO_AFRH_AFSEL8_Msk           (0xFUL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x0000000F */\n 6610: #define GPIO_AFRH_AFSEL8               GPIO_AFRH_AFSEL8_Msk\n 6611: #define GPIO_AFRH_AFSEL8_0             (0x1UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000001 */\n 6612: #define GPIO_AFRH_AFSEL8_1             (0x2UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000002 */\n 6613: #define GPIO_AFRH_AFSEL8_2             (0x4UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000004 */\n 6614: #define GPIO_AFRH_AFSEL8_3             (0x8UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000008 */\n 6615: #define GPIO_AFRH_AFSEL9_Pos           (4U)\n 6616: #define GPIO_AFRH_AFSEL9_Msk           (0xFUL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x000000F0 */\n 6617: #define GPIO_AFRH_AFSEL9               GPIO_AFRH_AFSEL9_Msk\n 6618: #define GPIO_AFRH_AFSEL9_0             (0x1UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000010 */\n 6619: #define GPIO_AFRH_AFSEL9_1             (0x2UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000020 */\n 6620: #define GPIO_AFRH_AFSEL9_2             (0x4UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000040 */\n 6621: #define GPIO_AFRH_AFSEL9_3             (0x8UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000080 */\n 6622: #define GPIO_AFRH_AFSEL10_Pos          (8U)\n 6623: #define GPIO_AFRH_AFSEL10_Msk          (0xFUL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000F00 */\n 6624: #define GPIO_AFRH_AFSEL10              GPIO_AFRH_AFSEL10_Msk\n 6625: #define GPIO_AFRH_AFSEL10_0            (0x1UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000100 */\n 6626: #define GPIO_AFRH_AFSEL10_1            (0x2UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000200 */\n 6627: #define GPIO_AFRH_AFSEL10_2            (0x4UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000400 */\n 6628: #define GPIO_AFRH_AFSEL10_3            (0x8UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000800 */\n 6629: #define GPIO_AFRH_AFSEL11_Pos          (12U)\n 6630: #define GPIO_AFRH_AFSEL11_Msk          (0xFUL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x0000F000 */\n 6631: #define GPIO_AFRH_AFSEL11              GPIO_AFRH_AFSEL11_Msk\n 6632: #define GPIO_AFRH_AFSEL11_0            (0x1UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00001000 */\n 6633: #define GPIO_AFRH_AFSEL11_1            (0x2UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00002000 */\n 6634: #define GPIO_AFRH_AFSEL11_2            (0x4UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00004000 */\n 6635: #define GPIO_AFRH_AFSEL11_3            (0x8UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00008000 */\n 6636: #define GPIO_AFRH_AFSEL12_Pos          (16U)\n 6637: #define GPIO_AFRH_AFSEL12_Msk          (0xFUL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x000F0000 */\n 6638: #define GPIO_AFRH_AFSEL12              GPIO_AFRH_AFSEL12_Msk\n 6639: #define GPIO_AFRH_AFSEL12_0            (0x1UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00010000 */\n 6640: #define GPIO_AFRH_AFSEL12_1            (0x2UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00020000 */\n 6641: #define GPIO_AFRH_AFSEL12_2            (0x4UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00040000 */\n 6642: #define GPIO_AFRH_AFSEL12_3            (0x8UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00080000 */\n 6643: #define GPIO_AFRH_AFSEL13_Pos          (20U)\n 6644: #define GPIO_AFRH_AFSEL13_Msk          (0xFUL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00F00000 */\n 6645: #define GPIO_AFRH_AFSEL13              GPIO_AFRH_AFSEL13_Msk\n 6646: #define GPIO_AFRH_AFSEL13_0            (0x1UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00100000 */\n 6647: #define GPIO_AFRH_AFSEL13_1            (0x2UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00200000 */\n 6648: #define GPIO_AFRH_AFSEL13_2            (0x4UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00400000 */\n 6649: #define GPIO_AFRH_AFSEL13_3            (0x8UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00800000 */\n 6650: #define GPIO_AFRH_AFSEL14_Pos          (24U)\n 6651: #define GPIO_AFRH_AFSEL14_Msk          (0xFUL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x0F000000 */\n 6652: #define GPIO_AFRH_AFSEL14              GPIO_AFRH_AFSEL14_Msk\n 6653: #define GPIO_AFRH_AFSEL14_0            (0x1UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x01000000 */\n 6654: #define GPIO_AFRH_AFSEL14_1            (0x2UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x02000000 */\n 6655: #define GPIO_AFRH_AFSEL14_2            (0x4UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x04000000 */\n 6656: #define GPIO_AFRH_AFSEL14_3            (0x8UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x08000000 */\n 6657: #define GPIO_AFRH_AFSEL15_Pos          (28U)\n 6658: #define GPIO_AFRH_AFSEL15_Msk          (0xFUL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0xF0000000 */\n 6659: #define GPIO_AFRH_AFSEL15              GPIO_AFRH_AFSEL15_Msk\n 6660: #define GPIO_AFRH_AFSEL15_0            (0x1UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x10000000 */\n 6661: #define GPIO_AFRH_AFSEL15_1            (0x2UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x20000000 */\n 6662: #define GPIO_AFRH_AFSEL15_2            (0x4UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x40000000 */\n 6663: #define GPIO_AFRH_AFSEL15_3            (0x8UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x80000000 */\n 6664  \n 6665  /* Legacy defines */\n 6666: #define GPIO_AFRH_AFRH0                      GPIO_AFRH_AFSEL8\n 6667: #define GPIO_AFRH_AFRH1                      GPIO_AFRH_AFSEL9\n 6668: #define GPIO_AFRH_AFRH2                      GPIO_AFRH_AFSEL10\n 6669: #define GPIO_AFRH_AFRH3                      GPIO_AFRH_AFSEL11\n 6670: #define GPIO_AFRH_AFRH4                      GPIO_AFRH_AFSEL12\n 6671: #define GPIO_AFRH_AFRH5                      GPIO_AFRH_AFSEL13\n 6672: #define GPIO_AFRH_AFRH6                      GPIO_AFRH_AFSEL14\n 6673: #define GPIO_AFRH_AFRH7                      GPIO_AFRH_AFSEL15\n 6674  \n 6675  /******************  Bits definition for GPIO_BRR register  ******************/\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g474xx.h:\n 6676  \n 6677  /****************** Bit definition for GPIO_AFRL register *********************/\n 6678: #define GPIO_AFRL_AFSEL0_Pos           (0U)\n 6679: #define GPIO_AFRL_AFSEL0_Msk           (0xFUL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x0000000F */\n 6680: #define GPIO_AFRL_AFSEL0               GPIO_AFRL_AFSEL0_Msk\n 6681: #define GPIO_AFRL_AFSEL0_0             (0x1UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000001 */\n 6682: #define GPIO_AFRL_AFSEL0_1             (0x2UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000002 */\n 6683: #define GPIO_AFRL_AFSEL0_2             (0x4UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000004 */\n 6684: #define GPIO_AFRL_AFSEL0_3             (0x8UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000008 */\n 6685: #define GPIO_AFRL_AFSEL1_Pos           (4U)\n 6686: #define GPIO_AFRL_AFSEL1_Msk           (0xFUL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x000000F0 */\n 6687: #define GPIO_AFRL_AFSEL1               GPIO_AFRL_AFSEL1_Msk\n 6688: #define GPIO_AFRL_AFSEL1_0             (0x1UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000010 */\n 6689: #define GPIO_AFRL_AFSEL1_1             (0x2UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000020 */\n 6690: #define GPIO_AFRL_AFSEL1_2             (0x4UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000040 */\n 6691: #define GPIO_AFRL_AFSEL1_3             (0x8UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000080 */\n 6692: #define GPIO_AFRL_AFSEL2_Pos           (8U)\n 6693: #define GPIO_AFRL_AFSEL2_Msk           (0xFUL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000F00 */\n 6694: #define GPIO_AFRL_AFSEL2               GPIO_AFRL_AFSEL2_Msk\n 6695: #define GPIO_AFRL_AFSEL2_0             (0x1UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000100 */\n 6696: #define GPIO_AFRL_AFSEL2_1             (0x2UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000200 */\n 6697: #define GPIO_AFRL_AFSEL2_2             (0x4UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000400 */\n 6698: #define GPIO_AFRL_AFSEL2_3             (0x8UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000800 */\n 6699: #define GPIO_AFRL_AFSEL3_Pos           (12U)\n 6700: #define GPIO_AFRL_AFSEL3_Msk           (0xFUL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x0000F000 */\n 6701: #define GPIO_AFRL_AFSEL3               GPIO_AFRL_AFSEL3_Msk\n 6702: #define GPIO_AFRL_AFSEL3_0             (0x1UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00001000 */\n 6703: #define GPIO_AFRL_AFSEL3_1             (0x2UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00002000 */\n 6704: #define GPIO_AFRL_AFSEL3_2             (0x4UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00004000 */\n 6705: #define GPIO_AFRL_AFSEL3_3             (0x8UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00008000 */\n 6706: #define GPIO_AFRL_AFSEL4_Pos           (16U)\n 6707: #define GPIO_AFRL_AFSEL4_Msk           (0xFUL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x000F0000 */\n 6708: #define GPIO_AFRL_AFSEL4               GPIO_AFRL_AFSEL4_Msk\n 6709: #define GPIO_AFRL_AFSEL4_0             (0x1UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00010000 */\n 6710: #define GPIO_AFRL_AFSEL4_1             (0x2UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00020000 */\n 6711: #define GPIO_AFRL_AFSEL4_2             (0x4UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00040000 */\n 6712: #define GPIO_AFRL_AFSEL4_3             (0x8UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00080000 */\n 6713: #define GPIO_AFRL_AFSEL5_Pos           (20U)\n 6714: #define GPIO_AFRL_AFSEL5_Msk           (0xFUL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00F00000 */\n 6715: #define GPIO_AFRL_AFSEL5               GPIO_AFRL_AFSEL5_Msk\n 6716: #define GPIO_AFRL_AFSEL5_0             (0x1UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00100000 */\n 6717: #define GPIO_AFRL_AFSEL5_1             (0x2UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00200000 */\n 6718: #define GPIO_AFRL_AFSEL5_2             (0x4UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00400000 */\n 6719: #define GPIO_AFRL_AFSEL5_3             (0x8UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00800000 */\n 6720: #define GPIO_AFRL_AFSEL6_Pos           (24U)\n 6721: #define GPIO_AFRL_AFSEL6_Msk           (0xFUL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x0F000000 */\n 6722: #define GPIO_AFRL_AFSEL6               GPIO_AFRL_AFSEL6_Msk\n 6723: #define GPIO_AFRL_AFSEL6_0             (0x1UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x01000000 */\n 6724: #define GPIO_AFRL_AFSEL6_1             (0x2UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x02000000 */\n 6725: #define GPIO_AFRL_AFSEL6_2             (0x4UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x04000000 */\n 6726: #define GPIO_AFRL_AFSEL6_3             (0x8UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x08000000 */\n 6727: #define GPIO_AFRL_AFSEL7_Pos           (28U)\n 6728: #define GPIO_AFRL_AFSEL7_Msk           (0xFUL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0xF0000000 */\n 6729: #define GPIO_AFRL_AFSEL7               GPIO_AFRL_AFSEL7_Msk\n 6730: #define GPIO_AFRL_AFSEL7_0             (0x1UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x10000000 */\n 6731: #define GPIO_AFRL_AFSEL7_1             (0x2UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x20000000 */\n 6732: #define GPIO_AFRL_AFSEL7_2             (0x4UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x40000000 */\n 6733: #define GPIO_AFRL_AFSEL7_3             (0x8UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x80000000 */\n 6734  \n 6735  /* Legacy defines */\n 6736: #define GPIO_AFRL_AFRL0                      GPIO_AFRL_AFSEL0\n 6737: #define GPIO_AFRL_AFRL1                      GPIO_AFRL_AFSEL1\n 6738: #define GPIO_AFRL_AFRL2                      GPIO_AFRL_AFSEL2\n 6739: #define GPIO_AFRL_AFRL3                      GPIO_AFRL_AFSEL3\n 6740: #define GPIO_AFRL_AFRL4                      GPIO_AFRL_AFSEL4\n 6741: #define GPIO_AFRL_AFRL5                      GPIO_AFRL_AFSEL5\n 6742: #define GPIO_AFRL_AFRL6                      GPIO_AFRL_AFSEL6\n 6743: #define GPIO_AFRL_AFRL7                      GPIO_AFRL_AFSEL7\n 6744  \n 6745  /****************** Bit definition for GPIO_AFRH register *********************/\n 6746: #define GPIO_AFRH_AFSEL8_Pos           (0U)\n 6747: #define GPIO_AFRH_AFSEL8_Msk           (0xFUL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x0000000F */\n 6748: #define GPIO_AFRH_AFSEL8               GPIO_AFRH_AFSEL8_Msk\n 6749: #define GPIO_AFRH_AFSEL8_0             (0x1UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000001 */\n 6750: #define GPIO_AFRH_AFSEL8_1             (0x2UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000002 */\n 6751: #define GPIO_AFRH_AFSEL8_2             (0x4UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000004 */\n 6752: #define GPIO_AFRH_AFSEL8_3             (0x8UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000008 */\n 6753: #define GPIO_AFRH_AFSEL9_Pos           (4U)\n 6754: #define GPIO_AFRH_AFSEL9_Msk           (0xFUL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x000000F0 */\n 6755: #define GPIO_AFRH_AFSEL9               GPIO_AFRH_AFSEL9_Msk\n 6756: #define GPIO_AFRH_AFSEL9_0             (0x1UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000010 */\n 6757: #define GPIO_AFRH_AFSEL9_1             (0x2UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000020 */\n 6758: #define GPIO_AFRH_AFSEL9_2             (0x4UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000040 */\n 6759: #define GPIO_AFRH_AFSEL9_3             (0x8UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000080 */\n 6760: #define GPIO_AFRH_AFSEL10_Pos          (8U)\n 6761: #define GPIO_AFRH_AFSEL10_Msk          (0xFUL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000F00 */\n 6762: #define GPIO_AFRH_AFSEL10              GPIO_AFRH_AFSEL10_Msk\n 6763: #define GPIO_AFRH_AFSEL10_0            (0x1UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000100 */\n 6764: #define GPIO_AFRH_AFSEL10_1            (0x2UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000200 */\n 6765: #define GPIO_AFRH_AFSEL10_2            (0x4UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000400 */\n 6766: #define GPIO_AFRH_AFSEL10_3            (0x8UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000800 */\n 6767: #define GPIO_AFRH_AFSEL11_Pos          (12U)\n 6768: #define GPIO_AFRH_AFSEL11_Msk          (0xFUL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x0000F000 */\n 6769: #define GPIO_AFRH_AFSEL11              GPIO_AFRH_AFSEL11_Msk\n 6770: #define GPIO_AFRH_AFSEL11_0            (0x1UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00001000 */\n 6771: #define GPIO_AFRH_AFSEL11_1            (0x2UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00002000 */\n 6772: #define GPIO_AFRH_AFSEL11_2            (0x4UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00004000 */\n 6773: #define GPIO_AFRH_AFSEL11_3            (0x8UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00008000 */\n 6774: #define GPIO_AFRH_AFSEL12_Pos          (16U)\n 6775: #define GPIO_AFRH_AFSEL12_Msk          (0xFUL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x000F0000 */\n 6776: #define GPIO_AFRH_AFSEL12              GPIO_AFRH_AFSEL12_Msk\n 6777: #define GPIO_AFRH_AFSEL12_0            (0x1UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00010000 */\n 6778: #define GPIO_AFRH_AFSEL12_1            (0x2UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00020000 */\n 6779: #define GPIO_AFRH_AFSEL12_2            (0x4UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00040000 */\n 6780: #define GPIO_AFRH_AFSEL12_3            (0x8UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00080000 */\n 6781: #define GPIO_AFRH_AFSEL13_Pos          (20U)\n 6782: #define GPIO_AFRH_AFSEL13_Msk          (0xFUL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00F00000 */\n 6783: #define GPIO_AFRH_AFSEL13              GPIO_AFRH_AFSEL13_Msk\n 6784: #define GPIO_AFRH_AFSEL13_0            (0x1UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00100000 */\n 6785: #define GPIO_AFRH_AFSEL13_1            (0x2UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00200000 */\n 6786: #define GPIO_AFRH_AFSEL13_2            (0x4UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00400000 */\n 6787: #define GPIO_AFRH_AFSEL13_3            (0x8UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00800000 */\n 6788: #define GPIO_AFRH_AFSEL14_Pos          (24U)\n 6789: #define GPIO_AFRH_AFSEL14_Msk          (0xFUL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x0F000000 */\n 6790: #define GPIO_AFRH_AFSEL14              GPIO_AFRH_AFSEL14_Msk\n 6791: #define GPIO_AFRH_AFSEL14_0            (0x1UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x01000000 */\n 6792: #define GPIO_AFRH_AFSEL14_1            (0x2UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x02000000 */\n 6793: #define GPIO_AFRH_AFSEL14_2            (0x4UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x04000000 */\n 6794: #define GPIO_AFRH_AFSEL14_3            (0x8UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x08000000 */\n 6795: #define GPIO_AFRH_AFSEL15_Pos          (28U)\n 6796: #define GPIO_AFRH_AFSEL15_Msk          (0xFUL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0xF0000000 */\n 6797: #define GPIO_AFRH_AFSEL15              GPIO_AFRH_AFSEL15_Msk\n 6798: #define GPIO_AFRH_AFSEL15_0            (0x1UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x10000000 */\n 6799: #define GPIO_AFRH_AFSEL15_1            (0x2UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x20000000 */\n 6800: #define GPIO_AFRH_AFSEL15_2            (0x4UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x40000000 */\n 6801: #define GPIO_AFRH_AFSEL15_3            (0x8UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x80000000 */\n 6802  \n 6803  /* Legacy defines */\n 6804: #define GPIO_AFRH_AFRH0                      GPIO_AFRH_AFSEL8\n 6805: #define GPIO_AFRH_AFRH1                      GPIO_AFRH_AFSEL9\n 6806: #define GPIO_AFRH_AFRH2                      GPIO_AFRH_AFSEL10\n 6807: #define GPIO_AFRH_AFRH3                      GPIO_AFRH_AFSEL11\n 6808: #define GPIO_AFRH_AFRH4                      GPIO_AFRH_AFSEL12\n 6809: #define GPIO_AFRH_AFRH5                      GPIO_AFRH_AFSEL13\n 6810: #define GPIO_AFRH_AFRH6                      GPIO_AFRH_AFSEL14\n 6811: #define GPIO_AFRH_AFRH7                      GPIO_AFRH_AFSEL15\n 6812  \n 6813  /******************  Bits definition for GPIO_BRR register  ******************/\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g483xx.h:\n 6760  \n 6761  /****************** Bit definition for GPIO_AFRL register *********************/\n 6762: #define GPIO_AFRL_AFSEL0_Pos           (0U)\n 6763: #define GPIO_AFRL_AFSEL0_Msk           (0xFUL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x0000000F */\n 6764: #define GPIO_AFRL_AFSEL0               GPIO_AFRL_AFSEL0_Msk\n 6765: #define GPIO_AFRL_AFSEL0_0             (0x1UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000001 */\n 6766: #define GPIO_AFRL_AFSEL0_1             (0x2UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000002 */\n 6767: #define GPIO_AFRL_AFSEL0_2             (0x4UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000004 */\n 6768: #define GPIO_AFRL_AFSEL0_3             (0x8UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000008 */\n 6769: #define GPIO_AFRL_AFSEL1_Pos           (4U)\n 6770: #define GPIO_AFRL_AFSEL1_Msk           (0xFUL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x000000F0 */\n 6771: #define GPIO_AFRL_AFSEL1               GPIO_AFRL_AFSEL1_Msk\n 6772: #define GPIO_AFRL_AFSEL1_0             (0x1UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000010 */\n 6773: #define GPIO_AFRL_AFSEL1_1             (0x2UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000020 */\n 6774: #define GPIO_AFRL_AFSEL1_2             (0x4UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000040 */\n 6775: #define GPIO_AFRL_AFSEL1_3             (0x8UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000080 */\n 6776: #define GPIO_AFRL_AFSEL2_Pos           (8U)\n 6777: #define GPIO_AFRL_AFSEL2_Msk           (0xFUL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000F00 */\n 6778: #define GPIO_AFRL_AFSEL2               GPIO_AFRL_AFSEL2_Msk\n 6779: #define GPIO_AFRL_AFSEL2_0             (0x1UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000100 */\n 6780: #define GPIO_AFRL_AFSEL2_1             (0x2UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000200 */\n 6781: #define GPIO_AFRL_AFSEL2_2             (0x4UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000400 */\n 6782: #define GPIO_AFRL_AFSEL2_3             (0x8UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000800 */\n 6783: #define GPIO_AFRL_AFSEL3_Pos           (12U)\n 6784: #define GPIO_AFRL_AFSEL3_Msk           (0xFUL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x0000F000 */\n 6785: #define GPIO_AFRL_AFSEL3               GPIO_AFRL_AFSEL3_Msk\n 6786: #define GPIO_AFRL_AFSEL3_0             (0x1UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00001000 */\n 6787: #define GPIO_AFRL_AFSEL3_1             (0x2UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00002000 */\n 6788: #define GPIO_AFRL_AFSEL3_2             (0x4UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00004000 */\n 6789: #define GPIO_AFRL_AFSEL3_3             (0x8UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00008000 */\n 6790: #define GPIO_AFRL_AFSEL4_Pos           (16U)\n 6791: #define GPIO_AFRL_AFSEL4_Msk           (0xFUL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x000F0000 */\n 6792: #define GPIO_AFRL_AFSEL4               GPIO_AFRL_AFSEL4_Msk\n 6793: #define GPIO_AFRL_AFSEL4_0             (0x1UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00010000 */\n 6794: #define GPIO_AFRL_AFSEL4_1             (0x2UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00020000 */\n 6795: #define GPIO_AFRL_AFSEL4_2             (0x4UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00040000 */\n 6796: #define GPIO_AFRL_AFSEL4_3             (0x8UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00080000 */\n 6797: #define GPIO_AFRL_AFSEL5_Pos           (20U)\n 6798: #define GPIO_AFRL_AFSEL5_Msk           (0xFUL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00F00000 */\n 6799: #define GPIO_AFRL_AFSEL5               GPIO_AFRL_AFSEL5_Msk\n 6800: #define GPIO_AFRL_AFSEL5_0             (0x1UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00100000 */\n 6801: #define GPIO_AFRL_AFSEL5_1             (0x2UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00200000 */\n 6802: #define GPIO_AFRL_AFSEL5_2             (0x4UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00400000 */\n 6803: #define GPIO_AFRL_AFSEL5_3             (0x8UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00800000 */\n 6804: #define GPIO_AFRL_AFSEL6_Pos           (24U)\n 6805: #define GPIO_AFRL_AFSEL6_Msk           (0xFUL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x0F000000 */\n 6806: #define GPIO_AFRL_AFSEL6               GPIO_AFRL_AFSEL6_Msk\n 6807: #define GPIO_AFRL_AFSEL6_0             (0x1UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x01000000 */\n 6808: #define GPIO_AFRL_AFSEL6_1             (0x2UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x02000000 */\n 6809: #define GPIO_AFRL_AFSEL6_2             (0x4UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x04000000 */\n 6810: #define GPIO_AFRL_AFSEL6_3             (0x8UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x08000000 */\n 6811: #define GPIO_AFRL_AFSEL7_Pos           (28U)\n 6812: #define GPIO_AFRL_AFSEL7_Msk           (0xFUL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0xF0000000 */\n 6813: #define GPIO_AFRL_AFSEL7               GPIO_AFRL_AFSEL7_Msk\n 6814: #define GPIO_AFRL_AFSEL7_0             (0x1UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x10000000 */\n 6815: #define GPIO_AFRL_AFSEL7_1             (0x2UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x20000000 */\n 6816: #define GPIO_AFRL_AFSEL7_2             (0x4UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x40000000 */\n 6817: #define GPIO_AFRL_AFSEL7_3             (0x8UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x80000000 */\n 6818  \n 6819  /* Legacy defines */\n 6820: #define GPIO_AFRL_AFRL0                      GPIO_AFRL_AFSEL0\n 6821: #define GPIO_AFRL_AFRL1                      GPIO_AFRL_AFSEL1\n 6822: #define GPIO_AFRL_AFRL2                      GPIO_AFRL_AFSEL2\n 6823: #define GPIO_AFRL_AFRL3                      GPIO_AFRL_AFSEL3\n 6824: #define GPIO_AFRL_AFRL4                      GPIO_AFRL_AFSEL4\n 6825: #define GPIO_AFRL_AFRL5                      GPIO_AFRL_AFSEL5\n 6826: #define GPIO_AFRL_AFRL6                      GPIO_AFRL_AFSEL6\n 6827: #define GPIO_AFRL_AFRL7                      GPIO_AFRL_AFSEL7\n 6828  \n 6829  /****************** Bit definition for GPIO_AFRH register *********************/\n 6830: #define GPIO_AFRH_AFSEL8_Pos           (0U)\n 6831: #define GPIO_AFRH_AFSEL8_Msk           (0xFUL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x0000000F */\n 6832: #define GPIO_AFRH_AFSEL8               GPIO_AFRH_AFSEL8_Msk\n 6833: #define GPIO_AFRH_AFSEL8_0             (0x1UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000001 */\n 6834: #define GPIO_AFRH_AFSEL8_1             (0x2UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000002 */\n 6835: #define GPIO_AFRH_AFSEL8_2             (0x4UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000004 */\n 6836: #define GPIO_AFRH_AFSEL8_3             (0x8UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000008 */\n 6837: #define GPIO_AFRH_AFSEL9_Pos           (4U)\n 6838: #define GPIO_AFRH_AFSEL9_Msk           (0xFUL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x000000F0 */\n 6839: #define GPIO_AFRH_AFSEL9               GPIO_AFRH_AFSEL9_Msk\n 6840: #define GPIO_AFRH_AFSEL9_0             (0x1UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000010 */\n 6841: #define GPIO_AFRH_AFSEL9_1             (0x2UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000020 */\n 6842: #define GPIO_AFRH_AFSEL9_2             (0x4UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000040 */\n 6843: #define GPIO_AFRH_AFSEL9_3             (0x8UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000080 */\n 6844: #define GPIO_AFRH_AFSEL10_Pos          (8U)\n 6845: #define GPIO_AFRH_AFSEL10_Msk          (0xFUL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000F00 */\n 6846: #define GPIO_AFRH_AFSEL10              GPIO_AFRH_AFSEL10_Msk\n 6847: #define GPIO_AFRH_AFSEL10_0            (0x1UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000100 */\n 6848: #define GPIO_AFRH_AFSEL10_1            (0x2UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000200 */\n 6849: #define GPIO_AFRH_AFSEL10_2            (0x4UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000400 */\n 6850: #define GPIO_AFRH_AFSEL10_3            (0x8UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000800 */\n 6851: #define GPIO_AFRH_AFSEL11_Pos          (12U)\n 6852: #define GPIO_AFRH_AFSEL11_Msk          (0xFUL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x0000F000 */\n 6853: #define GPIO_AFRH_AFSEL11              GPIO_AFRH_AFSEL11_Msk\n 6854: #define GPIO_AFRH_AFSEL11_0            (0x1UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00001000 */\n 6855: #define GPIO_AFRH_AFSEL11_1            (0x2UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00002000 */\n 6856: #define GPIO_AFRH_AFSEL11_2            (0x4UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00004000 */\n 6857: #define GPIO_AFRH_AFSEL11_3            (0x8UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00008000 */\n 6858: #define GPIO_AFRH_AFSEL12_Pos          (16U)\n 6859: #define GPIO_AFRH_AFSEL12_Msk          (0xFUL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x000F0000 */\n 6860: #define GPIO_AFRH_AFSEL12              GPIO_AFRH_AFSEL12_Msk\n 6861: #define GPIO_AFRH_AFSEL12_0            (0x1UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00010000 */\n 6862: #define GPIO_AFRH_AFSEL12_1            (0x2UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00020000 */\n 6863: #define GPIO_AFRH_AFSEL12_2            (0x4UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00040000 */\n 6864: #define GPIO_AFRH_AFSEL12_3            (0x8UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00080000 */\n 6865: #define GPIO_AFRH_AFSEL13_Pos          (20U)\n 6866: #define GPIO_AFRH_AFSEL13_Msk          (0xFUL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00F00000 */\n 6867: #define GPIO_AFRH_AFSEL13              GPIO_AFRH_AFSEL13_Msk\n 6868: #define GPIO_AFRH_AFSEL13_0            (0x1UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00100000 */\n 6869: #define GPIO_AFRH_AFSEL13_1            (0x2UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00200000 */\n 6870: #define GPIO_AFRH_AFSEL13_2            (0x4UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00400000 */\n 6871: #define GPIO_AFRH_AFSEL13_3            (0x8UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00800000 */\n 6872: #define GPIO_AFRH_AFSEL14_Pos          (24U)\n 6873: #define GPIO_AFRH_AFSEL14_Msk          (0xFUL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x0F000000 */\n 6874: #define GPIO_AFRH_AFSEL14              GPIO_AFRH_AFSEL14_Msk\n 6875: #define GPIO_AFRH_AFSEL14_0            (0x1UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x01000000 */\n 6876: #define GPIO_AFRH_AFSEL14_1            (0x2UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x02000000 */\n 6877: #define GPIO_AFRH_AFSEL14_2            (0x4UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x04000000 */\n 6878: #define GPIO_AFRH_AFSEL14_3            (0x8UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x08000000 */\n 6879: #define GPIO_AFRH_AFSEL15_Pos          (28U)\n 6880: #define GPIO_AFRH_AFSEL15_Msk          (0xFUL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0xF0000000 */\n 6881: #define GPIO_AFRH_AFSEL15              GPIO_AFRH_AFSEL15_Msk\n 6882: #define GPIO_AFRH_AFSEL15_0            (0x1UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x10000000 */\n 6883: #define GPIO_AFRH_AFSEL15_1            (0x2UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x20000000 */\n 6884: #define GPIO_AFRH_AFSEL15_2            (0x4UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x40000000 */\n 6885: #define GPIO_AFRH_AFSEL15_3            (0x8UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x80000000 */\n 6886  \n 6887  /* Legacy defines */\n 6888: #define GPIO_AFRH_AFRH0                      GPIO_AFRH_AFSEL8\n 6889: #define GPIO_AFRH_AFRH1                      GPIO_AFRH_AFSEL9\n 6890: #define GPIO_AFRH_AFRH2                      GPIO_AFRH_AFSEL10\n 6891: #define GPIO_AFRH_AFRH3                      GPIO_AFRH_AFSEL11\n 6892: #define GPIO_AFRH_AFRH4                      GPIO_AFRH_AFSEL12\n 6893: #define GPIO_AFRH_AFRH5                      GPIO_AFRH_AFSEL13\n 6894: #define GPIO_AFRH_AFRH6                      GPIO_AFRH_AFSEL14\n 6895: #define GPIO_AFRH_AFRH7                      GPIO_AFRH_AFSEL15\n 6896  \n 6897  /******************  Bits definition for GPIO_BRR register  ******************/\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g484xx.h:\n 6898  \n 6899  /****************** Bit definition for GPIO_AFRL register *********************/\n 6900: #define GPIO_AFRL_AFSEL0_Pos           (0U)\n 6901: #define GPIO_AFRL_AFSEL0_Msk           (0xFUL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x0000000F */\n 6902: #define GPIO_AFRL_AFSEL0               GPIO_AFRL_AFSEL0_Msk\n 6903: #define GPIO_AFRL_AFSEL0_0             (0x1UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000001 */\n 6904: #define GPIO_AFRL_AFSEL0_1             (0x2UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000002 */\n 6905: #define GPIO_AFRL_AFSEL0_2             (0x4UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000004 */\n 6906: #define GPIO_AFRL_AFSEL0_3             (0x8UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000008 */\n 6907: #define GPIO_AFRL_AFSEL1_Pos           (4U)\n 6908: #define GPIO_AFRL_AFSEL1_Msk           (0xFUL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x000000F0 */\n 6909: #define GPIO_AFRL_AFSEL1               GPIO_AFRL_AFSEL1_Msk\n 6910: #define GPIO_AFRL_AFSEL1_0             (0x1UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000010 */\n 6911: #define GPIO_AFRL_AFSEL1_1             (0x2UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000020 */\n 6912: #define GPIO_AFRL_AFSEL1_2             (0x4UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000040 */\n 6913: #define GPIO_AFRL_AFSEL1_3             (0x8UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000080 */\n 6914: #define GPIO_AFRL_AFSEL2_Pos           (8U)\n 6915: #define GPIO_AFRL_AFSEL2_Msk           (0xFUL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000F00 */\n 6916: #define GPIO_AFRL_AFSEL2               GPIO_AFRL_AFSEL2_Msk\n 6917: #define GPIO_AFRL_AFSEL2_0             (0x1UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000100 */\n 6918: #define GPIO_AFRL_AFSEL2_1             (0x2UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000200 */\n 6919: #define GPIO_AFRL_AFSEL2_2             (0x4UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000400 */\n 6920: #define GPIO_AFRL_AFSEL2_3             (0x8UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000800 */\n 6921: #define GPIO_AFRL_AFSEL3_Pos           (12U)\n 6922: #define GPIO_AFRL_AFSEL3_Msk           (0xFUL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x0000F000 */\n 6923: #define GPIO_AFRL_AFSEL3               GPIO_AFRL_AFSEL3_Msk\n 6924: #define GPIO_AFRL_AFSEL3_0             (0x1UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00001000 */\n 6925: #define GPIO_AFRL_AFSEL3_1             (0x2UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00002000 */\n 6926: #define GPIO_AFRL_AFSEL3_2             (0x4UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00004000 */\n 6927: #define GPIO_AFRL_AFSEL3_3             (0x8UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00008000 */\n 6928: #define GPIO_AFRL_AFSEL4_Pos           (16U)\n 6929: #define GPIO_AFRL_AFSEL4_Msk           (0xFUL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x000F0000 */\n 6930: #define GPIO_AFRL_AFSEL4               GPIO_AFRL_AFSEL4_Msk\n 6931: #define GPIO_AFRL_AFSEL4_0             (0x1UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00010000 */\n 6932: #define GPIO_AFRL_AFSEL4_1             (0x2UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00020000 */\n 6933: #define GPIO_AFRL_AFSEL4_2             (0x4UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00040000 */\n 6934: #define GPIO_AFRL_AFSEL4_3             (0x8UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00080000 */\n 6935: #define GPIO_AFRL_AFSEL5_Pos           (20U)\n 6936: #define GPIO_AFRL_AFSEL5_Msk           (0xFUL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00F00000 */\n 6937: #define GPIO_AFRL_AFSEL5               GPIO_AFRL_AFSEL5_Msk\n 6938: #define GPIO_AFRL_AFSEL5_0             (0x1UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00100000 */\n 6939: #define GPIO_AFRL_AFSEL5_1             (0x2UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00200000 */\n 6940: #define GPIO_AFRL_AFSEL5_2             (0x4UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00400000 */\n 6941: #define GPIO_AFRL_AFSEL5_3             (0x8UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00800000 */\n 6942: #define GPIO_AFRL_AFSEL6_Pos           (24U)\n 6943: #define GPIO_AFRL_AFSEL6_Msk           (0xFUL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x0F000000 */\n 6944: #define GPIO_AFRL_AFSEL6               GPIO_AFRL_AFSEL6_Msk\n 6945: #define GPIO_AFRL_AFSEL6_0             (0x1UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x01000000 */\n 6946: #define GPIO_AFRL_AFSEL6_1             (0x2UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x02000000 */\n 6947: #define GPIO_AFRL_AFSEL6_2             (0x4UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x04000000 */\n 6948: #define GPIO_AFRL_AFSEL6_3             (0x8UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x08000000 */\n 6949: #define GPIO_AFRL_AFSEL7_Pos           (28U)\n 6950: #define GPIO_AFRL_AFSEL7_Msk           (0xFUL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0xF0000000 */\n 6951: #define GPIO_AFRL_AFSEL7               GPIO_AFRL_AFSEL7_Msk\n 6952: #define GPIO_AFRL_AFSEL7_0             (0x1UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x10000000 */\n 6953: #define GPIO_AFRL_AFSEL7_1             (0x2UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x20000000 */\n 6954: #define GPIO_AFRL_AFSEL7_2             (0x4UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x40000000 */\n 6955: #define GPIO_AFRL_AFSEL7_3             (0x8UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x80000000 */\n 6956  \n 6957  /* Legacy defines */\n 6958: #define GPIO_AFRL_AFRL0                      GPIO_AFRL_AFSEL0\n 6959: #define GPIO_AFRL_AFRL1                      GPIO_AFRL_AFSEL1\n 6960: #define GPIO_AFRL_AFRL2                      GPIO_AFRL_AFSEL2\n 6961: #define GPIO_AFRL_AFRL3                      GPIO_AFRL_AFSEL3\n 6962: #define GPIO_AFRL_AFRL4                      GPIO_AFRL_AFSEL4\n 6963: #define GPIO_AFRL_AFRL5                      GPIO_AFRL_AFSEL5\n 6964: #define GPIO_AFRL_AFRL6                      GPIO_AFRL_AFSEL6\n 6965: #define GPIO_AFRL_AFRL7                      GPIO_AFRL_AFSEL7\n 6966  \n 6967  /****************** Bit definition for GPIO_AFRH register *********************/\n 6968: #define GPIO_AFRH_AFSEL8_Pos           (0U)\n 6969: #define GPIO_AFRH_AFSEL8_Msk           (0xFUL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x0000000F */\n 6970: #define GPIO_AFRH_AFSEL8               GPIO_AFRH_AFSEL8_Msk\n 6971: #define GPIO_AFRH_AFSEL8_0             (0x1UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000001 */\n 6972: #define GPIO_AFRH_AFSEL8_1             (0x2UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000002 */\n 6973: #define GPIO_AFRH_AFSEL8_2             (0x4UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000004 */\n 6974: #define GPIO_AFRH_AFSEL8_3             (0x8UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000008 */\n 6975: #define GPIO_AFRH_AFSEL9_Pos           (4U)\n 6976: #define GPIO_AFRH_AFSEL9_Msk           (0xFUL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x000000F0 */\n 6977: #define GPIO_AFRH_AFSEL9               GPIO_AFRH_AFSEL9_Msk\n 6978: #define GPIO_AFRH_AFSEL9_0             (0x1UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000010 */\n 6979: #define GPIO_AFRH_AFSEL9_1             (0x2UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000020 */\n 6980: #define GPIO_AFRH_AFSEL9_2             (0x4UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000040 */\n 6981: #define GPIO_AFRH_AFSEL9_3             (0x8UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000080 */\n 6982: #define GPIO_AFRH_AFSEL10_Pos          (8U)\n 6983: #define GPIO_AFRH_AFSEL10_Msk          (0xFUL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000F00 */\n 6984: #define GPIO_AFRH_AFSEL10              GPIO_AFRH_AFSEL10_Msk\n 6985: #define GPIO_AFRH_AFSEL10_0            (0x1UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000100 */\n 6986: #define GPIO_AFRH_AFSEL10_1            (0x2UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000200 */\n 6987: #define GPIO_AFRH_AFSEL10_2            (0x4UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000400 */\n 6988: #define GPIO_AFRH_AFSEL10_3            (0x8UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000800 */\n 6989: #define GPIO_AFRH_AFSEL11_Pos          (12U)\n 6990: #define GPIO_AFRH_AFSEL11_Msk          (0xFUL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x0000F000 */\n 6991: #define GPIO_AFRH_AFSEL11              GPIO_AFRH_AFSEL11_Msk\n 6992: #define GPIO_AFRH_AFSEL11_0            (0x1UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00001000 */\n 6993: #define GPIO_AFRH_AFSEL11_1            (0x2UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00002000 */\n 6994: #define GPIO_AFRH_AFSEL11_2            (0x4UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00004000 */\n 6995: #define GPIO_AFRH_AFSEL11_3            (0x8UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00008000 */\n 6996: #define GPIO_AFRH_AFSEL12_Pos          (16U)\n 6997: #define GPIO_AFRH_AFSEL12_Msk          (0xFUL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x000F0000 */\n 6998: #define GPIO_AFRH_AFSEL12              GPIO_AFRH_AFSEL12_Msk\n 6999: #define GPIO_AFRH_AFSEL12_0            (0x1UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00010000 */\n 7000: #define GPIO_AFRH_AFSEL12_1            (0x2UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00020000 */\n 7001: #define GPIO_AFRH_AFSEL12_2            (0x4UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00040000 */\n 7002: #define GPIO_AFRH_AFSEL12_3            (0x8UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00080000 */\n 7003: #define GPIO_AFRH_AFSEL13_Pos          (20U)\n 7004: #define GPIO_AFRH_AFSEL13_Msk          (0xFUL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00F00000 */\n 7005: #define GPIO_AFRH_AFSEL13              GPIO_AFRH_AFSEL13_Msk\n 7006: #define GPIO_AFRH_AFSEL13_0            (0x1UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00100000 */\n 7007: #define GPIO_AFRH_AFSEL13_1            (0x2UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00200000 */\n 7008: #define GPIO_AFRH_AFSEL13_2            (0x4UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00400000 */\n 7009: #define GPIO_AFRH_AFSEL13_3            (0x8UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00800000 */\n 7010: #define GPIO_AFRH_AFSEL14_Pos          (24U)\n 7011: #define GPIO_AFRH_AFSEL14_Msk          (0xFUL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x0F000000 */\n 7012: #define GPIO_AFRH_AFSEL14              GPIO_AFRH_AFSEL14_Msk\n 7013: #define GPIO_AFRH_AFSEL14_0            (0x1UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x01000000 */\n 7014: #define GPIO_AFRH_AFSEL14_1            (0x2UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x02000000 */\n 7015: #define GPIO_AFRH_AFSEL14_2            (0x4UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x04000000 */\n 7016: #define GPIO_AFRH_AFSEL14_3            (0x8UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x08000000 */\n 7017: #define GPIO_AFRH_AFSEL15_Pos          (28U)\n 7018: #define GPIO_AFRH_AFSEL15_Msk          (0xFUL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0xF0000000 */\n 7019: #define GPIO_AFRH_AFSEL15              GPIO_AFRH_AFSEL15_Msk\n 7020: #define GPIO_AFRH_AFSEL15_0            (0x1UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x10000000 */\n 7021: #define GPIO_AFRH_AFSEL15_1            (0x2UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x20000000 */\n 7022: #define GPIO_AFRH_AFSEL15_2            (0x4UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x40000000 */\n 7023: #define GPIO_AFRH_AFSEL15_3            (0x8UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x80000000 */\n 7024  \n 7025  /* Legacy defines */\n 7026: #define GPIO_AFRH_AFRH0                      GPIO_AFRH_AFSEL8\n 7027: #define GPIO_AFRH_AFRH1                      GPIO_AFRH_AFSEL9\n 7028: #define GPIO_AFRH_AFRH2                      GPIO_AFRH_AFSEL10\n 7029: #define GPIO_AFRH_AFRH3                      GPIO_AFRH_AFSEL11\n 7030: #define GPIO_AFRH_AFRH4                      GPIO_AFRH_AFSEL12\n 7031: #define GPIO_AFRH_AFRH5                      GPIO_AFRH_AFSEL13\n 7032: #define GPIO_AFRH_AFRH6                      GPIO_AFRH_AFSEL14\n 7033: #define GPIO_AFRH_AFRH7                      GPIO_AFRH_AFSEL15\n 7034  \n 7035  /******************  Bits definition for GPIO_BRR register  ******************/\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32gbk1cb.h:\n 5776  \n 5777  /****************** Bit definition for GPIO_AFRL register *********************/\n 5778: #define GPIO_AFRL_AFSEL0_Pos           (0U)\n 5779: #define GPIO_AFRL_AFSEL0_Msk           (0xFUL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x0000000F */\n 5780: #define GPIO_AFRL_AFSEL0               GPIO_AFRL_AFSEL0_Msk\n 5781: #define GPIO_AFRL_AFSEL0_0             (0x1UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000001 */\n 5782: #define GPIO_AFRL_AFSEL0_1             (0x2UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000002 */\n 5783: #define GPIO_AFRL_AFSEL0_2             (0x4UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000004 */\n 5784: #define GPIO_AFRL_AFSEL0_3             (0x8UL << GPIO_AFRL_AFSEL0_Pos)         /*!< 0x00000008 */\n 5785: #define GPIO_AFRL_AFSEL1_Pos           (4U)\n 5786: #define GPIO_AFRL_AFSEL1_Msk           (0xFUL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x000000F0 */\n 5787: #define GPIO_AFRL_AFSEL1               GPIO_AFRL_AFSEL1_Msk\n 5788: #define GPIO_AFRL_AFSEL1_0             (0x1UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000010 */\n 5789: #define GPIO_AFRL_AFSEL1_1             (0x2UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000020 */\n 5790: #define GPIO_AFRL_AFSEL1_2             (0x4UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000040 */\n 5791: #define GPIO_AFRL_AFSEL1_3             (0x8UL << GPIO_AFRL_AFSEL1_Pos)         /*!< 0x00000080 */\n 5792: #define GPIO_AFRL_AFSEL2_Pos           (8U)\n 5793: #define GPIO_AFRL_AFSEL2_Msk           (0xFUL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000F00 */\n 5794: #define GPIO_AFRL_AFSEL2               GPIO_AFRL_AFSEL2_Msk\n 5795: #define GPIO_AFRL_AFSEL2_0             (0x1UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000100 */\n 5796: #define GPIO_AFRL_AFSEL2_1             (0x2UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000200 */\n 5797: #define GPIO_AFRL_AFSEL2_2             (0x4UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000400 */\n 5798: #define GPIO_AFRL_AFSEL2_3             (0x8UL << GPIO_AFRL_AFSEL2_Pos)         /*!< 0x00000800 */\n 5799: #define GPIO_AFRL_AFSEL3_Pos           (12U)\n 5800: #define GPIO_AFRL_AFSEL3_Msk           (0xFUL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x0000F000 */\n 5801: #define GPIO_AFRL_AFSEL3               GPIO_AFRL_AFSEL3_Msk\n 5802: #define GPIO_AFRL_AFSEL3_0             (0x1UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00001000 */\n 5803: #define GPIO_AFRL_AFSEL3_1             (0x2UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00002000 */\n 5804: #define GPIO_AFRL_AFSEL3_2             (0x4UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00004000 */\n 5805: #define GPIO_AFRL_AFSEL3_3             (0x8UL << GPIO_AFRL_AFSEL3_Pos)         /*!< 0x00008000 */\n 5806: #define GPIO_AFRL_AFSEL4_Pos           (16U)\n 5807: #define GPIO_AFRL_AFSEL4_Msk           (0xFUL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x000F0000 */\n 5808: #define GPIO_AFRL_AFSEL4               GPIO_AFRL_AFSEL4_Msk\n 5809: #define GPIO_AFRL_AFSEL4_0             (0x1UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00010000 */\n 5810: #define GPIO_AFRL_AFSEL4_1             (0x2UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00020000 */\n 5811: #define GPIO_AFRL_AFSEL4_2             (0x4UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00040000 */\n 5812: #define GPIO_AFRL_AFSEL4_3             (0x8UL << GPIO_AFRL_AFSEL4_Pos)         /*!< 0x00080000 */\n 5813: #define GPIO_AFRL_AFSEL5_Pos           (20U)\n 5814: #define GPIO_AFRL_AFSEL5_Msk           (0xFUL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00F00000 */\n 5815: #define GPIO_AFRL_AFSEL5               GPIO_AFRL_AFSEL5_Msk\n 5816: #define GPIO_AFRL_AFSEL5_0             (0x1UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00100000 */\n 5817: #define GPIO_AFRL_AFSEL5_1             (0x2UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00200000 */\n 5818: #define GPIO_AFRL_AFSEL5_2             (0x4UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00400000 */\n 5819: #define GPIO_AFRL_AFSEL5_3             (0x8UL << GPIO_AFRL_AFSEL5_Pos)         /*!< 0x00800000 */\n 5820: #define GPIO_AFRL_AFSEL6_Pos           (24U)\n 5821: #define GPIO_AFRL_AFSEL6_Msk           (0xFUL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x0F000000 */\n 5822: #define GPIO_AFRL_AFSEL6               GPIO_AFRL_AFSEL6_Msk\n 5823: #define GPIO_AFRL_AFSEL6_0             (0x1UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x01000000 */\n 5824: #define GPIO_AFRL_AFSEL6_1             (0x2UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x02000000 */\n 5825: #define GPIO_AFRL_AFSEL6_2             (0x4UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x04000000 */\n 5826: #define GPIO_AFRL_AFSEL6_3             (0x8UL << GPIO_AFRL_AFSEL6_Pos)         /*!< 0x08000000 */\n 5827: #define GPIO_AFRL_AFSEL7_Pos           (28U)\n 5828: #define GPIO_AFRL_AFSEL7_Msk           (0xFUL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0xF0000000 */\n 5829: #define GPIO_AFRL_AFSEL7               GPIO_AFRL_AFSEL7_Msk\n 5830: #define GPIO_AFRL_AFSEL7_0             (0x1UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x10000000 */\n 5831: #define GPIO_AFRL_AFSEL7_1             (0x2UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x20000000 */\n 5832: #define GPIO_AFRL_AFSEL7_2             (0x4UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x40000000 */\n 5833: #define GPIO_AFRL_AFSEL7_3             (0x8UL << GPIO_AFRL_AFSEL7_Pos)         /*!< 0x80000000 */\n 5834  \n 5835  /* Legacy defines */\n 5836: #define GPIO_AFRL_AFRL0                      GPIO_AFRL_AFSEL0\n 5837: #define GPIO_AFRL_AFRL1                      GPIO_AFRL_AFSEL1\n 5838: #define GPIO_AFRL_AFRL2                      GPIO_AFRL_AFSEL2\n 5839: #define GPIO_AFRL_AFRL3                      GPIO_AFRL_AFSEL3\n 5840: #define GPIO_AFRL_AFRL4                      GPIO_AFRL_AFSEL4\n 5841: #define GPIO_AFRL_AFRL5                      GPIO_AFRL_AFSEL5\n 5842: #define GPIO_AFRL_AFRL6                      GPIO_AFRL_AFSEL6\n 5843: #define GPIO_AFRL_AFRL7                      GPIO_AFRL_AFSEL7\n 5844  \n 5845  /****************** Bit definition for GPIO_AFRH register *********************/\n 5846: #define GPIO_AFRH_AFSEL8_Pos           (0U)\n 5847: #define GPIO_AFRH_AFSEL8_Msk           (0xFUL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x0000000F */\n 5848: #define GPIO_AFRH_AFSEL8               GPIO_AFRH_AFSEL8_Msk\n 5849: #define GPIO_AFRH_AFSEL8_0             (0x1UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000001 */\n 5850: #define GPIO_AFRH_AFSEL8_1             (0x2UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000002 */\n 5851: #define GPIO_AFRH_AFSEL8_2             (0x4UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000004 */\n 5852: #define GPIO_AFRH_AFSEL8_3             (0x8UL << GPIO_AFRH_AFSEL8_Pos)         /*!< 0x00000008 */\n 5853: #define GPIO_AFRH_AFSEL9_Pos           (4U)\n 5854: #define GPIO_AFRH_AFSEL9_Msk           (0xFUL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x000000F0 */\n 5855: #define GPIO_AFRH_AFSEL9               GPIO_AFRH_AFSEL9_Msk\n 5856: #define GPIO_AFRH_AFSEL9_0             (0x1UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000010 */\n 5857: #define GPIO_AFRH_AFSEL9_1             (0x2UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000020 */\n 5858: #define GPIO_AFRH_AFSEL9_2             (0x4UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000040 */\n 5859: #define GPIO_AFRH_AFSEL9_3             (0x8UL << GPIO_AFRH_AFSEL9_Pos)         /*!< 0x00000080 */\n 5860: #define GPIO_AFRH_AFSEL10_Pos          (8U)\n 5861: #define GPIO_AFRH_AFSEL10_Msk          (0xFUL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000F00 */\n 5862: #define GPIO_AFRH_AFSEL10              GPIO_AFRH_AFSEL10_Msk\n 5863: #define GPIO_AFRH_AFSEL10_0            (0x1UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000100 */\n 5864: #define GPIO_AFRH_AFSEL10_1            (0x2UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000200 */\n 5865: #define GPIO_AFRH_AFSEL10_2            (0x4UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000400 */\n 5866: #define GPIO_AFRH_AFSEL10_3            (0x8UL << GPIO_AFRH_AFSEL10_Pos)        /*!< 0x00000800 */\n 5867: #define GPIO_AFRH_AFSEL11_Pos          (12U)\n 5868: #define GPIO_AFRH_AFSEL11_Msk          (0xFUL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x0000F000 */\n 5869: #define GPIO_AFRH_AFSEL11              GPIO_AFRH_AFSEL11_Msk\n 5870: #define GPIO_AFRH_AFSEL11_0            (0x1UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00001000 */\n 5871: #define GPIO_AFRH_AFSEL11_1            (0x2UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00002000 */\n 5872: #define GPIO_AFRH_AFSEL11_2            (0x4UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00004000 */\n 5873: #define GPIO_AFRH_AFSEL11_3            (0x8UL << GPIO_AFRH_AFSEL11_Pos)        /*!< 0x00008000 */\n 5874: #define GPIO_AFRH_AFSEL12_Pos          (16U)\n 5875: #define GPIO_AFRH_AFSEL12_Msk          (0xFUL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x000F0000 */\n 5876: #define GPIO_AFRH_AFSEL12              GPIO_AFRH_AFSEL12_Msk\n 5877: #define GPIO_AFRH_AFSEL12_0            (0x1UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00010000 */\n 5878: #define GPIO_AFRH_AFSEL12_1            (0x2UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00020000 */\n 5879: #define GPIO_AFRH_AFSEL12_2            (0x4UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00040000 */\n 5880: #define GPIO_AFRH_AFSEL12_3            (0x8UL << GPIO_AFRH_AFSEL12_Pos)        /*!< 0x00080000 */\n 5881: #define GPIO_AFRH_AFSEL13_Pos          (20U)\n 5882: #define GPIO_AFRH_AFSEL13_Msk          (0xFUL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00F00000 */\n 5883: #define GPIO_AFRH_AFSEL13              GPIO_AFRH_AFSEL13_Msk\n 5884: #define GPIO_AFRH_AFSEL13_0            (0x1UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00100000 */\n 5885: #define GPIO_AFRH_AFSEL13_1            (0x2UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00200000 */\n 5886: #define GPIO_AFRH_AFSEL13_2            (0x4UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00400000 */\n 5887: #define GPIO_AFRH_AFSEL13_3            (0x8UL << GPIO_AFRH_AFSEL13_Pos)        /*!< 0x00800000 */\n 5888: #define GPIO_AFRH_AFSEL14_Pos          (24U)\n 5889: #define GPIO_AFRH_AFSEL14_Msk          (0xFUL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x0F000000 */\n 5890: #define GPIO_AFRH_AFSEL14              GPIO_AFRH_AFSEL14_Msk\n 5891: #define GPIO_AFRH_AFSEL14_0            (0x1UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x01000000 */\n 5892: #define GPIO_AFRH_AFSEL14_1            (0x2UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x02000000 */\n 5893: #define GPIO_AFRH_AFSEL14_2            (0x4UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x04000000 */\n 5894: #define GPIO_AFRH_AFSEL14_3            (0x8UL << GPIO_AFRH_AFSEL14_Pos)        /*!< 0x08000000 */\n 5895: #define GPIO_AFRH_AFSEL15_Pos          (28U)\n 5896: #define GPIO_AFRH_AFSEL15_Msk          (0xFUL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0xF0000000 */\n 5897: #define GPIO_AFRH_AFSEL15              GPIO_AFRH_AFSEL15_Msk\n 5898: #define GPIO_AFRH_AFSEL15_0            (0x1UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x10000000 */\n 5899: #define GPIO_AFRH_AFSEL15_1            (0x2UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x20000000 */\n 5900: #define GPIO_AFRH_AFSEL15_2            (0x4UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x40000000 */\n 5901: #define GPIO_AFRH_AFSEL15_3            (0x8UL << GPIO_AFRH_AFSEL15_Pos)        /*!< 0x80000000 */\n 5902  \n 5903  /* Legacy defines */\n 5904: #define GPIO_AFRH_AFRH0                      GPIO_AFRH_AFSEL8\n 5905: #define GPIO_AFRH_AFRH1                      GPIO_AFRH_AFSEL9\n 5906: #define GPIO_AFRH_AFRH2                      GPIO_AFRH_AFSEL10\n 5907: #define GPIO_AFRH_AFRH3                      GPIO_AFRH_AFSEL11\n 5908: #define GPIO_AFRH_AFRH4                      GPIO_AFRH_AFSEL12\n 5909: #define GPIO_AFRH_AFRH5                      GPIO_AFRH_AFSEL13\n 5910: #define GPIO_AFRH_AFRH6                      GPIO_AFRH_AFSEL14\n 5911: #define GPIO_AFRH_AFRH7                      GPIO_AFRH_AFSEL15\n 5912  \n 5913  /******************  Bits definition for GPIO_BRR register  ******************/\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h:\n  569  __STATIC_INLINE void LL_GPIO_SetAFPin_0_7(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Alternate)\n  570  {\n  571:   MODIFY_REG(GPIOx->AFR[0], (GPIO_AFRL_AFSEL0 << (POSITION_VAL(Pin) * 4U)),\n  572               (Alternate << (POSITION_VAL(Pin) * 4U)));\n  573  }\n  ...\n  607  {\n  608    return (uint32_t)(READ_BIT(GPIOx->AFR[0],\n  609:                              (GPIO_AFRL_AFSEL0 << (POSITION_VAL(Pin) * 4U))) >> (POSITION_VAL(Pin) * 4U));\n  610  }\n  611  \n  ...\n  646  __STATIC_INLINE void LL_GPIO_SetAFPin_8_15(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Alternate)\n  647  {\n  648:   MODIFY_REG(GPIOx->AFR[1], (GPIO_AFRH_AFSEL8 << (POSITION_VAL(Pin >> 8U) * 4U)),\n  649               (Alternate << (POSITION_VAL(Pin >> 8U) * 4U)));\n  650  }\n  ...\n  685  {\n  686    return (uint32_t)(READ_BIT(GPIOx->AFR[1],\n  687:                              (GPIO_AFRH_AFSEL8 << (POSITION_VAL(Pin >> 8U) * 4U))) >> (POSITION_VAL(Pin >> 8U) * 4U));\n  688  }\n  689  \n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Inc/Legacy/stm32_hal_legacy.h:\n  582  #if defined (STM32H743xx) || defined (STM32H753xx)  || defined (STM32H750xx) || defined (STM32H742xx) || \\\n  583      defined (STM32H745xx) || defined (STM32H755xx)  || defined (STM32H747xx) || defined (STM32H757xx)\n  584: #define GPIO_AF10_OTG2_HS  GPIO_AF10_OTG2_FS\n  585: #define GPIO_AF10_OTG1_FS  GPIO_AF10_OTG1_HS\n  586: #define GPIO_AF12_OTG2_FS  GPIO_AF12_OTG1_FS\n  587  #endif /*STM32H743xx || STM32H753xx || STM32H750xx || STM32H742xx || STM32H745xx || STM32H755xx || STM32H747xx || STM32H757xx */\n  588  #endif /* STM32H7 */\n  ...\n  612  #endif /* STM32F0 || STM32F3 || STM32F1 */\n  613  \n  614: #define GPIO_AF6_DFSDM                            GPIO_AF6_DFSDM1\n  615  /**\n  616    * @}\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Middlewares/USBDevice4Cube/Src/hal_usb.c:\n   34      GPIO_InitStruct.Pull = GPIO_NOPULL;\n   35      GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;\n   36:     GPIO_InitStruct.Alternate = GPIO_AF10_OTG_FS;\n   37      HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);\n   38  \n\n/Users/dog/Documents/electronics/stm32-nema17-servo/stm32-servo-firmware/src/usbd/hal_usb.c:\n   10          .Pull = GPIO_NOPULL,\n   11          .Speed = GPIO_SPEED_FREQ_VERY_HIGH,\n   12:         .Alternate = GPIO_AF10_OTG_FS,\n   13      };\n   14  \n\n1034 matches across 12 files\n\n\nSearching 1249 files for \"GPIO.*AF.*_FS\" (regex, case sensitive)\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Inc/Legacy/stm32_hal_legacy.h:\n  582  #if defined (STM32H743xx) || defined (STM32H753xx)  || defined (STM32H750xx) || defined (STM32H742xx) || \\\n  583      defined (STM32H745xx) || defined (STM32H755xx)  || defined (STM32H747xx) || defined (STM32H757xx)\n  584: #define GPIO_AF10_OTG2_HS  GPIO_AF10_OTG2_FS\n  585: #define GPIO_AF10_OTG1_FS  GPIO_AF10_OTG1_HS\n  586: #define GPIO_AF12_OTG2_FS  GPIO_AF12_OTG1_FS\n  587  #endif /*STM32H743xx || STM32H753xx || STM32H750xx || STM32H742xx || STM32H745xx || STM32H755xx || STM32H747xx || STM32H757xx */\n  588  #endif /* STM32H7 */\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Middlewares/USBDevice4Cube/Src/hal_usb.c:\n   34      GPIO_InitStruct.Pull = GPIO_NOPULL;\n   35      GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;\n   36:     GPIO_InitStruct.Alternate = GPIO_AF10_OTG_FS;\n   37      HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);\n   38  \n\n/Users/dog/Documents/electronics/stm32-nema17-servo/stm32-servo-firmware/src/usbd/hal_usb.c:\n   10          .Pull = GPIO_NOPULL,\n   11          .Speed = GPIO_SPEED_FREQ_VERY_HIGH,\n   12:         .Alternate = GPIO_AF10_OTG_FS,\n   13      };\n   14  \n\n5 matches across 3 files\n\n\nSearching 1249 files for \"GPIO.*AF.*_OTG\" (regex, case sensitive)\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Inc/Legacy/stm32_hal_legacy.h:\n  582  #if defined (STM32H743xx) || defined (STM32H753xx)  || defined (STM32H750xx) || defined (STM32H742xx) || \\\n  583      defined (STM32H745xx) || defined (STM32H755xx)  || defined (STM32H747xx) || defined (STM32H757xx)\n  584: #define GPIO_AF10_OTG2_HS  GPIO_AF10_OTG2_FS\n  585: #define GPIO_AF10_OTG1_FS  GPIO_AF10_OTG1_HS\n  586: #define GPIO_AF12_OTG2_FS  GPIO_AF12_OTG1_FS\n  587  #endif /*STM32H743xx || STM32H753xx || STM32H750xx || STM32H742xx || STM32H745xx || STM32H755xx || STM32H747xx || STM32H757xx */\n  588  #endif /* STM32H7 */\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Middlewares/USBDevice4Cube/Src/hal_usb.c:\n   34      GPIO_InitStruct.Pull = GPIO_NOPULL;\n   35      GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;\n   36:     GPIO_InitStruct.Alternate = GPIO_AF10_OTG_FS;\n   37      HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);\n   38  \n\n/Users/dog/Documents/electronics/stm32-nema17-servo/stm32-servo-firmware/src/usbd/hal_usb.c:\n   10          .Pull = GPIO_NOPULL,\n   11          .Speed = GPIO_SPEED_FREQ_VERY_HIGH,\n   12:         .Alternate = GPIO_AF10_OTG_FS,\n   13      };\n   14  \n\n5 matches across 3 files\n\n\nSearching 1249 files for \"GPIO.*AF.*_USB\" (regex, case sensitive)\n\n0 matches\n\nSearching 1249 files for \"HAL_PCD_Init\" (regex, case sensitive)\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_pcd.h:\n  216    * @{\n  217    */\n  218: HAL_StatusTypeDef HAL_PCD_Init(PCD_HandleTypeDef *hpcd);\n  219  HAL_StatusTypeDef HAL_PCD_DeInit(PCD_HandleTypeDef *hpcd);\n  220  void HAL_PCD_MspInit(PCD_HandleTypeDef *hpcd);\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pcd.c:\n   23       (#) Fill parameters of Init structure in HCD handle\n   24  \n   25:      (#) Call HAL_PCD_Init() API to initialize the PCD peripheral (Core, Device core, ...)\n   26  \n   27       (#) Initialize the PCD low level resources through the HAL_PCD_MspInit() API:\n   ..\n  118    * @retval HAL status\n  119    */\n  120: HAL_StatusTypeDef HAL_PCD_Init(PCD_HandleTypeDef *hpcd)\n  121  {\n  122    uint8_t i;\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Src/main.c:\n  852  //   hpcd_USB_FS.Init.lpm_enable = ENABLE;\n  853  //   hpcd_USB_FS.Init.battery_charging_enable = DISABLE;\n  854: //   if (HAL_PCD_Init(&hpcd_USB_FS) != HAL_OK)\n  855  //   {\n  856  //     Error_Handler();\n\n4 matches across 3 files\n\n\nSearching 1249 files for \"USB_TypeDef\" (regex, case sensitive)\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g431xx.h:\n  844    __IO uint16_t BCDR;            /*!< Battery Charging detector register,     Address offset: 0x58 */\n  845    __IO uint16_t RESERVEDE;       /*!< Reserved */\n  846: } USB_TypeDef;\n  847  \n  848  /**\n  ...\n 1087  #define I2C1                ((I2C_TypeDef *) I2C1_BASE)\n 1088  #define I2C2                ((I2C_TypeDef *) I2C2_BASE)\n 1089: #define USB                 ((USB_TypeDef *) USB_BASE)\n 1090  #define FDCAN1              ((FDCAN_GlobalTypeDef *) FDCAN1_BASE)\n 1091  #define FDCAN_CONFIG        ((FDCAN_Config_TypeDef *) FDCAN_CONFIG_BASE)\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g441xx.h:\n  845    __IO uint16_t BCDR;            /*!< Battery Charging detector register,     Address offset: 0x58 */\n  846    __IO uint16_t RESERVEDE;       /*!< Reserved */\n  847: } USB_TypeDef;\n  848  \n  849  /**\n  ...\n 1120  #define I2C1                ((I2C_TypeDef *) I2C1_BASE)\n 1121  #define I2C2                ((I2C_TypeDef *) I2C2_BASE)\n 1122: #define USB                 ((USB_TypeDef *) USB_BASE)\n 1123  #define FDCAN1              ((FDCAN_GlobalTypeDef *) FDCAN1_BASE)\n 1124  #define FDCAN_CONFIG        ((FDCAN_Config_TypeDef *) FDCAN_CONFIG_BASE)\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g471xx.h:\n  878    __IO uint16_t BCDR;            /*!< Battery Charging detector register,     Address offset: 0x58 */\n  879    __IO uint16_t RESERVEDE;       /*!< Reserved */\n  880: } USB_TypeDef;\n  881  \n  882  /**\n  ...\n 1138  #define I2C1                ((I2C_TypeDef *) I2C1_BASE)\n 1139  #define I2C2                ((I2C_TypeDef *) I2C2_BASE)\n 1140: #define USB                 ((USB_TypeDef *) USB_BASE)\n 1141  #define FDCAN1              ((FDCAN_GlobalTypeDef *) FDCAN1_BASE)\n 1142  #define FDCAN_CONFIG        ((FDCAN_Config_TypeDef *) FDCAN_CONFIG_BASE)\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g473xx.h:\n  941    __IO uint16_t BCDR;            /*!< Battery Charging detector register,     Address offset: 0x58 */\n  942    __IO uint16_t RESERVEDE;       /*!< Reserved */\n  943: } USB_TypeDef;\n  944  \n  945  /**\n  ...\n 1227  #define I2C1                ((I2C_TypeDef *) I2C1_BASE)\n 1228  #define I2C2                ((I2C_TypeDef *) I2C2_BASE)\n 1229: #define USB                 ((USB_TypeDef *) USB_BASE)\n 1230  #define FDCAN1              ((FDCAN_GlobalTypeDef *) FDCAN1_BASE)\n 1231  #define FDCAN_CONFIG        ((FDCAN_Config_TypeDef *) FDCAN_CONFIG_BASE)\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g474xx.h:\n  949    __IO uint16_t BCDR;            /*!< Battery Charging detector register,     Address offset: 0x58 */\n  950    __IO uint16_t RESERVEDE;       /*!< Reserved */\n  951: } USB_TypeDef;\n  952  \n  953  /**\n  ...\n 1354  #define I2C1                ((I2C_TypeDef *) I2C1_BASE)\n 1355  #define I2C2                ((I2C_TypeDef *) I2C2_BASE)\n 1356: #define USB                 ((USB_TypeDef *) USB_BASE)\n 1357  #define FDCAN1              ((FDCAN_GlobalTypeDef *) FDCAN1_BASE)\n 1358  #define FDCAN_CONFIG        ((FDCAN_Config_TypeDef *) FDCAN_CONFIG_BASE)\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g483xx.h:\n  942    __IO uint16_t BCDR;            /*!< Battery Charging detector register,     Address offset: 0x58 */\n  943    __IO uint16_t RESERVEDE;       /*!< Reserved */\n  944: } USB_TypeDef;\n  945  \n  946  /**\n  ...\n 1260  #define I2C1                ((I2C_TypeDef *) I2C1_BASE)\n 1261  #define I2C2                ((I2C_TypeDef *) I2C2_BASE)\n 1262: #define USB                 ((USB_TypeDef *) USB_BASE)\n 1263  #define FDCAN1              ((FDCAN_GlobalTypeDef *) FDCAN1_BASE)\n 1264  #define FDCAN_CONFIG        ((FDCAN_Config_TypeDef *) FDCAN_CONFIG_BASE)\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g484xx.h:\n  950    __IO uint16_t BCDR;            /*!< Battery Charging detector register,     Address offset: 0x58 */\n  951    __IO uint16_t RESERVEDE;       /*!< Reserved */\n  952: } USB_TypeDef;\n  953  \n  954  /**\n  ...\n 1387  #define I2C1                ((I2C_TypeDef *) I2C1_BASE)\n 1388  #define I2C2                ((I2C_TypeDef *) I2C2_BASE)\n 1389: #define USB                 ((USB_TypeDef *) USB_BASE)\n 1390  #define FDCAN1              ((FDCAN_GlobalTypeDef *) FDCAN1_BASE)\n 1391  #define FDCAN_CONFIG        ((FDCAN_Config_TypeDef *) FDCAN_CONFIG_BASE)\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32gbk1cb.h:\n  843    __IO uint16_t BCDR;            /*!< Battery Charging detector register,     Address offset: 0x58 */\n  844    __IO uint16_t RESERVEDE;       /*!< Reserved */\n  845: } USB_TypeDef;\n  846  \n  847  \n  ...\n 1074  #define I2C1                ((I2C_TypeDef *) I2C1_BASE)\n 1075  #define I2C2                ((I2C_TypeDef *) I2C2_BASE)\n 1076: #define USB                 ((USB_TypeDef *) USB_BASE)\n 1077  #define FDCAN1              ((FDCAN_GlobalTypeDef *) FDCAN1_BASE)\n 1078  #define FDCAN_CONFIG        ((FDCAN_Config_TypeDef *) FDCAN_CONFIG_BASE)\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_pcd.h:\n   86  \n   87  \n   88: typedef USB_TypeDef        PCD_TypeDef;\n   89  typedef USB_CfgTypeDef     PCD_InitTypeDef;\n   90  typedef USB_EPTypeDef      PCD_EPTypeDef;\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usb.h:\n  179  \n  180  \n  181: HAL_StatusTypeDef USB_CoreInit(USB_TypeDef *USBx, USB_CfgTypeDef cfg);\n  182: HAL_StatusTypeDef USB_DevInit(USB_TypeDef *USBx, USB_CfgTypeDef cfg);\n  183: HAL_StatusTypeDef USB_EnableGlobalInt(USB_TypeDef *USBx);\n  184: HAL_StatusTypeDef USB_DisableGlobalInt(USB_TypeDef *USBx);\n  185: HAL_StatusTypeDef USB_SetCurrentMode(USB_TypeDef *USBx, USB_ModeTypeDef mode);\n  186: HAL_StatusTypeDef USB_SetDevSpeed(USB_TypeDef *USBx, uint8_t speed);\n  187: HAL_StatusTypeDef USB_FlushRxFifo(USB_TypeDef *USBx);\n  188: HAL_StatusTypeDef USB_FlushTxFifo(USB_TypeDef *USBx, uint32_t num);\n  189: HAL_StatusTypeDef USB_ActivateEndpoint(USB_TypeDef *USBx, USB_EPTypeDef *ep);\n  190: HAL_StatusTypeDef USB_DeactivateEndpoint(USB_TypeDef *USBx, USB_EPTypeDef *ep);\n  191: HAL_StatusTypeDef USB_EPStartXfer(USB_TypeDef *USBx, USB_EPTypeDef *ep);\n  192: HAL_StatusTypeDef USB_WritePacket(USB_TypeDef *USBx, uint8_t *src, uint8_t ch_ep_num, uint16_t len);\n  193: void             *USB_ReadPacket(USB_TypeDef *USBx, uint8_t *dest, uint16_t len);\n  194: HAL_StatusTypeDef USB_EPSetStall(USB_TypeDef *USBx, USB_EPTypeDef *ep);\n  195: HAL_StatusTypeDef USB_EPClearStall(USB_TypeDef *USBx, USB_EPTypeDef *ep);\n  196: HAL_StatusTypeDef USB_SetDevAddress(USB_TypeDef *USBx, uint8_t address);\n  197: HAL_StatusTypeDef USB_DevConnect(USB_TypeDef *USBx);\n  198: HAL_StatusTypeDef USB_DevDisconnect(USB_TypeDef *USBx);\n  199: HAL_StatusTypeDef USB_StopDevice(USB_TypeDef *USBx);\n  200: HAL_StatusTypeDef USB_EP0_OutStart(USB_TypeDef *USBx, uint8_t *psetup);\n  201: uint32_t          USB_ReadInterrupts(USB_TypeDef *USBx);\n  202: uint32_t          USB_ReadDevAllOutEpInterrupt(USB_TypeDef *USBx);\n  203: uint32_t          USB_ReadDevOutEPInterrupt(USB_TypeDef *USBx, uint8_t epnum);\n  204: uint32_t          USB_ReadDevAllInEpInterrupt(USB_TypeDef *USBx);\n  205: uint32_t          USB_ReadDevInEPInterrupt(USB_TypeDef *USBx, uint8_t epnum);\n  206: void              USB_ClearInterrupts(USB_TypeDef *USBx, uint32_t interrupt);\n  207  \n  208: HAL_StatusTypeDef USB_ActivateRemoteWakeup(USB_TypeDef *USBx);\n  209: HAL_StatusTypeDef USB_DeActivateRemoteWakeup(USB_TypeDef *USBx);\n  210: void USB_WritePMA(USB_TypeDef  *USBx, uint8_t *pbUsrBuf, uint16_t wPMABufAddr, uint16_t wNBytes);\n  211: void USB_ReadPMA(USB_TypeDef  *USBx, uint8_t *pbUsrBuf, uint16_t wPMABufAddr, uint16_t wNBytes);\n  212  \n  213  /**\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pcd_ex.c:\n  123  HAL_StatusTypeDef HAL_PCDEx_ActivateBCD(PCD_HandleTypeDef *hpcd)\n  124  {\n  125:   USB_TypeDef *USBx = hpcd->Instance;\n  126    hpcd->battery_charging_active = 1U;\n  127  \n  ...\n  144  HAL_StatusTypeDef HAL_PCDEx_DeActivateBCD(PCD_HandleTypeDef *hpcd)\n  145  {\n  146:   USB_TypeDef *USBx = hpcd->Instance;\n  147    hpcd->battery_charging_active = 0U;\n  148  \n  ...\n  160  void HAL_PCDEx_BCD_VBUSDetect(PCD_HandleTypeDef *hpcd)\n  161  {\n  162:   USB_TypeDef *USBx = hpcd->Instance;\n  163    uint32_t tickstart = HAL_GetTick();\n  164  \n  ...\n  255  {\n  256  \n  257:   USB_TypeDef *USBx = hpcd->Instance;\n  258    hpcd->lpm_active = 1U;\n  259    hpcd->LPM_State = LPM_L0;\n  ...\n  272  HAL_StatusTypeDef HAL_PCDEx_DeActivateLPM(PCD_HandleTypeDef *hpcd)\n  273  {\n  274:   USB_TypeDef *USBx = hpcd->Instance;\n  275  \n  276    hpcd->lpm_active = 0U;\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_usb.c:\n   62    * @retval HAL status\n   63    */\n   64: HAL_StatusTypeDef USB_CoreInit(USB_TypeDef *USBx, USB_CfgTypeDef cfg)\n   65  {\n   66    /* Prevent unused argument(s) compilation warning */\n   ..\n   82    * @retval HAL status\n   83    */\n   84: HAL_StatusTypeDef USB_EnableGlobalInt(USB_TypeDef *USBx)\n   85  {\n   86    uint32_t winterruptmask;\n   ..\n  104    * @retval HAL status\n  105  */\n  106: HAL_StatusTypeDef USB_DisableGlobalInt(USB_TypeDef *USBx)\n  107  {\n  108    uint32_t winterruptmask;\n  ...\n  128    * @retval HAL status\n  129    */\n  130: HAL_StatusTypeDef USB_SetCurrentMode(USB_TypeDef *USBx, USB_ModeTypeDef mode)\n  131  {\n  132    /* Prevent unused argument(s) compilation warning */\n  ...\n  149    * @retval HAL status\n  150    */\n  151: HAL_StatusTypeDef USB_DevInit(USB_TypeDef *USBx, USB_CfgTypeDef cfg)\n  152  {\n  153    /* Prevent unused argument(s) compilation warning */\n  ...\n  180    * @retval  Hal status\n  181    */\n  182: HAL_StatusTypeDef USB_SetDevSpeed(USB_TypeDef *USBx, uint8_t speed)\n  183  {\n  184    /* Prevent unused argument(s) compilation warning */\n  ...\n  202    * @retval HAL status\n  203    */\n  204: HAL_StatusTypeDef USB_FlushTxFifo(USB_TypeDef *USBx, uint32_t num)\n  205  {\n  206    /* Prevent unused argument(s) compilation warning */\n  ...\n  221    * @retval HAL status\n  222    */\n  223: HAL_StatusTypeDef USB_FlushRxFifo(USB_TypeDef *USBx)\n  224  {\n  225    /* Prevent unused argument(s) compilation warning */\n  ...\n  240    * @retval HAL status\n  241    */\n  242: HAL_StatusTypeDef USB_ActivateEndpoint(USB_TypeDef *USBx, USB_EPTypeDef *ep)\n  243  {\n  244    HAL_StatusTypeDef ret = HAL_OK;\n  ...\n  356    * @retval HAL status\n  357    */\n  358: HAL_StatusTypeDef USB_DeactivateEndpoint(USB_TypeDef *USBx, USB_EPTypeDef *ep)\n  359  {\n  360    if (ep->doublebuffer == 0U)\n  ...\n  409    * @retval HAL status\n  410    */\n  411: HAL_StatusTypeDef USB_EPStartXfer(USB_TypeDef *USBx, USB_EPTypeDef *ep)\n  412  {\n  413    uint16_t pmabuffer;\n  ...\n  497    * @retval HAL status\n  498    */\n  499: HAL_StatusTypeDef USB_WritePacket(USB_TypeDef *USBx, uint8_t *src, uint8_t ch_ep_num, uint16_t len)\n  500  {\n  501    /* Prevent unused argument(s) compilation warning */\n  ...\n  519    * @retval pointer to destination buffer\n  520    */\n  521: void *USB_ReadPacket(USB_TypeDef *USBx, uint8_t *dest, uint16_t len)\n  522  {\n  523    /* Prevent unused argument(s) compilation warning */\n  ...\n  538    * @retval HAL status\n  539    */\n  540: HAL_StatusTypeDef USB_EPSetStall(USB_TypeDef *USBx, USB_EPTypeDef *ep)\n  541  {\n  542    if (ep->is_in != 0U)\n  ...\n  558    * @retval HAL status\n  559    */\n  560: HAL_StatusTypeDef USB_EPClearStall(USB_TypeDef *USBx, USB_EPTypeDef *ep)\n  561  {\n  562    if (ep->doublebuffer == 0U)\n  ...\n  589    * @retval HAL status\n  590    */\n  591: HAL_StatusTypeDef USB_StopDevice(USB_TypeDef *USBx)\n  592  {\n  593    /* disable all interrupts and force USB reset */\n  ...\n  610    * @retval HAL status\n  611    */\n  612: HAL_StatusTypeDef  USB_SetDevAddress(USB_TypeDef *USBx, uint8_t address)\n  613  {\n  614    if (address == 0U)\n  ...\n  626    * @retval HAL status\n  627    */\n  628: HAL_StatusTypeDef  USB_DevConnect(USB_TypeDef *USBx)\n  629  {\n  630    /* Enabling DP Pull-UP bit to Connect internal PU resistor on USB DP line */\n  ...\n  639    * @retval HAL status\n  640    */\n  641: HAL_StatusTypeDef  USB_DevDisconnect(USB_TypeDef *USBx)\n  642  {\n  643    /* Disable DP Pull-Up bit to disconnect the Internal PU resistor on USB DP line */\n  ...\n  652    * @retval HAL status\n  653    */\n  654: uint32_t  USB_ReadInterrupts(USB_TypeDef *USBx)\n  655  {\n  656    uint32_t tmpreg;\n  ...\n  665    * @retval HAL status\n  666    */\n  667: uint32_t USB_ReadDevAllOutEpInterrupt(USB_TypeDef *USBx)\n  668  {\n  669    /* Prevent unused argument(s) compilation warning */\n  ...\n  681    * @retval HAL status\n  682    */\n  683: uint32_t USB_ReadDevAllInEpInterrupt(USB_TypeDef *USBx)\n  684  {\n  685    /* Prevent unused argument(s) compilation warning */\n  ...\n  699    * @retval Device OUT EP Interrupt register\n  700    */\n  701: uint32_t USB_ReadDevOutEPInterrupt(USB_TypeDef *USBx, uint8_t epnum)\n  702  {\n  703    /* Prevent unused argument(s) compilation warning */\n  ...\n  718    * @retval Device IN EP Interrupt register\n  719    */\n  720: uint32_t USB_ReadDevInEPInterrupt(USB_TypeDef *USBx, uint8_t epnum)\n  721  {\n  722    /* Prevent unused argument(s) compilation warning */\n  ...\n  736    * @retval None\n  737    */\n  738: void  USB_ClearInterrupts(USB_TypeDef *USBx, uint32_t interrupt)\n  739  {\n  740    /* Prevent unused argument(s) compilation warning */\n  ...\n  753    * @retval HAL status\n  754    */\n  755: HAL_StatusTypeDef USB_EP0_OutStart(USB_TypeDef *USBx, uint8_t *psetup)\n  756  {\n  757    /* Prevent unused argument(s) compilation warning */\n  ...\n  770    * @retval HAL status\n  771    */\n  772: HAL_StatusTypeDef USB_ActivateRemoteWakeup(USB_TypeDef *USBx)\n  773  {\n  774    USBx->CNTR |= (uint16_t)USB_CNTR_RESUME;\n  ...\n  782    * @retval HAL status\n  783    */\n  784: HAL_StatusTypeDef USB_DeActivateRemoteWakeup(USB_TypeDef *USBx)\n  785  {\n  786    USBx->CNTR &= (uint16_t)(~USB_CNTR_RESUME);\n  ...\n  796    * @retval None\n  797    */\n  798: void USB_WritePMA(USB_TypeDef *USBx, uint8_t *pbUsrBuf, uint16_t wPMABufAddr, uint16_t wNBytes)\n  799  {\n  800    uint32_t n = ((uint32_t)wNBytes + 1U) >> 1;\n  ...\n  830    * @retval None\n  831    */\n  832: void USB_ReadPMA(USB_TypeDef *USBx, uint8_t *pbUsrBuf, uint16_t wPMABufAddr, uint16_t wNBytes)\n  833  {\n  834    uint32_t n = (uint32_t)wNBytes >> 1;\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Middlewares/USBDevice4Cube/XPD_USB/xpd_config.h:\n   35  \n   36  /* Replace type definitions */\n   37: #define USB_TypeDef                __USB_TypeDef\n   38  #define USB_OTG_GlobalTypeDef      __USB_OTG_GlobalTypeDef\n   39  #define USB_OTG_INEndpointTypeDef  __USB_OTG_INEndpointTypeDef\n   ..\n   46  #ifdef USB\n   47  #undef USB\n   48: #define USB ((__USB_TypeDef*)USB_BASE)\n   49  #endif\n   50  \n   ..\n   56  /* TODO Copy USB peripheral registers structures from a compatible device header */\n   57  \n   58: /* typedef of USB_TypeDef */\n   59  typedef struct {\n   60      union {\n   ..\n  164          __IO uint16_t w;\n  165      } BCDR;                                                 /*!< Battery Charging detector register,     Address offset: 0x58 */\n  166: } USB_TypeDef;\n  167  \n  168  /* AND/OR */\n\n87 matches across 13 files\n\n\nSearching 1250 files for \"0x5740\" (regex, case sensitive)\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/CMSIS/DSP/DSP_Lib_TestSuite/Common/src/transform_tests/transform_tests_common_data.c:\n 1178      0xA8A9B67B, 0xF5E7B9D4, 0xC7B70ACE, 0xA6EB6DB8, 0x8A22FBE2,\n 1179      0x3AFFDDA1, 0xFB61F7D5, 0xE057717B, 0x846D96CB, 0x20A4B400,\n 1180:     0x574089BB, 0x9F3D2DBD, 0xEEDDDB4B, 0x5E64EA6B, 0x6781DC90,\n 1181      0xCFD86A6, 0xA92441CD, 0xAC5DCCD6, 0xE6BB5582, 0x32FA6B3F,\n 1182      0x3ABB8A64, 0xA49D2003, 0xA965E430, 0xEC4053BB, 0x95859D40,\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/CMSIS/DSP/Source/TransformFunctions/arm_dct4_init_q15.c:\n 3694    (q15_t)0x5789, (q15_t)0x5785, (q15_t)0x5780, (q15_t)0x577c, (q15_t)0x5777, (q15_t)0x5772, (q15_t)0x576e, (q15_t)0x5769,\n 3695    (q15_t)0x5765, (q15_t)0x5760, (q15_t)0x575c, (q15_t)0x5757, (q15_t)0x5752, (q15_t)0x574e, (q15_t)0x5749, (q15_t)0x5745,\n 3696:   (q15_t)0x5740, (q15_t)0x573b, (q15_t)0x5737, (q15_t)0x5732, (q15_t)0x572e, (q15_t)0x5729, (q15_t)0x5724, (q15_t)0x5720,\n 3697    (q15_t)0x571b, (q15_t)0x5717, (q15_t)0x5712, (q15_t)0x570d, (q15_t)0x5709, (q15_t)0x5704, (q15_t)0x56ff, (q15_t)0x56fb,\n 3698    (q15_t)0x56f6, (q15_t)0x56f2, (q15_t)0x56ed, (q15_t)0x56e8, (q15_t)0x56e4, (q15_t)0x56df, (q15_t)0x56db, (q15_t)0x56d6,\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/CMSIS/DSP/Source/TransformFunctions/arm_dct4_init_q31.c:\n 6612    (q31_t)0x57653009, (q31_t)0x576098b7, (q31_t)0x575c0130, (q31_t)0x57576973, (q31_t)0x5752d180, (q31_t)0x574e3957,\n 6613      (q31_t)0x5749a0f9, (q31_t)0x57450864,\n 6614:   (q31_t)0x57406f9a, (q31_t)0x573bd69a, (q31_t)0x57373d64, (q31_t)0x5732a3f8, (q31_t)0x572e0a56, (q31_t)0x5729707f,\n 6615      (q31_t)0x5724d672, (q31_t)0x57203c2f,\n 6616    (q31_t)0x571ba1b7, (q31_t)0x57170708, (q31_t)0x57126c24, (q31_t)0x570dd10a, (q31_t)0x570935bb, (q31_t)0x57049a36,\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Middlewares/USBDevice4Cube/Src/usb_device.c:\n   32      .Product = {\n   33          .Name           = \"STM32 Virtual ComPort\",\n   34:         .ID             = 0x5740,\n   35          .Version.bcd    = 0x0100,\n   36      },\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/stm32-servo-firmware/src/usbd/usb_device.c:\n   24      .Product = {\n   25          .Name           = \"STM32-NEMA17\",\n   26:         .ID             = 0x5740,\n   27          .Version.bcd    = 0x0100,\n   28      },\n\n5 matches across 5 files\n\n\nSearching 1251 files for \"VENDOR\" (regex, case sensitive)\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_def.h:\n   84  #define  USB_REQ_TYPE_STANDARD                          0x00U\n   85  #define  USB_REQ_TYPE_CLASS                             0x20U\n   86: #define  USB_REQ_TYPE_VENDOR                            0x40U\n   87  #define  USB_REQ_TYPE_MASK                              0x60U\n   88  \n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Middlewares/ST/STM32_USB_Device_Library/Core/Src/usbd_ctlreq.c:\n  120    {\n  121      case USB_REQ_TYPE_CLASS:\n  122:     case USB_REQ_TYPE_VENDOR:\n  123        pdev->pClass->Setup(pdev, req);\n  124        break;\n  ...\n  184    {\n  185      case USB_REQ_TYPE_CLASS:\n  186:     case USB_REQ_TYPE_VENDOR:\n  187      case USB_REQ_TYPE_STANDARD:\n  188        switch (pdev->dev_state)\n  ...\n  239    {\n  240      case USB_REQ_TYPE_CLASS:\n  241:     case USB_REQ_TYPE_VENDOR:\n  242        pdev->pClass->Setup(pdev, req);\n  243        break;\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Middlewares/USBDevice/Class/MSC/usbd_msc.c:\n   32  #define MSC_SUBCLASS_LSDFS          0x07\n   33  #define MSC_SUBCLASS_IEEE1667       0x08\n   34: #define MSC_SUBCLASS_VENDOR         0xFF\n   35  \n   36  #define MSC_PROT_CBI_CCI            0x00\n   ..\n   38  #define MSC_PROT_BBB                0x50\n   39  #define MSC_PROT_UAS                0x62\n   40: #define MSC_PROT_VENDOR             0xFF\n   41  \n   42  #if (USBD_HS_SUPPORT == 1)\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Middlewares/USBDevice/Device/usbd_desc.c:\n   50      .idProduct          = 0xFFFF,\n   51      .bcdDevice          = 0xFFFF,\n   52:     .iManufacturer      = USBD_ISTR_VENDOR,\n   53      .iProduct           = USBD_ISTR_PRODUCT,\n   54  #if (USBD_SERIAL_BCD_SIZE > 0)\n   ..\n  227                  /* Otherwise Setup.Index == LangID of requested string */\n  228  \n  229:                 case USBD_ISTR_VENDOR:\n  230                      len = USBD_GetStringDesc(dev->Desc->Vendor.Name, data);\n  231                      break;\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Middlewares/USBDevice/Include/usb_types.h:\n  162      USB_REQ_TYPE_STANDARD   = 0, /*!< The request is specified by USB 2.0 standard */\n  163      USB_REQ_TYPE_CLASS      = 1, /*!< The request is specified by a standard USB class */\n  164:     USB_REQ_TYPE_VENDOR     = 2, /*!< The request is specified by product vendor */\n  165  }USB_RequestType;\n  166  \n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Middlewares/USBDevice/Include/usbd_dfu.h:\n  107      DFU_ERROR_FIRMWARE      = 0x0A, /*!< Device's firmware is corrupt. It cannot return to run-time\n  108                                           (non-DFU) operations. */\n  109:     DFU_ERROR_VENDOR        = 0x0B, /*!< iString indicates a vendor-specific error. */\n  110      DFU_ERROR_USB           = 0x0C, /*!< Device detected unexpected USB reset signaling. */\n  111      DFU_ERROR_POR           = 0x0D, /*!< Device detected unexpected power on reset. */\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Middlewares/USBDevice/Include/usbd_types.h:\n  114      USBD_ISTR_LANGID     = 0x00, /*!< Fixed by standard */\n  115      USBD_ISTR_INTERFACES,        /*!< Interfaces' names */\n  116:     USBD_ISTR_VENDOR     = 0x10, /*!< Vendor name */\n  117      USBD_ISTR_PRODUCT    = 0x20, /*!< Product name */\n  118      USBD_ISTR_SERIAL     = 0x30, /*!< Serial number string */\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Middlewares/USBDevice/Include/private/usbd_msc_private.h:\n   84      SCSI_SKEY_DATA_PROTECT      = 7,\n   85      SCSI_SKEY_BLANK_CHECK       = 8,\n   86:     SCSI_SKEY_VENDOR_SPECIFIC   = 9,\n   87      SCSI_SKEY_COPY_ABORTED      = 10,\n   88      SCSI_SKEY_ABORTED_COMMAND   = 11,\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/mechaduino-firmware/asf_mechaduino/usb/usb_atmel.h:\n  117  #define USB_PID_ATMEL_ASF_MSC_HIDS_CDC 0x2421\n  118  #define USB_PID_ATMEL_ASF_MSC_HIDKEYBOARD 0x2422\n  119: #define USB_PID_ATMEL_ASF_VENDOR_CLASS 0x2423\n  120  #define USB_PID_ATMEL_ASF_MSC_CDC 0x2424\n  121  #define USB_PID_ATMEL_ASF_TWO_CDC 0x2425\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/mechaduino-firmware/asf_mechaduino/usb/usb_protocol.h:\n   90  #define USB_REQT_TYPE_STANDARD (0 << 5) /*!< Standard request */\n   91  #define USB_REQT_TYPE_CLASS (1 << 5)    /*!< Class-specific request */\n   92: #define USB_REQT_TYPE_VENDOR (2 << 5)   /*!< Vendor-specific request */\n   93  #define USB_REQT_TYPE_MASK (3 << 5)     /*!< Mask */\n   94  \n\n/Users/dog/Library/Arduino15/packages/arduino/hardware/samd/1.8.3/bootloaders/zero/board_driver_jtag.c:\n  536  \t  jtag.id = -1;\n  537  \t  jtag.lastVir = -1;\n  538: \t  if (((record >> 8) & 0x7ff) == JTAG_VENDOR_ID)\n  539  \t  {\n  540  \t\tjtag.nSlaves = (record >> 19) & 0xff; // number of jtag slaves\n  ...\n  552  \t\t\tJs_Runidle();\n  553  \t\t  }\n  554: \t\t  if (((record >> 19) & 0xff) == JTAG_ID_VJTAG && ((record >> 8) & 0x7ff) == JTAG_VENDOR_ID)\n  555  \t\t  {\n  556  \t\t\tjtag.id = j;\n\n/Users/dog/Library/Arduino15/packages/arduino/hardware/samd/1.8.3/bootloaders/zero/board_driver_jtag.h:\n   27  #define JSM_RESET_COUNT  5\n   28  \n   29: #define JTAG_VENDOR_ID   0x6E\n   30  #define JTAG_ID_VJTAG    0x84\n   31  \n\n17 matches across 12 files\n\n\nSearching 1251 files for \"bDeviceClass\" (regex, case sensitive)\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Middlewares/ST/STM32_USB_Device_Library/Core/Src/usbd_desc_template.c:\n   73    0x00,                       /* bcdUSB */\n   74    0x02,\n   75:   0x00,                       /* bDeviceClass */\n   76    0x00,                       /* bDeviceSubClass */\n   77    0x00,                       /* bDeviceProtocol */\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Middlewares/USBDevice/Device/usbd_desc.c:\n   43      .bDescriptorType    = USB_DESC_TYPE_DEVICE,\n   44      .bcdUSB             = USBD_SPEC_BCD,\n   45:     .bDeviceClass       = 0x00,\n   46      .bDeviceSubClass    = 0x00,\n   47      .bDeviceProtocol    = 0x00,\n   ..\n   65      .bDescriptorType    = USB_DESC_TYPE_DEVICE_QUALIFIER,\n   66      .bcdUSB             = USBD_SPEC_BCD,\n   67:     .bDeviceClass       = 0x00,\n   68      .bDeviceSubClass    = 0x00,\n   69      .bDeviceProtocol    = 0x00,\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Middlewares/USBDevice/Include/usb_types.h:\n  236      uint8_t  bDescriptorType;       /*!< Device Descriptor (0x01) */\n  237      uint16_t bcdUSB;                /*!< USB Specification Number which device complies to */\n  238:     uint8_t  bDeviceClass;          /*!< Class Code (Assigned by USB Org)\n  239                                          If equal to Zero, each interface specifies it’s own class code\n  240                                          If equal to 0xFF, the class code is vendor specified.\n  ...\n  321      uint8_t  bDescriptorType;       /*!< Device Qualifier Descriptor (0x06) */\n  322      uint16_t bcdUSB;                /*!< USB Specification Number which device complies to */\n  323:     uint8_t  bDeviceClass;          /*!< Class Code (Assigned by USB Org)\n  324                                          If equal to Zero, each interface specifies it’s own class code\n  325                                          If equal to 0xFF, the class code is vendor specified.\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Src/usbd_desc.c:\n  166  #endif /* (USBD_LPM_ENABLED == 1) */\n  167    0x02,\n  168:   0x02,                       /*bDeviceClass*/\n  169    0x02,                       /*bDeviceSubClass*/\n  170    0x00,                       /*bDeviceProtocol*/\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/mechaduino-firmware/asf_mechaduino/usb/usb_protocol.h:\n  367  \tuint8_t bDescriptorType;\n  368  \tle16_t  bcdUSB;\n  369: \tuint8_t bDeviceClass;\n  370  \tuint8_t bDeviceSubClass;\n  371  \tuint8_t bDeviceProtocol;\n  ...\n  452  \tuint8_t bDescriptorType;\n  453  \tle16_t  bcdUSB;\n  454: \tuint8_t bDeviceClass;\n  455  \tuint8_t bDeviceSubClass;\n  456  \tuint8_t bDeviceProtocol;\n  ...\n  563  /** Build bytes for USB device descriptor. */\n  564  #define USB_DEV_DESC_BYTES(bcdUSB,                                                                                     \\\n  565:                            bDeviceClass,                                                                               \\\n  566                             bDeviceSubClass,                                                                            \\\n  567                             bDeviceProtocol,                                                                            \\\n  ...\n  576  \t18,       /* bLength */                                                                                            \\\n  577  \t    0x01, /* bDescriptorType: DEVICE */                                                                            \\\n  578: \t    LE_BYTE0(bcdUSB), LE_BYTE1(bcdUSB), bDeviceClass, bDeviceSubClass, bDeviceProtocol, bMaxPacketSize0,           \\\n  579  \t    LE_BYTE0(idVendor), LE_BYTE1(idVendor), LE_BYTE0(idProduct), LE_BYTE1(idProduct), LE_BYTE0(bcdDevice),         \\\n  580  \t    LE_BYTE1(bcdDevice), iManufacturer, iProduct, iSerialNumber, bNumConfigurations\n  581  \n  582  #define USB_DEV_QUAL_DESC_BYTES(                                                                                       \\\n  583:     bcdUSB, bDeviceClass, bDeviceSubClass, bDeviceProtocol, bMaxPacketSize0, bNumConfigurations)                       \\\n  584  \t10,                          /* bLength */                                                                         \\\n  585  \t    USB_DT_DEVICE_QUALIFIER, /* bDescriptorType: DEVICE_QUALIFIER */                                               \\\n  586: \t    LE_BYTE0(bcdUSB), LE_BYTE1(bcdUSB), bDeviceClass, bDeviceSubClass, bDeviceProtocol, bMaxPacketSize0,           \\\n  587  \t    bNumConfigurations, 0\n  588  \n\n/Users/dog/Library/Arduino15/packages/arduino/hardware/samd/1.8.3/bootloaders/zero/sam_ba_usb.c:\n   41    0x00,   // bcdUSB L\n   42    0x02,   // bcdUSB H\n   43:   0x02,   // bDeviceClass:    CDC class code\n   44    0x00,   // bDeviceSubclass: CDC class sub code\n   45    0x00,   // bDeviceProtocol: CDC Device protocol\n\n13 matches across 6 files\n\n\nSearching 1251 files for \"USBD_SERIAL_BCD_SIZE\" (regex, case sensitive)\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Middlewares/USBDevice/Device/usbd_desc.c:\n   52      .iManufacturer      = USBD_ISTR_VENDOR,\n   53      .iProduct           = USBD_ISTR_PRODUCT,\n   54: #if (USBD_SERIAL_BCD_SIZE > 0)\n   55      .iSerialNumber      = USBD_ISTR_SERIAL,\n   56  #endif /* Defaults to 0 */\n   ..\n  239                      break;\n  240  \n  241: #if (USBD_SERIAL_BCD_SIZE > 0)\n  242                  case USBD_ISTR_SERIAL:\n  243:                     data[0] = len = 2 + USBD_SERIAL_BCD_SIZE * 2;\n  244                      data[1] = USB_DESC_TYPE_STRING;\n  245                      Uint2Unicode((const uint8_t*)dev->Desc->SerialNumber,\n  246:                             &data[2], USBD_SERIAL_BCD_SIZE);\n  247                      break;\n  248  #endif\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Middlewares/USBDevice/Include/usbd_types.h:\n   39  #define USBD_MAX_CONFIGURATION_COUNT    1\n   40  \n   41: #ifndef USBD_SERIAL_BCD_SIZE\n   42: #define USBD_SERIAL_BCD_SIZE            8\n   43  #endif\n   44  \n   ..\n  121  \n  122  \n  123: #if (USBD_SERIAL_BCD_SIZE > 0)\n  124  /** @brief USB serial number definition */\n  125: typedef const uint8_t USBD_SerialNumberType[(USBD_SERIAL_BCD_SIZE + 1) / 2];\n  126  #endif\n  127  \n  ...\n  174      }Product;                   /*!< Product properties */\n  175  \n  176: #if (USBD_SERIAL_BCD_SIZE > 0)\n  177      USBD_SerialNumberType *SerialNumber;/*!< Product serial number reference */\n  178  #endif\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Middlewares/USBDevice/Templates/usbd_config.h:\n   41  \n   42  /** @brief When set to 0, no SerialNumber is readable by the host.\n   43:  * Otherwise the SerialNumber will be converted from USBD_SERIAL_BCD_SIZE / 2\n   44   * amount of raw bytes to string BCD format and sent to the host. */\n   45: #define USBD_SERIAL_BCD_SIZE        0\n   46  \n   47  \n\n/Users/dog/Documents/electronics/stm32-nema17-servo/stm32-servo-firmware/src/usbd/usb_device.c:\n   29          .Version.bcd    = 0x0100,\n   30      },\n   31: #if (USBD_SERIAL_BCD_SIZE > 0)\n   32      .SerialNumber       = (USBD_SerialNumberType*)DEVICE_ID_REG,\n   33  #endif\n   ..\n   72  \t//     .iManufacturer      = USBD_ISTR_VENDOR,\n   73  \t//     .iProduct           = USBD_ISTR_PRODUCT,\n   74: \t// #if (USBD_SERIAL_BCD_SIZE > 0)\n   75  \t//     .iSerialNumber      = USBD_ISTR_SERIAL,\n   76  \t// #endif\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/stm32-servo-firmware/src/usbd/usbd_config.h:\n    5  #define USBD_EP0_BUFFER_SIZE\t\t256\n    6  #define USBD_HS_SUPPORT             0\n    7: #define USBD_SERIAL_BCD_SIZE        8\n    8  #define USBD_CDC_NOTEP_USED         0\n    9  #define USBD_CDC_CONTROL_LINE_USED  0\n\n14 matches across 5 files\n\n\nSearching 1251 files for \"USBD_ISTR_SERIAL\" (regex, case sensitive)\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Middlewares/USBDevice/Device/usbd_desc.c:\n   53      .iProduct           = USBD_ISTR_PRODUCT,\n   54  #if (USBD_SERIAL_BCD_SIZE > 0)\n   55:     .iSerialNumber      = USBD_ISTR_SERIAL,\n   56  #endif /* Defaults to 0 */\n   57      .bNumConfigurations = USBD_MAX_CONFIGURATION_COUNT\n   ..\n  240  \n  241  #if (USBD_SERIAL_BCD_SIZE > 0)\n  242:                 case USBD_ISTR_SERIAL:\n  243                      data[0] = len = 2 + USBD_SERIAL_BCD_SIZE * 2;\n  244                      data[1] = USB_DESC_TYPE_STRING;\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Middlewares/USBDevice/Include/usbd_types.h:\n  116      USBD_ISTR_VENDOR     = 0x10, /*!< Vendor name */\n  117      USBD_ISTR_PRODUCT    = 0x20, /*!< Product name */\n  118:     USBD_ISTR_SERIAL     = 0x30, /*!< Serial number string */\n  119      USBD_ISTR_CONFIG     = 0x40, /*!< Configuration name */\n  120  }USBD_iStringType;\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/stm32-servo-firmware/src/usbd/usb_device.c:\n   73  \t//     .iProduct           = USBD_ISTR_PRODUCT,\n   74  \t// #if (USBD_SERIAL_BCD_SIZE > 0)\n   75: \t//     .iSerialNumber      = USBD_ISTR_SERIAL,\n   76  \t// #endif\n   77  \t//     .bNumConfigurations = USBD_MAX_CONFIGURATION_COUNT\n\n4 matches across 3 files\n\n\nSearching 1251 files for \"DEVICE_ID_REG\" (regex, case sensitive)\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/stm32-servo-firmware/src/usbd/usb_device.c:\n   30      },\n   31  #if (USBD_SERIAL_BCD_SIZE > 0)\n   32:     .SerialNumber       = (USBD_SerialNumberType*)DEVICE_ID_REG,\n   33  #endif\n   34      .Config = {\n\n1 match in 1 file\n\n\nSearching 1251 files for \"DEVICE_ID\" (regex, case sensitive)\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_desc_template.h:\n   27  /* Exported types ------------------------------------------------------------*/\n   28  /* Exported constants --------------------------------------------------------*/\n   29: #define         DEVICE_ID1          (0x1FFF7A10)\n   30: #define         DEVICE_ID2          (0x1FFF7A14)\n   31: #define         DEVICE_ID3          (0x1FFF7A18)\n   32  \n   33  #define  USB_SIZ_STRING_SERIAL       0x1A\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Middlewares/ST/STM32_USB_Device_Library/Core/Src/usbd_desc_template.c:\n  234    uint32_t deviceserial0, deviceserial1, deviceserial2;\n  235  \n  236:   deviceserial0 = *(uint32_t *)DEVICE_ID1;\n  237:   deviceserial1 = *(uint32_t *)DEVICE_ID2;\n  238:   deviceserial2 = *(uint32_t *)DEVICE_ID3;\n  239  \n  240    deviceserial0 += deviceserial2;\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Src/usbd_desc.c:\n  393    uint32_t deviceserial0, deviceserial1, deviceserial2;\n  394  \n  395:   deviceserial0 = *(uint32_t *) DEVICE_ID1;\n  396:   deviceserial1 = *(uint32_t *) DEVICE_ID2;\n  397:   deviceserial2 = *(uint32_t *) DEVICE_ID3;\n  398  \n  399    deviceserial0 += deviceserial2;\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/stm32-servo-firmware/src/usbd/usb_device.c:\n   30      },\n   31  #if (USBD_SERIAL_BCD_SIZE > 0)\n   32:     .SerialNumber       = (USBD_SerialNumberType*)DEVICE_ID_REG,\n   33  #endif\n   34      .Config = {\n\n10 matches across 4 files\n\n\nSearching 1251 files for \"UID_BASE\" (regex, case sensitive)\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g431xx.h:\n 1061  \n 1062  #define PACKAGE_BASE          (0x1FFF7500UL)        /*!< Package data register base address     */\n 1063: #define UID_BASE              (0x1FFF7590UL)        /*!< Unique device ID register base address */\n 1064  #define FLASHSIZE_BASE        (0x1FFF75E0UL)        /*!< Flash size data register base address  */\n 1065  /**\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g441xx.h:\n 1094  \n 1095  #define PACKAGE_BASE          (0x1FFF7500UL)        /*!< Package data register base address     */\n 1096: #define UID_BASE              (0x1FFF7590UL)        /*!< Unique device ID register base address */\n 1097  #define FLASHSIZE_BASE        (0x1FFF75E0UL)        /*!< Flash size data register base address  */\n 1098  /**\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g471xx.h:\n 1110  \n 1111  #define PACKAGE_BASE          (0x1FFF7500UL)        /*!< Package data register base address     */\n 1112: #define UID_BASE              (0x1FFF7590UL)        /*!< Unique device ID register base address */\n 1113  #define FLASHSIZE_BASE        (0x1FFF75E0UL)        /*!< Flash size data register base address  */\n 1114  /**\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g473xx.h:\n 1199  \n 1200  #define PACKAGE_BASE          (0x1FFF7500UL)        /*!< Package data register base address     */\n 1201: #define UID_BASE              (0x1FFF7590UL)        /*!< Unique device ID register base address */\n 1202  #define FLASHSIZE_BASE        (0x1FFF75E0UL)        /*!< Flash size data register base address  */\n 1203  /**\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g474xx.h:\n 1326  \n 1327  #define PACKAGE_BASE          (0x1FFF7500UL)        /*!< Package data register base address     */\n 1328: #define UID_BASE              (0x1FFF7590UL)        /*!< Unique device ID register base address */\n 1329  #define FLASHSIZE_BASE        (0x1FFF75E0UL)        /*!< Flash size data register base address  */\n 1330  /**\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g483xx.h:\n 1232  \n 1233  #define PACKAGE_BASE          (0x1FFF7500UL)        /*!< Package data register base address     */\n 1234: #define UID_BASE              (0x1FFF7590UL)        /*!< Unique device ID register base address */\n 1235  #define FLASHSIZE_BASE        (0x1FFF75E0UL)        /*!< Flash size data register base address  */\n 1236  /**\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g484xx.h:\n 1359  \n 1360  #define PACKAGE_BASE          (0x1FFF7500UL)        /*!< Package data register base address     */\n 1361: #define UID_BASE              (0x1FFF7590UL)        /*!< Unique device ID register base address */\n 1362  #define FLASHSIZE_BASE        (0x1FFF75E0UL)        /*!< Flash size data register base address  */\n 1363  /**\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32gbk1cb.h:\n 1049  \n 1050  #define PACKAGE_BASE          (0x1FFF7500UL)        /*!< Package data register base address     */\n 1051: #define UID_BASE              (0x1FFF7590UL)        /*!< Unique device ID register base address */\n 1052  #define FLASHSIZE_BASE        (0x1FFF75E0UL)        /*!< Flash size data register base address  */\n 1053  /**\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_utils.h:\n   63   * @brief Unique device ID register base address\n   64   */\n   65: #define UID_BASE_ADDRESS              UID_BASE\n   66  \n   67  /**\n   ..\n  198  __STATIC_INLINE uint32_t LL_GetUID_Word0(void)\n  199  {\n  200:   return (uint32_t)(READ_REG(*((uint32_t *)UID_BASE_ADDRESS)));\n  201  }\n  202  \n  ...\n  207  __STATIC_INLINE uint32_t LL_GetUID_Word1(void)\n  208  {\n  209:   return (uint32_t)(READ_REG(*((uint32_t *)(UID_BASE_ADDRESS + 4U))));\n  210  }\n  211  \n  ...\n  216  __STATIC_INLINE uint32_t LL_GetUID_Word2(void)\n  217  {\n  218:   return (uint32_t)(READ_REG(*((uint32_t *)(UID_BASE_ADDRESS + 8U))));\n  219  }\n  220  \n\n13 matches across 9 files\n\n\nSearching 1251 files for \"USBD_SET_ADDRESS_IMMEDIATE\" (regex, case sensitive)\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Middlewares/USBDevice/Device/usbd.c:\n  220          (dev->ConfigSelector == 0))\n  221      {\n  222: #if (USBD_SET_ADDRESS_IMMEDIATE == 1)\n  223          USBD_PD_SetAddress(dev, dev->Setup.Value & 0x7F);\n  224  #endif\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Middlewares/USBDevice/Device/usbd_ctrl.c:\n   94              USBD_CtrlReceiveStatus(dev);\n   95          }\n   96: #if (USBD_SET_ADDRESS_IMMEDIATE != 1)\n   97          /* If the address was set by the last request, apply it now */\n   98          else if ((dev->Setup.RequestType.b == 0x00) &&\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Middlewares/USBDevice/PDs/STM32_XPD/usbd_pd_def.h:\n   49  /* USB cores set the address after the SetAddress request is completed,\n   50   * while USB_OTG cores need the new address as soon as available */\n   51: #define USBD_SET_ADDRESS_IMMEDIATE      \\\n   52      (defined(USB_OTG_FS))\n   53  \n\n3 matches across 3 files\n\n\nSearching 1251 files for \"GPIO_PIN_12\" (regex, case sensitive)\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_gpio.h:\n   95  #define GPIO_PIN_10                ((uint16_t)0x0400)  /* Pin 10 selected   */\n   96  #define GPIO_PIN_11                ((uint16_t)0x0800)  /* Pin 11 selected   */\n   97: #define GPIO_PIN_12                ((uint16_t)0x1000)  /* Pin 12 selected   */\n   98  #define GPIO_PIN_13                ((uint16_t)0x2000)  /* Pin 13 selected   */\n   99  #define GPIO_PIN_14                ((uint16_t)0x4000)  /* Pin 14 selected   */\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h:\n  126  #define LL_GPIO_PIN_10                     GPIO_BSRR_BS10 /*!< Select pin 10 */\n  127  #define LL_GPIO_PIN_11                     GPIO_BSRR_BS11 /*!< Select pin 11 */\n  128: #define LL_GPIO_PIN_12                     GPIO_BSRR_BS12 /*!< Select pin 12 */\n  129  #define LL_GPIO_PIN_13                     GPIO_BSRR_BS13 /*!< Select pin 13 */\n  130  #define LL_GPIO_PIN_14                     GPIO_BSRR_BS14 /*!< Select pin 14 */\n  ...\n  273    *         @arg @ref LL_GPIO_PIN_10\n  274    *         @arg @ref LL_GPIO_PIN_11\n  275:   *         @arg @ref LL_GPIO_PIN_12\n  276    *         @arg @ref LL_GPIO_PIN_13\n  277    *         @arg @ref LL_GPIO_PIN_14\n  ...\n  308    *         @arg @ref LL_GPIO_PIN_10\n  309    *         @arg @ref LL_GPIO_PIN_11\n  310:   *         @arg @ref LL_GPIO_PIN_12\n  311    *         @arg @ref LL_GPIO_PIN_13\n  312    *         @arg @ref LL_GPIO_PIN_14\n  ...\n  343    *         @arg @ref LL_GPIO_PIN_10\n  344    *         @arg @ref LL_GPIO_PIN_11\n  345:   *         @arg @ref LL_GPIO_PIN_12\n  346    *         @arg @ref LL_GPIO_PIN_13\n  347    *         @arg @ref LL_GPIO_PIN_14\n  ...\n  378    *         @arg @ref LL_GPIO_PIN_10\n  379    *         @arg @ref LL_GPIO_PIN_11\n  380:   *         @arg @ref LL_GPIO_PIN_12\n  381    *         @arg @ref LL_GPIO_PIN_13\n  382    *         @arg @ref LL_GPIO_PIN_14\n  ...\n  413    *         @arg @ref LL_GPIO_PIN_10\n  414    *         @arg @ref LL_GPIO_PIN_11\n  415:   *         @arg @ref LL_GPIO_PIN_12\n  416    *         @arg @ref LL_GPIO_PIN_13\n  417    *         @arg @ref LL_GPIO_PIN_14\n  ...\n  451    *         @arg @ref LL_GPIO_PIN_10\n  452    *         @arg @ref LL_GPIO_PIN_11\n  453:   *         @arg @ref LL_GPIO_PIN_12\n  454    *         @arg @ref LL_GPIO_PIN_13\n  455    *         @arg @ref LL_GPIO_PIN_14\n  ...\n  485    *         @arg @ref LL_GPIO_PIN_10\n  486    *         @arg @ref LL_GPIO_PIN_11\n  487:   *         @arg @ref LL_GPIO_PIN_12\n  488    *         @arg @ref LL_GPIO_PIN_13\n  489    *         @arg @ref LL_GPIO_PIN_14\n  ...\n  518    *         @arg @ref LL_GPIO_PIN_10\n  519    *         @arg @ref LL_GPIO_PIN_11\n  520:   *         @arg @ref LL_GPIO_PIN_12\n  521    *         @arg @ref LL_GPIO_PIN_13\n  522    *         @arg @ref LL_GPIO_PIN_14\n  ...\n  621    *         @arg @ref LL_GPIO_PIN_10\n  622    *         @arg @ref LL_GPIO_PIN_11\n  623:   *         @arg @ref LL_GPIO_PIN_12\n  624    *         @arg @ref LL_GPIO_PIN_13\n  625    *         @arg @ref LL_GPIO_PIN_14\n  ...\n  660    *         @arg @ref LL_GPIO_PIN_10\n  661    *         @arg @ref LL_GPIO_PIN_11\n  662:   *         @arg @ref LL_GPIO_PIN_12\n  663    *         @arg @ref LL_GPIO_PIN_13\n  664    *         @arg @ref LL_GPIO_PIN_14\n  ...\n  711    *         @arg @ref LL_GPIO_PIN_10\n  712    *         @arg @ref LL_GPIO_PIN_11\n  713:   *         @arg @ref LL_GPIO_PIN_12\n  714    *         @arg @ref LL_GPIO_PIN_13\n  715    *         @arg @ref LL_GPIO_PIN_14\n  ...\n  746    *         @arg @ref LL_GPIO_PIN_10\n  747    *         @arg @ref LL_GPIO_PIN_11\n  748:   *         @arg @ref LL_GPIO_PIN_12\n  749    *         @arg @ref LL_GPIO_PIN_13\n  750    *         @arg @ref LL_GPIO_PIN_14\n  ...\n  805    *         @arg @ref LL_GPIO_PIN_10\n  806    *         @arg @ref LL_GPIO_PIN_11\n  807:   *         @arg @ref LL_GPIO_PIN_12\n  808    *         @arg @ref LL_GPIO_PIN_13\n  809    *         @arg @ref LL_GPIO_PIN_14\n  ...\n  857    *         @arg @ref LL_GPIO_PIN_10\n  858    *         @arg @ref LL_GPIO_PIN_11\n  859:   *         @arg @ref LL_GPIO_PIN_12\n  860    *         @arg @ref LL_GPIO_PIN_13\n  861    *         @arg @ref LL_GPIO_PIN_14\n  ...\n  886    *         @arg @ref LL_GPIO_PIN_10\n  887    *         @arg @ref LL_GPIO_PIN_11\n  888:   *         @arg @ref LL_GPIO_PIN_12\n  889    *         @arg @ref LL_GPIO_PIN_13\n  890    *         @arg @ref LL_GPIO_PIN_14\n  ...\n  915    *         @arg @ref LL_GPIO_PIN_10\n  916    *         @arg @ref LL_GPIO_PIN_11\n  917:   *         @arg @ref LL_GPIO_PIN_12\n  918    *         @arg @ref LL_GPIO_PIN_13\n  919    *         @arg @ref LL_GPIO_PIN_14\n  ...\n  944    *         @arg @ref LL_GPIO_PIN_10\n  945    *         @arg @ref LL_GPIO_PIN_11\n  946:   *         @arg @ref LL_GPIO_PIN_12\n  947    *         @arg @ref LL_GPIO_PIN_13\n  948    *         @arg @ref LL_GPIO_PIN_14\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Middlewares/USBDevice4Cube/Src/hal_usb.c:\n   30      GPIO_InitTypeDef GPIO_InitStruct;\n   31  \n   32:     GPIO_InitStruct.Pin = GPIO_PIN_11 | GPIO_PIN_12;\n   33      GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;\n   34      GPIO_InitStruct.Pull = GPIO_NOPULL;\n   ..\n   43  void HAL_USB_OTG_FS_MspDeInit(void* handle)\n   44  {\n   45:     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_11 | GPIO_PIN_12);\n   46  \n   47      HAL_NVIC_DisableIRQ(OTG_FS_IRQn);\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Src/main.c:\n  901    /*Configure GPIO pin Output Level */\n  902    HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_10 \n  903:                           |GPIO_PIN_12, GPIO_PIN_RESET);\n  904  \n  905    /*Configure GPIO pin Output Level */\n  ...\n  920  \n  921    /*Configure GPIO pins : PB0 PB2 PB10 PB12 */\n  922:   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_2|GPIO_PIN_10|GPIO_PIN_12;\n  923    GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;\n  924    GPIO_InitStruct.Pull = GPIO_NOPULL;\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Src/stm32g4xx_hal_msp.c:\n  770      PA12     ------> USB_DP \n  771      */\n  772:     GPIO_InitStruct.Pin = GPIO_PIN_11|GPIO_PIN_12;\n  773      GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;\n  774      GPIO_InitStruct.Pull = GPIO_NOPULL;\n  ...\n  804      PA12     ------> USB_DP \n  805      */\n  806:     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_11|GPIO_PIN_12);\n  807  \n  808    /* USER CODE BEGIN USB_MspDeInit 1 */\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/stm32-servo-firmware/src/ssf_spi.h:\n   12  \t#define PIN_DRVSEL\tGPIOB, GPIO_PIN_11\n   13  \t#define PIN_ASEL\tGPIOB, GPIO_PIN_10\n   14: \t#define PIN_SPI_NSS\tGPIOB, GPIO_PIN_12\n   15  #elif SSF_HARDWARE_VERSION == 0x000200\n   16: \t#define PIN_DRVSEL\tGPIOB, GPIO_PIN_12\n   17  \t#define PIN_ASEL \tGPIOB, GPIO_PIN_10\n   18  #endif\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/stm32-servo-firmware/src/usbd/hal_usb.c:\n   11      // GPIO setup apparently not needed on STM32G4\n   12      // GPIO_InitTypeDef GPIO_InitStruct = {\n   13:     //     .Pin = GPIO_PIN_11 | GPIO_PIN_12,\n   14      //     .Mode = GPIO_MODE_AF_PP,\n   15      //     .Pull = GPIO_NOPULL,\n   ..\n   28  void HAL_USB_OTG_FS_MspDeInit(void* handle)\n   29  {\n   30:     // HAL_GPIO_DeInit(GPIOA, GPIO_PIN_11 | GPIO_PIN_12);\n   31  \n   32      HAL_NVIC_DisableIRQ(USB_LP_IRQn);\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/stm32-servo-firmware/src/usbd/usb_device.c:\n   64      PA12     ------> USB_DP \n   65      */\n   66:     GPIO_InitStruct.Pin = GPIO_PIN_11|GPIO_PIN_12;\n   67      GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;\n   68      GPIO_InitStruct.Pull = GPIO_NOPULL;\n\n30 matches across 8 files\n\n\nSearching 1251 files for \"STDOUT_BUFFER_SIZE\" (regex, case sensitive)\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Middlewares/USBDevice/Templates/console_if.c:\n   15    *     @endcode\n   16    * After configuring it's endpoint numbers it can be mounted on a USB device.\n   17:   * Define STDOUT_BUFFER_SIZE with an appropriate buffer size to enable output,\n   18    * STDIN_BUFFER_SIZE to enable input functionality. (Twice the max packet size\n   19    * is recommended.)\n   ..\n   53  static void console_if_open         (void* itf, USBD_CDC_LineCodingType * lc);\n   54  \n   55: #if (STDOUT_BUFFER_SIZE > 0)\n   56  \n   57: static const uint16_t console_in_size = STDOUT_BUFFER_SIZE;\n   58  \n   59  static struct {\n   60      uint16_t head;\n   61      uint16_t tail;\n   62:     uint8_t buffer[STDOUT_BUFFER_SIZE + 1];\n   63  }console_if_IN;\n   64  \n   ..\n   88      .Received       = console_if_out_cmplt,\n   89  #endif\n   90: #if (STDOUT_BUFFER_SIZE > 0)\n   91      .Transmitted    = console_if_in_cmplt,\n   92  #endif\n   ..\n  100  static void console_if_open(void* itf, USBD_CDC_LineCodingType * lc)\n  101  {\n  102: #if (STDOUT_BUFFER_SIZE > 0)\n  103      console_if_IN.head = console_if_IN.tail = 0;\n  104  #endif\n  ...\n  109  }\n  110  \n  111: #if (STDOUT_BUFFER_SIZE > 0)\n  112  static void console_if_in_cmplt(void* itf, uint8_t * pbuf, uint16_t length)\n  113  {\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/stm32-servo-firmware/src/usbd/usbd_config.h:\n   15  #define USBD_HID_REPORT_STRINGS     0\n   16  \n   17: #define STDOUT_BUFFER_SIZE\n   18  #define STDIN_BUFFER_SIZE\n   19  \n\n8 matches across 2 files\n\n\nSearching 1251 files for \"USBD_CDC_CONTROL_LINE_USED\" (regex, case sensitive)\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Middlewares/USBDevice/Class/CDC/usbd_cdc.c:\n  354  \n  355                  case CDC_REQ_SET_CONTROL_LINE_STATE:\n  356: #if (USBD_CDC_CONTROL_LINE_USED == 1)\n  357                      if (CDC_APP(itf)->SetCtrlLine != NULL)\n  358                      {\n  ...\n  368                          CDC_APP(itf)->SetCtrlLine(itf, ctrl->b.DTR, ctrl->b.RTS);\n  369                      }\n  370: #endif /* USBD_CDC_CONTROL_LINE_USED */\n  371                      retval = USBD_E_OK;\n  372                      break;\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Middlewares/USBDevice/Include/usbd_cdc.h:\n  176                           uint16_t length);  /*!< Transmission of data completed */\n  177  \n  178: #if (USBD_CDC_CONTROL_LINE_USED == 1)\n  179      void (*SetCtrlLine) (void* itf,\n  180                           uint8_t dtr,\n  181                           uint8_t rts);      /*!< Control DTR and RTS signals */\n  182: #endif /* USBD_CDC_CONTROL_LINE_USED */\n  183  \n  184  #if (USBD_CDC_BREAK_SUPPORT == 1)\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Middlewares/USBDevice/Templates/usbd_config.h:\n   52  \n   53  /** @brief Set to 1 if SET_CONTROL_LINE_STATE request is used by a CDC-ACM interface. */\n   54: #define USBD_CDC_CONTROL_LINE_USED  0\n   55  \n   56  /** @brief Set to 1 if SEND_BREAK request is used by a CDC-ACM interface. */\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/stm32-servo-firmware/src/usbd/usbd_config.h:\n    7  #define USBD_SERIAL_BCD_SIZE        24\n    8  #define USBD_CDC_NOTEP_USED         1\n    9: #define USBD_CDC_CONTROL_LINE_USED  0\n   10  #define USBD_CDC_BREAK_SUPPORT      0\n   11  #define USBD_DFU_ALTSETTINGS        0\n\n6 matches across 4 files\n\n\nSearching 1251 files for \"ssf_usbRxCallback\" (regex, case sensitive)\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/stm32-servo-firmware/src/ssf_main.c:\n   96  }\n   97  \n   98: void ssf_usbRxCallback(const void* _data, size_t datalen)\n   99  {\n  100  \tconst char* str = _data;\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/stm32-servo-firmware/src/ssf_main.h:\n   90  // void ssf_adc2IrqHandler(ADC_HandleTypeDef *hadc);\n   91  \n   92: extern void ssf_usbRxCallback(const void* data, size_t datalen);\n   93  \n   94  \n\n2 matches across 2 files\n\n\nSearching 1251 files for \"STDIN_BUFFER_SIZE\" (regex, case sensitive)\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Middlewares/USBDevice/Templates/console_if.c:\n   16    * After configuring it's endpoint numbers it can be mounted on a USB device.\n   17    * Define STDOUT_BUFFER_SIZE with an appropriate buffer size to enable output,\n   18:   * STDIN_BUFFER_SIZE to enable input functionality. (Twice the max packet size\n   19    * is recommended.)\n   20    * The interface becomes operational after the serial port's line coding is set\n   ..\n   67  #endif\n   68  \n   69: #if (STDIN_BUFFER_SIZE > 0)\n   70  \n   71: static const uint16_t console_out_size = STDIN_BUFFER_SIZE;\n   72  \n   73  static struct {\n   74      uint16_t head;\n   75      uint16_t tail;\n   76:     uint8_t buffer[STDIN_BUFFER_SIZE + 1];\n   77  }console_if_OUT;\n   78  \n   ..\n   85      .Name           = \"Serial port as standard I/O\",\n   86      .Open           = console_if_open,\n   87: #if (STDIN_BUFFER_SIZE > 0)\n   88      .Received       = console_if_out_cmplt,\n   89  #endif\n   ..\n  103      console_if_IN.head = console_if_IN.tail = 0;\n  104  #endif\n  105: #if (STDIN_BUFFER_SIZE > 0)\n  106      console_if_OUT.head = console_if_OUT.tail = 0;\n  107      console_if_recv();\n  ...\n  202  #endif\n  203  \n  204: #if (STDIN_BUFFER_SIZE > 0)\n  205  static void console_if_out_cmplt(void* itf, uint8_t * pbuf, uint16_t length)\n  206  {\n\n/Users/dog/Documents/electronics/stm32-nema17-servo/stm32-servo-firmware/src/usbd/usbd_config.h:\n   16  \n   17  #define STDOUT_BUFFER_SIZE \t256\n   18: #define STDIN_BUFFER_SIZE\t128\n   19  \n   20  #endif // USBD_CONFIG_H\n\n8 matches across 2 files\n",
			"settings":
			{
				"buffer_size": 570942,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "stm32-servo-firmware/src/usbd/usb_device.c",
			"settings":
			{
				"buffer_size": 2151,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "firmware48/Middlewares/USBDevice/Class/CDC/usbd_cdc.c",
			"settings":
			{
				"buffer_size": 19131,
				"line_ending": "Unix"
			}
		},
		{
			"file": "firmware48/Middlewares/USBDevice/Device/usbd_ep.c",
			"settings":
			{
				"buffer_size": 6564,
				"line_ending": "Unix"
			}
		},
		{
			"file": "firmware48/Middlewares/USBDevice/Device/usbd_ctrl.c",
			"settings":
			{
				"buffer_size": 7272,
				"line_ending": "Unix"
			}
		},
		{
			"file": "firmware48/Middlewares/USBDevice/docs/usbd_pd_if.h",
			"settings":
			{
				"buffer_size": 4695,
				"line_ending": "Unix"
			}
		},
		{
			"file": "firmware48/Middlewares/USBDevice/PDs/STM32_XPD/usbd_pd_if.h",
			"settings":
			{
				"buffer_size": 3137,
				"line_ending": "Unix"
			}
		},
		{
			"file": "firmware48/Middlewares/USBDevice4Cube/XPD_USB/xpd_usb.c",
			"settings":
			{
				"buffer_size": 32070,
				"line_ending": "Unix"
			}
		},
		{
			"file": "firmware48/Middlewares/USBDevice/Include/usb_types.h",
			"settings":
			{
				"buffer_size": 16895,
				"encoding": "Western (Windows 1252)",
				"line_ending": "Unix"
			}
		},
		{
			"file": "firmware48/Middlewares/USBDevice/Device/usbd_desc.c",
			"settings":
			{
				"buffer_size": 11597,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "firmware48/Middlewares/USBDevice/Include/usbd_types.h",
			"settings":
			{
				"buffer_size": 10936,
				"line_ending": "Unix"
			}
		},
		{
			"file": "firmware48/Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_def.h",
			"settings":
			{
				"buffer_size": 11393,
				"line_ending": "Windows"
			}
		},
		{
			"file": "firmware48/Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g431xx.h",
			"settings":
			{
				"buffer_size": 990298,
				"encoding": "Western (Windows 1252)",
				"line_ending": "Windows"
			}
		},
		{
			"file": "firmware48/Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g441xx.h",
			"settings":
			{
				"buffer_size": 1007201,
				"encoding": "Western (Windows 1252)",
				"line_ending": "Windows"
			}
		},
		{
			"file": "firmware48/Drivers/STM32G4xx_HAL_Driver/Inc/Legacy/stm32_hal_legacy.h",
			"settings":
			{
				"buffer_size": 209427,
				"line_ending": "Windows"
			}
		},
		{
			"file": "firmware48/Middlewares/ST/STM32_USB_Device_Library/Core/Src/usbd_desc_template.c",
			"settings":
			{
				"buffer_size": 9453,
				"line_ending": "Windows"
			}
		},
		{
			"file": "firmware48/Src/main.c",
			"settings":
			{
				"buffer_size": 26433,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "stm32-servo-firmware/src/usbd/usbd_config.h",
			"settings":
			{
				"buffer_size": 623,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "firmware48/Middlewares/USBDevice/README.md",
			"settings":
			{
				"buffer_size": 5061,
				"line_ending": "Unix"
			}
		},
		{
			"file": "firmware48/Middlewares/USBDevice/Templates/console_if.c",
			"settings":
			{
				"buffer_size": 7278,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "firmware48/Middlewares/USBDevice/Include/usbd_cdc.h",
			"settings":
			{
				"buffer_size": 10454,
				"encoding": "Western (Windows 1252)",
				"line_ending": "Unix"
			}
		},
		{
			"file": "stm32-servo-firmware/src/usbd/usb_device.h",
			"settings":
			{
				"buffer_size": 189,
				"line_ending": "Unix"
			}
		},
		{
			"file": "firmware48/Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pcd.c",
			"settings":
			{
				"buffer_size": 47783,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				]
			],
			[
				"Packages/Makefile/Make.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/User/minispeck-stm32f030.sublime-build",
					""
				],
				[
					"Packages/User/minispeck-stm32f030.sublime-build",
					"Clean"
				]
			],
			[
				"Packages/User/minispeck-stm32f030.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"build sy",
				"Build: New Build System"
			],
			[
				"pac",
				"Package Control: Discover Packages"
			],
			[
				"line end",
				"Line Endings Unify"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: Disable Package"
			],
			[
				"pak",
				"Package Control: Install Package"
			],
			[
				"linter c",
				"SublimeLinter: Clear Caches"
			],
			[
				"lin",
				"SublimeLinter: Enable Inline Tooltips"
			],
			[
				"lint",
				"SublimeLinter: Clear Caches"
			],
			[
				"linter",
				"SublimeLinter: Clear Caches"
			]
		],
		"width": 428.0
	},
	"console":
	{
		"height": 151.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/dog/Documents/electronics/stm32-nema17-servo"
	],
	"file_history":
	[
		"/Users/dog/Documents/electronics/stm32-nema17-servo/stm32-servo-firmware/src/debug_uart.c",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/stm32-servo-firmware/src/usbd/hal_usb.c",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Src/usbd_desc.c",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_utils.h",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Src/stm32g4xx_hal_msp.c",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Middlewares/USBDevice/Include/usbd_types.h",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Middlewares/USBDevice/Class/CDC/usbd_cdc.c",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/stm32-servo-firmware/src/usbd/usb_device.c",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Middlewares/USBDevice/Templates/usbd_config.h",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Middlewares/USBDevice/Device/usbd_desc.c",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/stm32-servo-firmware/src/debug.h",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Middlewares/ST/STM32_USB_Device_Library/Core/Src/usbd_core.c",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Middlewares/ST/STM32_USB_Device_Library/Core/Src/usbd_ctlreq.c",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Inc/usb_device.h",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Middlewares/USBDevice4Cube/XPD_USB/xpd_usb.c",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Middlewares/USBDevice4Cube/XPD_USB/xpd_usb_otg.h",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Middlewares/USBDevice/Templates/console_if.c",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Middlewares/USBDevice4Cube/XPD_USB/xpd_usb.h",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Middlewares/USBDevice/Include/usbd_hid.h",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Middlewares/USBDevice4Cube/XPD_USB/xpd_common.h",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/stm32-servo-firmware/src/ssf_mctrl.c",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g431xx.h",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/stm32-servo-firmware/src/usbd/usb_device.h",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_gpio.h",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/mechaduino-firmware/asf_mechaduino/samd21a/include/component/usb.h",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Middlewares/USBDevice4Cube/Src/hal_usb.c",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_cortex.h",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_usb.c",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pcd.c",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_def.h",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/stm32-servo-firmware/src/usbd/usbd_config.h",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal.h",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/stm32-servo-firmware/src/ssf_analog.c",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/stm32-servo-firmware/src/ssf_main.h",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/stm32-servo-firmware/src/ssf_spi.h",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Inc/main.h",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/stm32-servo-firmware/src/ssf_led.c",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/stm32-servo-firmware/src/ssf_main.c",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/stm32-servo-firmware/src/usbd/stm32xxxx.h",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/stm32-servo-firmware/src/usb_cdc.c",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/stm32-servo-firmware/src/usbd/usbd_cdc.c",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_pcd.h",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Middlewares/USBDevice4Cube/XPD_USB/xpd_config.h",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_adc.h",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/stm32-servo-firmware/src/ssf_pwm.c",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Inc/stm32g4xx_hal_conf.h",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/stm32-servo-firmware/src/ssf_spi.c",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_tim.h",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_tim.c",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Makefile",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Middlewares/ST/STM32_USB_Device_Library/Class/CDC/Src/usbd_cdc.c",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Src/usbd_cdc_if.c",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal.c",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_dma.c",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/startup_stm32g431xx.s",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Src/stm32g4xx_it.c",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc_ex.c",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Src/main.c",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_dma.h",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/mechaduino-firmware/src/mecha_spi.h",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_spi.h",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_spi.h",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/stm32-servo-firmware/src/utime.h",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/stm32-servo-firmware/src/utime.c",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/mechaduino-firmware/src/mecha_spi.c",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/mechaduino-firmware/asf_mechaduino/samd21a/include/component/sercom.h",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/mechaduino-firmware/src/debug.h",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/mechaduino-firmware/asf_mechaduino/hpl/sercom/hpl_sercom.c",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/mechaduino-firmware/asf_mechaduino/hal/include/hpl_spi.h",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/mechaduino-firmware/asf_mechaduino/hal/include/hal_spi_m_sync.h",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/mechaduino-firmware/asf_mechaduino/hal/src/hal_spi_m_sync.c",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/mechaduino-firmware/asf_mechaduino/hal/include/hal_io.h",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/mechaduino-firmware/asf_mechaduino/hal/include/hal_gpio.h",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/mechaduino-firmware/asf_mechaduino/hal/include/hpl_gpio.h",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/mechaduino-firmware/asf_mechaduino/hal/include/hal_sleep.h",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/mechaduino-firmware/asf_mechaduino/examples/driver_examples.c",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/mechaduino-firmware/src/main.c",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/mechaduino-firmware/Makefile",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_gpio.c",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/mechaduino-firmware/src/mecha_pwm.c",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/mechaduino-firmware/src/mecha_pwm.h",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/mechaduino-firmware/asf_mechaduino/hal/include/hal_delay.h",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/firmware48/Drivers/CMSIS/Core/Include/cmsis_gcc.h",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/mechaduino-firmware/asf_mechaduino/driver_init.c",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/mechaduino-firmware/asf_mechaduino/samd21a/include/samd21g18a.h",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/mechaduino-firmware/asf_mechaduino/samd21a/include/component/tcc.h",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/mechaduino-firmware/asf_mechaduino/samd21a/include/component/tc.h",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/mechaduino-firmware/asf_mechaduino/hpl/tc/tc_lite.c",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/mechaduino-firmware/asf_mechaduino/hri/hri_sercom_d21.h",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/mechaduino-firmware/asf_mechaduino/usb/class/cdc/device/cdcdf_acm.c",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/mechaduino-firmware/asf_mechaduino/hal/include/hal_usb_device.h",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/mechaduino-firmware/asf_mechaduino/usb/device/usbdc.c",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/mechaduino-firmware/asf_mechaduino/usb/device/usbdc.h",
		"/Users/dog/Documents/embedded/projects/Mechaduino-Firmware/Mechaduino/Mechaduino/Controller.cpp",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/mechaduino-firmware/asf_mechaduino/hpl/usb/hpl_usb.c",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/mechaduino-firmware/asf_mechaduino/hri/hri_tc_d21.h",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/mechaduino-firmware/asf_mechaduino/samd21a/include/samd21e18a.h",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/mechaduino-firmware/asf_mechaduino/hal/include/hpl_pwm.h",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/mechaduino-firmware/asf_mechaduino/hal/src/hal_usb_device.c",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/mechaduino-firmware/asf_mechaduino/usb/usb_protocol.h",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/mechaduino-firmware/asf_mechaduino/usb/class/cdc/usb_protocol_cdc.h",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/mechaduino-firmware/asf_mechaduino/hal/src/hal_pwm.c",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/mechaduino-firmware/asf_mechaduino/hal/include/hal_pwm.h",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/mechaduino-firmware/asf_mechaduino/hri/hri_tcc_d21.h",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/mechaduino-firmware/asf_mechaduino/atmel_start.h",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/mechaduino-firmware/src/startup_samd21.c",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/mechaduino-firmware/asf_mechaduino/usb_start.c",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/mechaduino-firmware/asf_mechaduino/hal/include/hpl_usb.h",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/mechaduino-firmware/asf_mechaduino/hal/include/hal_init.h",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/mechaduino-firmware/asf_mechaduino/usb/class/cdc/device/cdcdf_acm.h",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/mechaduino-firmware/asf_mechaduino/samd21a/include/component/sysctrl.h",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/mechaduino-firmware/asf_mechaduino/hri/hri_sysctrl_d21.h",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/mechaduino-firmware/asf_mechaduino/atmel_start.c",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/mechaduino-firmware/asf_mechaduino/samd21a/include/component/gclk.h",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/mechaduino-firmware/asf_mechaduino/hpl/sysctrl/hpl_sysctrl.c",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/mechaduino-firmware/asf_mechaduino/hpl/pm/hpl_pm.c",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/mechaduino-firmware/asf_mechaduino/config/hpl_sysctrl_config.h",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/mechaduino-firmware/asf_mechaduino/hri/hri_gclk_d21.h",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/mechaduino-firmware/asf_mechaduino/config/hpl_gclk_config.h",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/mechaduino-firmware/asf_mechaduino/hpl/gclk/hpl_gclk.c",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/mechaduino-firmware/asf_mechaduino/hpl/core/hpl_init.c",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/mechaduino-firmware/asf_mechaduino/main.c",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/mechaduino-firmware/asf_mechaduino/samd21a/gcc/system_samd21.c",
		"/Users/dog/Library/Arduino15/packages/arduino/hardware/samd/1.8.3/bootloaders/zero/board_init.c",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/mechaduino-firmware/asf_mechaduino/samd21a/gcc/gcc/samd21g18a_flash.ld",
		"/Users/dog/Documents/electronics/stm32-nema17-servo/mechaduino-firmware/asf_mechaduino/config/hpl_pm_config.h"
	],
	"find":
	{
		"height": 39.0
	},
	"find_in_files":
	{
		"height": 101.0,
		"where_history":
		[
			"*.c, *.h, *.cpp",
			"*.c, *.h",
			"*.c *.h",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"STDIN",
			"STDIN_BUFFER_SIZE",
			"ssf_usbRxCallback",
			"USBD_CDC_CONTROL_LINE_USED",
			"STDOUT_BUFFER_SIZE",
			"GPIO_PIN_12",
			"USBD_SET_ADDRESS_IMMEDIATE",
			"UID_BASE",
			"UID",
			"devi",
			"signat",
			"USBD_StringSerial",
			"DEVICE_ID",
			"DEVICE_ID_REG",
			"USBD_ISTR_SERIAL",
			"USBD_SERIAL_BCD_SIZE",
			"usbd_deviceDesc",
			"bDeviceClass",
			"VENDOR",
			"0x5740",
			"USB_TypeDef",
			"HAL_PCD_Init",
			"GPIO.*AF.*_USB",
			"GPIO.*AF.*_OTG",
			"GPIO.*AF.*_FS",
			"GPIO.*AF.*FS",
			"GPIO.*AF",
			"GPIO*AF",
			"GPIO*USB",
			"USB",
			"OTG",
			"GPIO_AF",
			"USB",
			"USB_WAKEUP_EXTI_LINE",
			"_kalmanInductanceMeans",
			"18",
			"ARR",
			"3000",
			"CDC_Receive_FS",
			"DMAContinuousRequests",
			"USE_HAL_ADC_REGISTER_CALLBACKS",
			"HAL_ADC_CONVERSION_COMPLETE_CB_ID",
			"HAL_DMA_XFER_CPLT_CB_ID",
			"LL_SPI_NSS_HARD_OUTPUT",
			"SPI_CR1_SSM",
			"delay",
			"GPIO_TypeDef",
			"PB11",
			"TIM2_CH1",
			"aligned",
			"HEADER_SS",
			"parit",
			"SS",
			"baudrate calculation",
			"_get_io_descriptor",
			"TC5->",
			"TC5",
			"FPID",
			"20",
			"PWM_0",
			"Communication Device",
			"cdc_acm",
			"usb_init",
			"->ctrl(",
			"_cdcdf_acm.ctrl",
			"_cdcdf_acm",
			"_cdcdf_acm.ctrl",
			"\"Hi There!\"",
			"cdcdf_acm_ctrl",
			"\"Hi There!\"",
			"_cdcdf_acm_funcd.enabled",
			"CDC_ENABLE",
			"UDI_CDC_ENABLE",
			"_usb_d_dev_wait_dfll_rdy",
			"1465",
			"list_remove_head",
			"atmel_start_init",
			"ASF_PATH",
			"UserTxBufferFS",
			"UserRxBufferFS",
			"lto",
			"ASM_SOURCES"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 5,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "README.md",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9239,
						"regions":
						{
						},
						"selection":
						[
							[
								5891,
								5891
							]
						],
						"settings":
						{
							"SL.142.region_keys":
							[
							],
							"SL.178.region_keys":
							[
							],
							"SL.200.region_keys":
							[
							],
							"SL.285.region_keys":
							[
							],
							"SL.76.region_keys":
							[
							],
							"syntax": "Packages/Markdown/Markdown.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3246.0,
						"zoom_level": 1.0
					},
					"stack_index": 26,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "firmware48/Makefile",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10174,
						"regions":
						{
						},
						"selection":
						[
							[
								5367,
								5367
							]
						],
						"settings":
						{
							"SL.179.region_keys":
							[
							],
							"SL.201.region_keys":
							[
							],
							"syntax": "Packages/Makefile/Makefile.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 495.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "firmware48/Middlewares/USBDevice4Cube/Src/usb_device.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1985,
						"regions":
						{
						},
						"selection":
						[
							[
								875,
								897
							]
						],
						"settings":
						{
							"SL.255.region_keys":
							[
								"sublime_linter.protected_regions",
								"SL.gcc.Gutter.|region.redish markup.error.sublime_linter|dot",
								"SL.gcc.Highlights.|5268641e2aaee306979230e94060b2367d32654367dd745ef8ab67ae1d1eb503|region.redish markup.error.sublime_linter|32"
							],
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 20,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "firmware48/Middlewares/USBDevice4Cube/Src/main.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5133,
						"regions":
						{
						},
						"selection":
						[
							[
								3243,
								3284
							]
						],
						"settings":
						{
							"SL.256.region_keys":
							[
								"SL.gcc.Highlights.|33d086d15e7a48325115a367b3fbba37e0a17f1f8bbcdba1a816e94803ce3f09|region.redish markup.error.sublime_linter|32",
								"sublime_linter.protected_regions",
								"SL.gcc.Gutter.|region.redish markup.error.sublime_linter|dot"
							],
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 721.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "firmware48/Middlewares/USBDevice4Cube/Src/hal_usb.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1798,
						"regions":
						{
						},
						"selection":
						[
							[
								1532,
								1532
							]
						],
						"settings":
						{
							"SL.270.region_keys":
							[
								"SL.gcc.Highlights.|a80aa1df97527838c0dd6c2633a6d9b8fd0d801a15bd665f125048742b0a8137|region.redish markup.error.sublime_linter|32",
								"sublime_linter.protected_regions",
								"SL.gcc.Gutter.|region.redish markup.error.sublime_linter|dot"
							],
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 27,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "stm32-servo-firmware/src/ssf_main.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12157,
						"regions":
						{
						},
						"selection":
						[
							[
								217,
								217
							]
						],
						"settings":
						{
							"SL.292.region_keys":
							[
								"sublime_linter.protected_regions",
								"SL.gcc.Gutter.|region.redish markup.error.sublime_linter|dot",
								"SL.gcc.Highlights.|6c4ddc309ed816e49c59e044de5a9161fb8bf5e3108e9e2d5e20aaefe8918a39|region.redish markup.error.sublime_linter|32"
							],
							"syntax": "Packages/C++/C.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 59.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "stm32-servo-firmware/src/usbd/hal_usb.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1615,
						"regions":
						{
						},
						"selection":
						[
							[
								68,
								68
							]
						],
						"settings":
						{
							"SL.393.region_keys":
							[
								"sublime_linter.protected_regions",
								"SL.gcc.Gutter.|region.redish markup.error.sublime_linter|dot",
								"SL.gcc.Highlights.|b37f0bf2f90aa7928a40b4ba78f65a4dff5fe1d58a84deadf68dc435e8d45e74|region.redish markup.error.sublime_linter|32"
							],
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "firmware48/Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_cortex.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 17571,
						"regions":
						{
						},
						"selection":
						[
							[
								10565,
								10565
							]
						],
						"settings":
						{
							"SL.299.region_keys":
							[
								"sublime_linter.protected_regions",
								"SL.g++.Gutter.|region.redish markup.error.sublime_linter|dot",
								"SL.g++.Highlights.|19d111eb1c61a6fe045ac5915bb14414fbd8be8964b90c9490f63d63d173db13|region.redish markup.error.sublime_linter|32"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4558.0,
						"zoom_level": 1.0
					},
					"stack_index": 28,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "stm32-servo-firmware/src/debug.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 834,
						"regions":
						{
						},
						"selection":
						[
							[
								614,
								614
							]
						],
						"settings":
						{
							"SL.293.region_keys":
							[
								"sublime_linter.protected_regions"
							],
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 9,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 570942,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										437,
										442
									],
									[
										792,
										797
									],
									[
										1424,
										1429
									],
									[
										1779,
										1784
									],
									[
										2411,
										2416
									],
									[
										2766,
										2771
									],
									[
										3398,
										3403
									],
									[
										3753,
										3758
									],
									[
										4272,
										4277
									],
									[
										4775,
										4780
									],
									[
										5392,
										5397
									],
									[
										5747,
										5752
									],
									[
										6266,
										6271
									],
									[
										6769,
										6774
									],
									[
										7258,
										7263
									],
									[
										7754,
										7759
									],
									[
										8265,
										8270
									],
									[
										8722,
										8727
									],
									[
										9108,
										9113
									],
									[
										9462,
										9467
									],
									[
										9856,
										9861
									],
									[
										10143,
										10148
									],
									[
										10760,
										10765
									],
									[
										11115,
										11120
									],
									[
										11634,
										11639
									],
									[
										12137,
										12142
									],
									[
										12754,
										12759
									],
									[
										13109,
										13114
									],
									[
										13628,
										13633
									],
									[
										14131,
										14136
									],
									[
										14620,
										14625
									],
									[
										15116,
										15121
									],
									[
										15627,
										15632
									],
									[
										16084,
										16089
									],
									[
										16470,
										16475
									],
									[
										16824,
										16829
									],
									[
										17218,
										17223
									],
									[
										17505,
										17510
									],
									[
										18122,
										18127
									],
									[
										18477,
										18482
									],
									[
										18951,
										18956
									],
									[
										19325,
										19330
									],
									[
										19511,
										19516
									],
									[
										19986,
										19991
									],
									[
										20397,
										20402
									],
									[
										20808,
										20813
									],
									[
										21219,
										21224
									],
									[
										21784,
										21789
									],
									[
										22256,
										22261
									],
									[
										22437,
										22442
									],
									[
										22591,
										22596
									],
									[
										22820,
										22825
									],
									[
										22980,
										22985
									],
									[
										23369,
										23374
									],
									[
										23809,
										23814
									],
									[
										23990,
										23995
									],
									[
										24144,
										24149
									],
									[
										24373,
										24378
									],
									[
										24533,
										24538
									],
									[
										24932,
										24937
									],
									[
										25360,
										25365
									],
									[
										25542,
										25547
									],
									[
										25684,
										25689
									],
									[
										25867,
										25872
									],
									[
										26015,
										26020
									],
									[
										26350,
										26355
									],
									[
										26787,
										26792
									],
									[
										26955,
										26960
									],
									[
										27106,
										27111
									],
									[
										27298,
										27303
									],
									[
										27455,
										27460
									],
									[
										27927,
										27932
									],
									[
										28375,
										28380
									],
									[
										28759,
										28764
									],
									[
										29143,
										29148
									],
									[
										29527,
										29532
									],
									[
										29983,
										29988
									],
									[
										30455,
										30460
									],
									[
										30636,
										30641
									],
									[
										30790,
										30795
									],
									[
										31013,
										31018
									],
									[
										31171,
										31176
									],
									[
										31404,
										31409
									],
									[
										31558,
										31563
									],
									[
										31759,
										31764
									],
									[
										31917,
										31922
									],
									[
										32150,
										32155
									],
									[
										32304,
										32309
									],
									[
										32756,
										32761
									],
									[
										33234,
										33239
									],
									[
										33706,
										33711
									],
									[
										34178,
										34183
									],
									[
										34700,
										34705
									],
									[
										35128,
										35133
									],
									[
										35310,
										35315
									],
									[
										35452,
										35457
									],
									[
										35629,
										35634
									],
									[
										35775,
										35780
									],
									[
										35960,
										35965
									],
									[
										36102,
										36107
									],
									[
										36392,
										36397
									],
									[
										36574,
										36579
									],
									[
										36716,
										36721
									],
									[
										36893,
										36898
									],
									[
										37039,
										37044
									],
									[
										37224,
										37229
									],
									[
										37366,
										37371
									],
									[
										37818,
										37823
									],
									[
										38258,
										38263
									],
									[
										38439,
										38444
									],
									[
										38593,
										38598
									],
									[
										38816,
										38821
									],
									[
										38974,
										38979
									],
									[
										39207,
										39212
									],
									[
										39361,
										39366
									],
									[
										39562,
										39567
									],
									[
										39720,
										39725
									],
									[
										39953,
										39958
									],
									[
										40107,
										40112
									],
									[
										40587,
										40592
									],
									[
										41024,
										41029
									],
									[
										41192,
										41197
									],
									[
										41343,
										41348
									],
									[
										41529,
										41534
									],
									[
										41684,
										41689
									],
									[
										41878,
										41883
									],
									[
										42029,
										42034
									],
									[
										42337,
										42342
									],
									[
										42505,
										42510
									],
									[
										42656,
										42661
									],
									[
										42842,
										42847
									],
									[
										42997,
										43002
									],
									[
										43191,
										43196
									],
									[
										43342,
										43347
									],
									[
										43668,
										43673
									],
									[
										44009,
										44014
									],
									[
										44448,
										44453
									],
									[
										44776,
										44781
									],
									[
										45149,
										45154
									],
									[
										45637,
										45642
									],
									[
										45799,
										45804
									],
									[
										45962,
										45967
									],
									[
										46125,
										46130
									],
									[
										46288,
										46293
									],
									[
										46451,
										46456
									],
									[
										46614,
										46619
									],
									[
										46777,
										46782
									],
									[
										46940,
										46945
									],
									[
										47103,
										47108
									],
									[
										47267,
										47272
									],
									[
										47431,
										47436
									],
									[
										47580,
										47585
									],
									[
										47628,
										47633
									],
									[
										47761,
										47766
									],
									[
										47829,
										47834
									],
									[
										48320,
										48325
									],
									[
										48945,
										48950
									],
									[
										49208,
										49213
									],
									[
										49554,
										49559
									],
									[
										49658,
										49663
									],
									[
										50089,
										50094
									],
									[
										50313,
										50318
									],
									[
										50550,
										50555
									],
									[
										50990,
										50995
									],
									[
										51214,
										51219
									],
									[
										51450,
										51455
									],
									[
										52074,
										52079
									],
									[
										52297,
										52302
									],
									[
										52533,
										52538
									],
									[
										52971,
										52976
									],
									[
										53194,
										53199
									],
									[
										53429,
										53434
									],
									[
										54049,
										54054
									],
									[
										54269,
										54274
									],
									[
										54502,
										54507
									],
									[
										54934,
										54939
									],
									[
										55154,
										55159
									],
									[
										55386,
										55391
									],
									[
										55850,
										55855
									],
									[
										56191,
										56196
									],
									[
										56586,
										56591
									],
									[
										56827,
										56832
									],
									[
										57205,
										57210
									],
									[
										57555,
										57560
									],
									[
										57917,
										57922
									],
									[
										58102,
										58107
									],
									[
										58558,
										58563
									],
									[
										58846,
										58851
									],
									[
										59194,
										59199
									],
									[
										59493,
										59498
									],
									[
										60002,
										60007
									],
									[
										60090,
										60095
									],
									[
										60690,
										60695
									],
									[
										61056,
										61061
									],
									[
										61415,
										61420
									],
									[
										61650,
										61655
									],
									[
										61871,
										61876
									],
									[
										62493,
										62498
									],
									[
										62917,
										62922
									],
									[
										63327,
										63332
									],
									[
										63569,
										63574
									],
									[
										63850,
										63855
									],
									[
										64181,
										64186
									],
									[
										64456,
										64461
									],
									[
										64775,
										64780
									],
									[
										65267,
										65272
									],
									[
										65686,
										65691
									],
									[
										66074,
										66079
									],
									[
										66271,
										66276
									],
									[
										66469,
										66474
									],
									[
										66667,
										66672
									],
									[
										66865,
										66870
									],
									[
										67063,
										67068
									],
									[
										67261,
										67266
									],
									[
										67459,
										67464
									],
									[
										67657,
										67662
									],
									[
										67855,
										67860
									],
									[
										68054,
										68059
									],
									[
										68253,
										68258
									],
									[
										68440,
										68445
									],
									[
										68489,
										68494
									],
									[
										68606,
										68611
									],
									[
										68781,
										68786
									],
									[
										69240,
										69245
									],
									[
										69406,
										69411
									],
									[
										69577,
										69582
									],
									[
										69754,
										69759
									],
									[
										69850,
										69855
									],
									[
										70250,
										70255
									],
									[
										70604,
										70609
									],
									[
										70989,
										70994
									],
									[
										71239,
										71244
									],
									[
										71304,
										71309
									],
									[
										71404,
										71409
									],
									[
										71485,
										71490
									],
									[
										71566,
										71571
									],
									[
										71647,
										71652
									],
									[
										71841,
										71846
									],
									[
										72180,
										72185
									],
									[
										72518,
										72523
									],
									[
										72890,
										72895
									],
									[
										73114,
										73119
									],
									[
										73454,
										73459
									],
									[
										73504,
										73509
									],
									[
										73622,
										73627
									],
									[
										73892,
										73897
									],
									[
										74296,
										74301
									],
									[
										74671,
										74676
									],
									[
										74988,
										74993
									],
									[
										75040,
										75045
									],
									[
										75404,
										75409
									],
									[
										75453,
										75458
									],
									[
										75570,
										75575
									],
									[
										75888,
										75893
									],
									[
										76334,
										76339
									],
									[
										76771,
										76776
									],
									[
										77181,
										77186
									],
									[
										77489,
										77494
									],
									[
										78027,
										78032
									],
									[
										78316,
										78321
									],
									[
										78402,
										78407
									],
									[
										78587,
										78592
									],
									[
										78766,
										78771
									],
									[
										78958,
										78963
									],
									[
										79308,
										79313
									],
									[
										79487,
										79492
									],
									[
										79678,
										79683
									],
									[
										80023,
										80028
									],
									[
										80201,
										80206
									],
									[
										80392,
										80397
									],
									[
										80740,
										80745
									],
									[
										80918,
										80923
									],
									[
										81108,
										81113
									],
									[
										81527,
										81532
									],
									[
										82018,
										82023
									],
									[
										82314,
										82319
									],
									[
										82614,
										82619
									],
									[
										82806,
										82811
									],
									[
										83074,
										83079
									],
									[
										83321,
										83326
									],
									[
										83523,
										83528
									],
									[
										83754,
										83759
									],
									[
										84012,
										84017
									],
									[
										84280,
										84285
									],
									[
										84604,
										84609
									],
									[
										84921,
										84926
									],
									[
										85174,
										85179
									],
									[
										85431,
										85436
									],
									[
										85683,
										85688
									],
									[
										85927,
										85932
									],
									[
										86181,
										86186
									],
									[
										86438,
										86443
									],
									[
										86689,
										86694
									],
									[
										86950,
										86955
									],
									[
										87379,
										87384
									],
									[
										87745,
										87750
									],
									[
										88136,
										88141
									],
									[
										88179,
										88184
									],
									[
										88298,
										88303
									],
									[
										88616,
										88621
									],
									[
										88984,
										88989
									],
									[
										89388,
										89393
									],
									[
										89997,
										90002
									],
									[
										90406,
										90411
									],
									[
										90803,
										90808
									],
									[
										91069,
										91074
									],
									[
										91350,
										91355
									],
									[
										91623,
										91628
									],
									[
										91898,
										91903
									],
									[
										92217,
										92222
									],
									[
										92423,
										92428
									],
									[
										92430,
										92435
									],
									[
										92781,
										92786
									],
									[
										92788,
										92793
									],
									[
										93157,
										93162
									],
									[
										93164,
										93169
									],
									[
										93611,
										93616
									],
									[
										93970,
										93975
									],
									[
										94339,
										94344
									],
									[
										94545,
										94550
									],
									[
										94888,
										94893
									],
									[
										95199,
										95204
									],
									[
										95516,
										95521
									],
									[
										95812,
										95817
									],
									[
										96391,
										96396
									],
									[
										96859,
										96864
									],
									[
										96908,
										96913
									],
									[
										97338,
										97343
									],
									[
										97790,
										97795
									],
									[
										98108,
										98113
									],
									[
										98581,
										98586
									],
									[
										99053,
										99058
									],
									[
										99376,
										99381
									],
									[
										99935,
										99940
									],
									[
										100038,
										100043
									],
									[
										100142,
										100147
									],
									[
										100416,
										100421
									],
									[
										100661,
										100666
									],
									[
										100942,
										100947
									],
									[
										101100,
										101105
									],
									[
										101382,
										101387
									],
									[
										101832,
										101837
									],
									[
										102205,
										102210
									],
									[
										102310,
										102315
									],
									[
										102740,
										102745
									],
									[
										103187,
										103192
									],
									[
										103393,
										103398
									],
									[
										103849,
										103854
									],
									[
										104195,
										104200
									],
									[
										104600,
										104605
									],
									[
										104828,
										104833
									],
									[
										105055,
										105060
									],
									[
										105136,
										105141
									],
									[
										105223,
										105228
									],
									[
										105528,
										105533
									],
									[
										105698,
										105703
									],
									[
										106045,
										106050
									],
									[
										106215,
										106220
									],
									[
										106549,
										106554
									],
									[
										106782,
										106787
									],
									[
										107013,
										107018
									],
									[
										107191,
										107196
									],
									[
										107433,
										107438
									],
									[
										107489,
										107494
									],
									[
										107640,
										107645
									],
									[
										107696,
										107701
									],
									[
										107964,
										107969
									],
									[
										108020,
										108025
									],
									[
										108171,
										108176
									],
									[
										108227,
										108232
									],
									[
										108359,
										108364
									],
									[
										108549,
										108554
									],
									[
										108907,
										108912
									],
									[
										109195,
										109200
									],
									[
										109414,
										109419
									],
									[
										109723,
										109728
									],
									[
										110144,
										110149
									],
									[
										110496,
										110501
									],
									[
										110851,
										110856
									],
									[
										111206,
										111211
									],
									[
										111573,
										111578
									],
									[
										111821,
										111826
									],
									[
										112067,
										112072
									],
									[
										112315,
										112320
									],
									[
										112817,
										112822
									],
									[
										113334,
										113339
									],
									[
										113951,
										113956
									],
									[
										114349,
										114354
									],
									[
										114747,
										114752
									],
									[
										115175,
										115180
									],
									[
										115654,
										115659
									],
									[
										115825,
										115830
									],
									[
										116189,
										116194
									],
									[
										116491,
										116496
									],
									[
										116595,
										116600
									],
									[
										116681,
										116686
									],
									[
										116807,
										116812
									],
									[
										117095,
										117100
									],
									[
										117237,
										117242
									],
									[
										117687,
										117692
									],
									[
										118200,
										118205
									],
									[
										118543,
										118548
									],
									[
										119014,
										119019
									],
									[
										119063,
										119068
									],
									[
										119508,
										119513
									],
									[
										120028,
										120033
									],
									[
										120551,
										120556
									],
									[
										120843,
										120848
									],
									[
										120998,
										121003
									],
									[
										121239,
										121244
									],
									[
										121471,
										121476
									],
									[
										121666,
										121671
									],
									[
										121707,
										121712
									],
									[
										121791,
										121796
									],
									[
										122013,
										122018
									],
									[
										122150,
										122155
									],
									[
										122253,
										122258
									],
									[
										122469,
										122474
									],
									[
										122506,
										122511
									],
									[
										122710,
										122715
									],
									[
										122925,
										122930
									],
									[
										123120,
										123125
									],
									[
										123247,
										123252
									],
									[
										123319,
										123324
									],
									[
										123374,
										123379
									],
									[
										123463,
										123468
									],
									[
										123498,
										123503
									],
									[
										123571,
										123576
									],
									[
										123626,
										123631
									],
									[
										123715,
										123720
									],
									[
										123750,
										123755
									],
									[
										123873,
										123878
									],
									[
										124099,
										124104
									],
									[
										124224,
										124229
									],
									[
										124335,
										124340
									],
									[
										124432,
										124437
									],
									[
										124519,
										124524
									],
									[
										124653,
										124658
									],
									[
										124740,
										124745
									],
									[
										124855,
										124860
									],
									[
										124999,
										125004
									],
									[
										125033,
										125038
									],
									[
										125256,
										125261
									],
									[
										125479,
										125484
									],
									[
										125509,
										125514
									],
									[
										125607,
										125612
									],
									[
										125652,
										125657
									],
									[
										125732,
										125737
									],
									[
										125767,
										125772
									],
									[
										125813,
										125818
									],
									[
										125914,
										125919
									],
									[
										125949,
										125954
									],
									[
										125995,
										126000
									],
									[
										126146,
										126151
									],
									[
										126412,
										126417
									],
									[
										126549,
										126554
									],
									[
										126787,
										126792
									],
									[
										126960,
										126965
									],
									[
										127198,
										127203
									],
									[
										127459,
										127464
									],
									[
										127503,
										127508
									],
									[
										127627,
										127632
									],
									[
										127676,
										127681
									],
									[
										127914,
										127919
									],
									[
										128182,
										128187
									],
									[
										128475,
										128480
									],
									[
										128614,
										128619
									],
									[
										128730,
										128735
									],
									[
										128967,
										128972
									],
									[
										129238,
										129243
									],
									[
										129325,
										129330
									],
									[
										129523,
										129528
									],
									[
										129563,
										129568
									],
									[
										129726,
										129731
									],
									[
										129904,
										129909
									],
									[
										130190,
										130195
									],
									[
										130309,
										130314
									],
									[
										130480,
										130485
									],
									[
										130580,
										130585
									],
									[
										130855,
										130860
									],
									[
										131097,
										131102
									],
									[
										131296,
										131301
									],
									[
										131414,
										131419
									],
									[
										131588,
										131593
									],
									[
										131762,
										131767
									],
									[
										131877,
										131882
									],
									[
										131974,
										131979
									],
									[
										132091,
										132096
									],
									[
										132240,
										132245
									],
									[
										132455,
										132460
									],
									[
										132623,
										132628
									],
									[
										132681,
										132686
									],
									[
										132739,
										132744
									],
									[
										132797,
										132802
									],
									[
										132855,
										132860
									],
									[
										132913,
										132918
									],
									[
										132971,
										132976
									],
									[
										133029,
										133034
									],
									[
										133087,
										133092
									],
									[
										133145,
										133150
									],
									[
										133193,
										133198
									],
									[
										133323,
										133328
									],
									[
										133387,
										133392
									],
									[
										133896,
										133907
									],
									[
										133944,
										133955
									],
									[
										133982,
										133993
									],
									[
										134049,
										134060
									],
									[
										134077,
										134088
									],
									[
										134687,
										134698
									],
									[
										134735,
										134746
									],
									[
										134773,
										134784
									],
									[
										134840,
										134851
									],
									[
										134868,
										134879
									],
									[
										135478,
										135489
									],
									[
										135526,
										135537
									],
									[
										135564,
										135575
									],
									[
										135631,
										135642
									],
									[
										135659,
										135670
									],
									[
										136272,
										136283
									],
									[
										136321,
										136332
									],
									[
										136359,
										136370
									],
									[
										136427,
										136438
									],
									[
										136455,
										136466
									],
									[
										137070,
										137081
									],
									[
										137119,
										137130
									],
									[
										137157,
										137168
									],
									[
										137225,
										137236
									],
									[
										137253,
										137264
									],
									[
										137868,
										137879
									],
									[
										137917,
										137928
									],
									[
										137955,
										137966
									],
									[
										138023,
										138034
									],
									[
										138051,
										138062
									],
									[
										138666,
										138677
									],
									[
										138715,
										138726
									],
									[
										138753,
										138764
									],
									[
										138821,
										138832
									],
									[
										138849,
										138860
									],
									[
										139461,
										139472
									],
									[
										139509,
										139520
									],
									[
										139547,
										139558
									],
									[
										139614,
										139625
									],
									[
										139642,
										139653
									],
									[
										140073,
										140084
									],
									[
										140409,
										140420
									],
									[
										140948,
										140959
									],
									[
										141188,
										141199
									],
									[
										141687,
										141698
									],
									[
										142045,
										142056
									],
									[
										142330,
										142341
									],
									[
										142809,
										142820
									],
									[
										143189,
										143200
									],
									[
										143858,
										143880
									],
									[
										144154,
										144176
									],
									[
										144344,
										144366
									],
									[
										144795,
										144817
									],
									[
										145180,
										145203
									],
									[
										145592,
										145615
									],
									[
										145759,
										145782
									],
									[
										146049,
										146072
									],
									[
										146371,
										146404
									],
									[
										146956,
										146989
									],
									[
										147316,
										147349
									],
									[
										147599,
										147632
									],
									[
										147959,
										147992
									],
									[
										148283,
										148316
									],
									[
										148856,
										148877
									],
									[
										149209,
										149230
									],
									[
										149371,
										149392
									],
									[
										149875,
										149896
									],
									[
										150560,
										150581
									],
									[
										150950,
										150971
									],
									[
										151411,
										151432
									],
									[
										151845,
										151866
									],
									[
										152148,
										152169
									],
									[
										152502,
										152523
									],
									[
										152802,
										152823
									],
									[
										153255,
										153269
									],
									[
										153432,
										153446
									],
									[
										153596,
										153610
									],
									[
										154129,
										154149
									],
									[
										154243,
										154263
									],
									[
										154319,
										154339
									],
									[
										154668,
										154688
									],
									[
										154984,
										155004
									],
									[
										155365,
										155372
									],
									[
										155422,
										155429
									],
									[
										155473,
										155480
									],
									[
										155514,
										155521
									],
									[
										155578,
										155585
									],
									[
										155609,
										155616
									],
									[
										155645,
										155652
									],
									[
										155686,
										155693
									],
									[
										155750,
										155757
									],
									[
										155791,
										155798
									],
									[
										155855,
										155862
									],
									[
										155896,
										155903
									],
									[
										155960,
										155967
									],
									[
										156001,
										156008
									],
									[
										156065,
										156072
									],
									[
										156116,
										156123
									],
									[
										156157,
										156164
									],
									[
										156221,
										156228
									],
									[
										156252,
										156259
									],
									[
										156288,
										156295
									],
									[
										156329,
										156336
									],
									[
										156393,
										156400
									],
									[
										156434,
										156441
									],
									[
										156498,
										156505
									],
									[
										156539,
										156546
									],
									[
										156603,
										156610
									],
									[
										156644,
										156651
									],
									[
										156708,
										156715
									],
									[
										156759,
										156766
									],
									[
										156800,
										156807
									],
									[
										156864,
										156871
									],
									[
										156895,
										156902
									],
									[
										156931,
										156938
									],
									[
										156972,
										156979
									],
									[
										157036,
										157043
									],
									[
										157077,
										157084
									],
									[
										157141,
										157148
									],
									[
										157182,
										157189
									],
									[
										157246,
										157253
									],
									[
										157287,
										157294
									],
									[
										157351,
										157358
									],
									[
										157403,
										157410
									],
									[
										157444,
										157451
									],
									[
										157508,
										157515
									],
									[
										157539,
										157546
									],
									[
										157575,
										157582
									],
									[
										157616,
										157623
									],
									[
										157680,
										157687
									],
									[
										157721,
										157728
									],
									[
										157785,
										157792
									],
									[
										157826,
										157833
									],
									[
										157890,
										157897
									],
									[
										157931,
										157938
									],
									[
										157995,
										158002
									],
									[
										158047,
										158054
									],
									[
										158088,
										158095
									],
									[
										158152,
										158159
									],
									[
										158183,
										158190
									],
									[
										158219,
										158226
									],
									[
										158260,
										158267
									],
									[
										158324,
										158331
									],
									[
										158365,
										158372
									],
									[
										158429,
										158436
									],
									[
										158470,
										158477
									],
									[
										158534,
										158541
									],
									[
										158575,
										158582
									],
									[
										158639,
										158646
									],
									[
										158691,
										158698
									],
									[
										158732,
										158739
									],
									[
										158796,
										158803
									],
									[
										158827,
										158834
									],
									[
										158863,
										158870
									],
									[
										158904,
										158911
									],
									[
										158968,
										158975
									],
									[
										159009,
										159016
									],
									[
										159073,
										159080
									],
									[
										159114,
										159121
									],
									[
										159178,
										159185
									],
									[
										159219,
										159226
									],
									[
										159283,
										159290
									],
									[
										159335,
										159342
									],
									[
										159376,
										159383
									],
									[
										159440,
										159447
									],
									[
										159471,
										159478
									],
									[
										159507,
										159514
									],
									[
										159548,
										159555
									],
									[
										159612,
										159619
									],
									[
										159653,
										159660
									],
									[
										159717,
										159724
									],
									[
										159758,
										159765
									],
									[
										159822,
										159829
									],
									[
										159863,
										159870
									],
									[
										159927,
										159934
									],
									[
										159979,
										159986
									],
									[
										160020,
										160027
									],
									[
										160084,
										160091
									],
									[
										160115,
										160122
									],
									[
										160151,
										160158
									],
									[
										160192,
										160199
									],
									[
										160256,
										160263
									],
									[
										160297,
										160304
									],
									[
										160361,
										160368
									],
									[
										160402,
										160409
									],
									[
										160466,
										160473
									],
									[
										160507,
										160514
									],
									[
										160607,
										160614
									],
									[
										160644,
										160651
									],
									[
										160676,
										160683
									],
									[
										160713,
										160720
									],
									[
										160745,
										160752
									],
									[
										160782,
										160789
									],
									[
										160814,
										160821
									],
									[
										160851,
										160858
									],
									[
										160883,
										160890
									],
									[
										160920,
										160927
									],
									[
										160952,
										160959
									],
									[
										160989,
										160996
									],
									[
										161021,
										161028
									],
									[
										161058,
										161065
									],
									[
										161090,
										161097
									],
									[
										161127,
										161134
									],
									[
										161198,
										161205
									],
									[
										161255,
										161262
									],
									[
										161306,
										161313
									],
									[
										161347,
										161354
									],
									[
										161411,
										161418
									],
									[
										161442,
										161449
									],
									[
										161478,
										161485
									],
									[
										161519,
										161526
									],
									[
										161583,
										161590
									],
									[
										161624,
										161631
									],
									[
										161688,
										161695
									],
									[
										161729,
										161736
									],
									[
										161793,
										161800
									],
									[
										161834,
										161841
									],
									[
										161898,
										161905
									],
									[
										161949,
										161956
									],
									[
										161990,
										161997
									],
									[
										162054,
										162061
									],
									[
										162085,
										162092
									],
									[
										162121,
										162128
									],
									[
										162162,
										162169
									],
									[
										162226,
										162233
									],
									[
										162267,
										162274
									],
									[
										162331,
										162338
									],
									[
										162372,
										162379
									],
									[
										162436,
										162443
									],
									[
										162477,
										162484
									],
									[
										162541,
										162548
									],
									[
										162592,
										162599
									],
									[
										162633,
										162640
									],
									[
										162697,
										162704
									],
									[
										162728,
										162735
									],
									[
										162765,
										162772
									],
									[
										162806,
										162813
									],
									[
										162870,
										162877
									],
									[
										162911,
										162918
									],
									[
										162975,
										162982
									],
									[
										163016,
										163023
									],
									[
										163080,
										163087
									],
									[
										163121,
										163128
									],
									[
										163185,
										163192
									],
									[
										163237,
										163244
									],
									[
										163278,
										163285
									],
									[
										163342,
										163349
									],
									[
										163373,
										163380
									],
									[
										163410,
										163417
									],
									[
										163451,
										163458
									],
									[
										163515,
										163522
									],
									[
										163556,
										163563
									],
									[
										163620,
										163627
									],
									[
										163661,
										163668
									],
									[
										163725,
										163732
									],
									[
										163766,
										163773
									],
									[
										163830,
										163837
									],
									[
										163882,
										163889
									],
									[
										163923,
										163930
									],
									[
										163987,
										163994
									],
									[
										164018,
										164025
									],
									[
										164055,
										164062
									],
									[
										164096,
										164103
									],
									[
										164160,
										164167
									],
									[
										164201,
										164208
									],
									[
										164265,
										164272
									],
									[
										164306,
										164313
									],
									[
										164370,
										164377
									],
									[
										164411,
										164418
									],
									[
										164475,
										164482
									],
									[
										164527,
										164534
									],
									[
										164568,
										164575
									],
									[
										164632,
										164639
									],
									[
										164663,
										164670
									],
									[
										164700,
										164707
									],
									[
										164741,
										164748
									],
									[
										164805,
										164812
									],
									[
										164846,
										164853
									],
									[
										164910,
										164917
									],
									[
										164951,
										164958
									],
									[
										165015,
										165022
									],
									[
										165056,
										165063
									],
									[
										165120,
										165127
									],
									[
										165172,
										165179
									],
									[
										165213,
										165220
									],
									[
										165277,
										165284
									],
									[
										165308,
										165315
									],
									[
										165345,
										165352
									],
									[
										165386,
										165393
									],
									[
										165450,
										165457
									],
									[
										165491,
										165498
									],
									[
										165555,
										165562
									],
									[
										165596,
										165603
									],
									[
										165660,
										165667
									],
									[
										165701,
										165708
									],
									[
										165765,
										165772
									],
									[
										165817,
										165824
									],
									[
										165858,
										165865
									],
									[
										165922,
										165929
									],
									[
										165953,
										165960
									],
									[
										165990,
										165997
									],
									[
										166031,
										166038
									],
									[
										166095,
										166102
									],
									[
										166136,
										166143
									],
									[
										166200,
										166207
									],
									[
										166241,
										166248
									],
									[
										166305,
										166312
									],
									[
										166346,
										166353
									],
									[
										166446,
										166453
									],
									[
										166483,
										166490
									],
									[
										166515,
										166522
									],
									[
										166552,
										166559
									],
									[
										166584,
										166591
									],
									[
										166621,
										166628
									],
									[
										166654,
										166661
									],
									[
										166691,
										166698
									],
									[
										166724,
										166731
									],
									[
										166761,
										166768
									],
									[
										166794,
										166801
									],
									[
										166831,
										166838
									],
									[
										166864,
										166871
									],
									[
										166901,
										166908
									],
									[
										166934,
										166941
									],
									[
										166971,
										166978
									],
									[
										167207,
										167214
									],
									[
										167605,
										167612
									],
									[
										167662,
										167669
									],
									[
										167713,
										167720
									],
									[
										167754,
										167761
									],
									[
										167818,
										167825
									],
									[
										167849,
										167856
									],
									[
										167885,
										167892
									],
									[
										167926,
										167933
									],
									[
										167990,
										167997
									],
									[
										168031,
										168038
									],
									[
										168095,
										168102
									],
									[
										168136,
										168143
									],
									[
										168200,
										168207
									],
									[
										168241,
										168248
									],
									[
										168305,
										168312
									],
									[
										168356,
										168363
									],
									[
										168397,
										168404
									],
									[
										168461,
										168468
									],
									[
										168492,
										168499
									],
									[
										168528,
										168535
									],
									[
										168569,
										168576
									],
									[
										168633,
										168640
									],
									[
										168674,
										168681
									],
									[
										168738,
										168745
									],
									[
										168779,
										168786
									],
									[
										168843,
										168850
									],
									[
										168884,
										168891
									],
									[
										168948,
										168955
									],
									[
										168999,
										169006
									],
									[
										169040,
										169047
									],
									[
										169104,
										169111
									],
									[
										169135,
										169142
									],
									[
										169171,
										169178
									],
									[
										169212,
										169219
									],
									[
										169276,
										169283
									],
									[
										169317,
										169324
									],
									[
										169381,
										169388
									],
									[
										169422,
										169429
									],
									[
										169486,
										169493
									],
									[
										169527,
										169534
									],
									[
										169591,
										169598
									],
									[
										169643,
										169650
									],
									[
										169684,
										169691
									],
									[
										169748,
										169755
									],
									[
										169779,
										169786
									],
									[
										169815,
										169822
									],
									[
										169856,
										169863
									],
									[
										169920,
										169927
									],
									[
										169961,
										169968
									],
									[
										170025,
										170032
									],
									[
										170066,
										170073
									],
									[
										170130,
										170137
									],
									[
										170171,
										170178
									],
									[
										170235,
										170242
									],
									[
										170287,
										170294
									],
									[
										170328,
										170335
									],
									[
										170392,
										170399
									],
									[
										170423,
										170430
									],
									[
										170459,
										170466
									],
									[
										170500,
										170507
									],
									[
										170564,
										170571
									],
									[
										170605,
										170612
									],
									[
										170669,
										170676
									],
									[
										170710,
										170717
									],
									[
										170774,
										170781
									],
									[
										170815,
										170822
									],
									[
										170879,
										170886
									],
									[
										170931,
										170938
									],
									[
										170972,
										170979
									],
									[
										171036,
										171043
									],
									[
										171067,
										171074
									],
									[
										171103,
										171110
									],
									[
										171144,
										171151
									],
									[
										171208,
										171215
									],
									[
										171249,
										171256
									],
									[
										171313,
										171320
									],
									[
										171354,
										171361
									],
									[
										171418,
										171425
									],
									[
										171459,
										171466
									],
									[
										171523,
										171530
									],
									[
										171575,
										171582
									],
									[
										171616,
										171623
									],
									[
										171680,
										171687
									],
									[
										171711,
										171718
									],
									[
										171747,
										171754
									],
									[
										171788,
										171795
									],
									[
										171852,
										171859
									],
									[
										171893,
										171900
									],
									[
										171957,
										171964
									],
									[
										171998,
										172005
									],
									[
										172062,
										172069
									],
									[
										172103,
										172110
									],
									[
										172167,
										172174
									],
									[
										172219,
										172226
									],
									[
										172260,
										172267
									],
									[
										172324,
										172331
									],
									[
										172355,
										172362
									],
									[
										172391,
										172398
									],
									[
										172432,
										172439
									],
									[
										172496,
										172503
									],
									[
										172537,
										172544
									],
									[
										172601,
										172608
									],
									[
										172642,
										172649
									],
									[
										172706,
										172713
									],
									[
										172747,
										172754
									],
									[
										172847,
										172854
									],
									[
										172884,
										172891
									],
									[
										172916,
										172923
									],
									[
										172953,
										172960
									],
									[
										172985,
										172992
									],
									[
										173022,
										173029
									],
									[
										173054,
										173061
									],
									[
										173091,
										173098
									],
									[
										173123,
										173130
									],
									[
										173160,
										173167
									],
									[
										173192,
										173199
									],
									[
										173229,
										173236
									],
									[
										173261,
										173268
									],
									[
										173298,
										173305
									],
									[
										173330,
										173337
									],
									[
										173367,
										173374
									],
									[
										173438,
										173445
									],
									[
										173495,
										173502
									],
									[
										173546,
										173553
									],
									[
										173587,
										173594
									],
									[
										173651,
										173658
									],
									[
										173682,
										173689
									],
									[
										173718,
										173725
									],
									[
										173759,
										173766
									],
									[
										173823,
										173830
									],
									[
										173864,
										173871
									],
									[
										173928,
										173935
									],
									[
										173969,
										173976
									],
									[
										174033,
										174040
									],
									[
										174074,
										174081
									],
									[
										174138,
										174145
									],
									[
										174189,
										174196
									],
									[
										174230,
										174237
									],
									[
										174294,
										174301
									],
									[
										174325,
										174332
									],
									[
										174361,
										174368
									],
									[
										174402,
										174409
									],
									[
										174466,
										174473
									],
									[
										174507,
										174514
									],
									[
										174571,
										174578
									],
									[
										174612,
										174619
									],
									[
										174676,
										174683
									],
									[
										174717,
										174724
									],
									[
										174781,
										174788
									],
									[
										174832,
										174839
									],
									[
										174873,
										174880
									],
									[
										174937,
										174944
									],
									[
										174968,
										174975
									],
									[
										175005,
										175012
									],
									[
										175046,
										175053
									],
									[
										175110,
										175117
									],
									[
										175151,
										175158
									],
									[
										175215,
										175222
									],
									[
										175256,
										175263
									],
									[
										175320,
										175327
									],
									[
										175361,
										175368
									],
									[
										175425,
										175432
									],
									[
										175477,
										175484
									],
									[
										175518,
										175525
									],
									[
										175582,
										175589
									],
									[
										175613,
										175620
									],
									[
										175650,
										175657
									],
									[
										175691,
										175698
									],
									[
										175755,
										175762
									],
									[
										175796,
										175803
									],
									[
										175860,
										175867
									],
									[
										175901,
										175908
									],
									[
										175965,
										175972
									],
									[
										176006,
										176013
									],
									[
										176070,
										176077
									],
									[
										176122,
										176129
									],
									[
										176163,
										176170
									],
									[
										176227,
										176234
									],
									[
										176258,
										176265
									],
									[
										176295,
										176302
									],
									[
										176336,
										176343
									],
									[
										176400,
										176407
									],
									[
										176441,
										176448
									],
									[
										176505,
										176512
									],
									[
										176546,
										176553
									],
									[
										176610,
										176617
									],
									[
										176651,
										176658
									],
									[
										176715,
										176722
									],
									[
										176767,
										176774
									],
									[
										176808,
										176815
									],
									[
										176872,
										176879
									],
									[
										176903,
										176910
									],
									[
										176940,
										176947
									],
									[
										176981,
										176988
									],
									[
										177045,
										177052
									],
									[
										177086,
										177093
									],
									[
										177150,
										177157
									],
									[
										177191,
										177198
									],
									[
										177255,
										177262
									],
									[
										177296,
										177303
									],
									[
										177360,
										177367
									],
									[
										177412,
										177419
									],
									[
										177453,
										177460
									],
									[
										177517,
										177524
									],
									[
										177548,
										177555
									],
									[
										177585,
										177592
									],
									[
										177626,
										177633
									],
									[
										177690,
										177697
									],
									[
										177731,
										177738
									],
									[
										177795,
										177802
									],
									[
										177836,
										177843
									],
									[
										177900,
										177907
									],
									[
										177941,
										177948
									],
									[
										178005,
										178012
									],
									[
										178057,
										178064
									],
									[
										178098,
										178105
									],
									[
										178162,
										178169
									],
									[
										178193,
										178200
									],
									[
										178230,
										178237
									],
									[
										178271,
										178278
									],
									[
										178335,
										178342
									],
									[
										178376,
										178383
									],
									[
										178440,
										178447
									],
									[
										178481,
										178488
									],
									[
										178545,
										178552
									],
									[
										178586,
										178593
									],
									[
										178686,
										178693
									],
									[
										178723,
										178730
									],
									[
										178755,
										178762
									],
									[
										178792,
										178799
									],
									[
										178824,
										178831
									],
									[
										178861,
										178868
									],
									[
										178894,
										178901
									],
									[
										178931,
										178938
									],
									[
										178964,
										178971
									],
									[
										179001,
										179008
									],
									[
										179034,
										179041
									],
									[
										179071,
										179078
									],
									[
										179104,
										179111
									],
									[
										179141,
										179148
									],
									[
										179174,
										179181
									],
									[
										179211,
										179218
									],
									[
										179447,
										179454
									],
									[
										179845,
										179852
									],
									[
										179902,
										179909
									],
									[
										179953,
										179960
									],
									[
										179994,
										180001
									],
									[
										180058,
										180065
									],
									[
										180089,
										180096
									],
									[
										180125,
										180132
									],
									[
										180166,
										180173
									],
									[
										180230,
										180237
									],
									[
										180271,
										180278
									],
									[
										180335,
										180342
									],
									[
										180376,
										180383
									],
									[
										180440,
										180447
									],
									[
										180481,
										180488
									],
									[
										180545,
										180552
									],
									[
										180596,
										180603
									],
									[
										180637,
										180644
									],
									[
										180701,
										180708
									],
									[
										180732,
										180739
									],
									[
										180768,
										180775
									],
									[
										180809,
										180816
									],
									[
										180873,
										180880
									],
									[
										180914,
										180921
									],
									[
										180978,
										180985
									],
									[
										181019,
										181026
									],
									[
										181083,
										181090
									],
									[
										181124,
										181131
									],
									[
										181188,
										181195
									],
									[
										181239,
										181246
									],
									[
										181280,
										181287
									],
									[
										181344,
										181351
									],
									[
										181375,
										181382
									],
									[
										181411,
										181418
									],
									[
										181452,
										181459
									],
									[
										181516,
										181523
									],
									[
										181557,
										181564
									],
									[
										181621,
										181628
									],
									[
										181662,
										181669
									],
									[
										181726,
										181733
									],
									[
										181767,
										181774
									],
									[
										181831,
										181838
									],
									[
										181883,
										181890
									],
									[
										181924,
										181931
									],
									[
										181988,
										181995
									],
									[
										182019,
										182026
									],
									[
										182055,
										182062
									],
									[
										182096,
										182103
									],
									[
										182160,
										182167
									],
									[
										182201,
										182208
									],
									[
										182265,
										182272
									],
									[
										182306,
										182313
									],
									[
										182370,
										182377
									],
									[
										182411,
										182418
									],
									[
										182475,
										182482
									],
									[
										182527,
										182534
									],
									[
										182568,
										182575
									],
									[
										182632,
										182639
									],
									[
										182663,
										182670
									],
									[
										182699,
										182706
									],
									[
										182740,
										182747
									],
									[
										182804,
										182811
									],
									[
										182845,
										182852
									],
									[
										182909,
										182916
									],
									[
										182950,
										182957
									],
									[
										183014,
										183021
									],
									[
										183055,
										183062
									],
									[
										183119,
										183126
									],
									[
										183171,
										183178
									],
									[
										183212,
										183219
									],
									[
										183276,
										183283
									],
									[
										183307,
										183314
									],
									[
										183343,
										183350
									],
									[
										183384,
										183391
									],
									[
										183448,
										183455
									],
									[
										183489,
										183496
									],
									[
										183553,
										183560
									],
									[
										183594,
										183601
									],
									[
										183658,
										183665
									],
									[
										183699,
										183706
									],
									[
										183763,
										183770
									],
									[
										183815,
										183822
									],
									[
										183856,
										183863
									],
									[
										183920,
										183927
									],
									[
										183951,
										183958
									],
									[
										183987,
										183994
									],
									[
										184028,
										184035
									],
									[
										184092,
										184099
									],
									[
										184133,
										184140
									],
									[
										184197,
										184204
									],
									[
										184238,
										184245
									],
									[
										184302,
										184309
									],
									[
										184343,
										184350
									],
									[
										184407,
										184414
									],
									[
										184459,
										184466
									],
									[
										184500,
										184507
									],
									[
										184564,
										184571
									],
									[
										184595,
										184602
									],
									[
										184631,
										184638
									],
									[
										184672,
										184679
									],
									[
										184736,
										184743
									],
									[
										184777,
										184784
									],
									[
										184841,
										184848
									],
									[
										184882,
										184889
									],
									[
										184946,
										184953
									],
									[
										184987,
										184994
									],
									[
										185087,
										185094
									],
									[
										185124,
										185131
									],
									[
										185156,
										185163
									],
									[
										185193,
										185200
									],
									[
										185225,
										185232
									],
									[
										185262,
										185269
									],
									[
										185294,
										185301
									],
									[
										185331,
										185338
									],
									[
										185363,
										185370
									],
									[
										185400,
										185407
									],
									[
										185432,
										185439
									],
									[
										185469,
										185476
									],
									[
										185501,
										185508
									],
									[
										185538,
										185545
									],
									[
										185570,
										185577
									],
									[
										185607,
										185614
									],
									[
										185678,
										185685
									],
									[
										185735,
										185742
									],
									[
										185786,
										185793
									],
									[
										185827,
										185834
									],
									[
										185891,
										185898
									],
									[
										185922,
										185929
									],
									[
										185958,
										185965
									],
									[
										185999,
										186006
									],
									[
										186063,
										186070
									],
									[
										186104,
										186111
									],
									[
										186168,
										186175
									],
									[
										186209,
										186216
									],
									[
										186273,
										186280
									],
									[
										186314,
										186321
									],
									[
										186378,
										186385
									],
									[
										186429,
										186436
									],
									[
										186470,
										186477
									],
									[
										186534,
										186541
									],
									[
										186565,
										186572
									],
									[
										186601,
										186608
									],
									[
										186642,
										186649
									],
									[
										186706,
										186713
									],
									[
										186747,
										186754
									],
									[
										186811,
										186818
									],
									[
										186852,
										186859
									],
									[
										186916,
										186923
									],
									[
										186957,
										186964
									],
									[
										187021,
										187028
									],
									[
										187072,
										187079
									],
									[
										187113,
										187120
									],
									[
										187177,
										187184
									],
									[
										187208,
										187215
									],
									[
										187245,
										187252
									],
									[
										187286,
										187293
									],
									[
										187350,
										187357
									],
									[
										187391,
										187398
									],
									[
										187455,
										187462
									],
									[
										187496,
										187503
									],
									[
										187560,
										187567
									],
									[
										187601,
										187608
									],
									[
										187665,
										187672
									],
									[
										187717,
										187724
									],
									[
										187758,
										187765
									],
									[
										187822,
										187829
									],
									[
										187853,
										187860
									],
									[
										187890,
										187897
									],
									[
										187931,
										187938
									],
									[
										187995,
										188002
									],
									[
										188036,
										188043
									],
									[
										188100,
										188107
									],
									[
										188141,
										188148
									],
									[
										188205,
										188212
									],
									[
										188246,
										188253
									],
									[
										188310,
										188317
									],
									[
										188362,
										188369
									],
									[
										188403,
										188410
									],
									[
										188467,
										188474
									],
									[
										188498,
										188505
									],
									[
										188535,
										188542
									],
									[
										188576,
										188583
									],
									[
										188640,
										188647
									],
									[
										188681,
										188688
									],
									[
										188745,
										188752
									],
									[
										188786,
										188793
									],
									[
										188850,
										188857
									],
									[
										188891,
										188898
									],
									[
										188955,
										188962
									],
									[
										189007,
										189014
									],
									[
										189048,
										189055
									],
									[
										189112,
										189119
									],
									[
										189143,
										189150
									],
									[
										189180,
										189187
									],
									[
										189221,
										189228
									],
									[
										189285,
										189292
									],
									[
										189326,
										189333
									],
									[
										189390,
										189397
									],
									[
										189431,
										189438
									],
									[
										189495,
										189502
									],
									[
										189536,
										189543
									],
									[
										189600,
										189607
									],
									[
										189652,
										189659
									],
									[
										189693,
										189700
									],
									[
										189757,
										189764
									],
									[
										189788,
										189795
									],
									[
										189825,
										189832
									],
									[
										189866,
										189873
									],
									[
										189930,
										189937
									],
									[
										189971,
										189978
									],
									[
										190035,
										190042
									],
									[
										190076,
										190083
									],
									[
										190140,
										190147
									],
									[
										190181,
										190188
									],
									[
										190245,
										190252
									],
									[
										190297,
										190304
									],
									[
										190338,
										190345
									],
									[
										190402,
										190409
									],
									[
										190433,
										190440
									],
									[
										190470,
										190477
									],
									[
										190511,
										190518
									],
									[
										190575,
										190582
									],
									[
										190616,
										190623
									],
									[
										190680,
										190687
									],
									[
										190721,
										190728
									],
									[
										190785,
										190792
									],
									[
										190826,
										190833
									],
									[
										190926,
										190933
									],
									[
										190963,
										190970
									],
									[
										190995,
										191002
									],
									[
										191032,
										191039
									],
									[
										191064,
										191071
									],
									[
										191101,
										191108
									],
									[
										191134,
										191141
									],
									[
										191171,
										191178
									],
									[
										191204,
										191211
									],
									[
										191241,
										191248
									],
									[
										191274,
										191281
									],
									[
										191311,
										191318
									],
									[
										191344,
										191351
									],
									[
										191381,
										191388
									],
									[
										191414,
										191421
									],
									[
										191451,
										191458
									],
									[
										191687,
										191694
									],
									[
										192085,
										192092
									],
									[
										192142,
										192149
									],
									[
										192193,
										192200
									],
									[
										192234,
										192241
									],
									[
										192298,
										192305
									],
									[
										192329,
										192336
									],
									[
										192365,
										192372
									],
									[
										192406,
										192413
									],
									[
										192470,
										192477
									],
									[
										192511,
										192518
									],
									[
										192575,
										192582
									],
									[
										192616,
										192623
									],
									[
										192680,
										192687
									],
									[
										192721,
										192728
									],
									[
										192785,
										192792
									],
									[
										192836,
										192843
									],
									[
										192877,
										192884
									],
									[
										192941,
										192948
									],
									[
										192972,
										192979
									],
									[
										193008,
										193015
									],
									[
										193049,
										193056
									],
									[
										193113,
										193120
									],
									[
										193154,
										193161
									],
									[
										193218,
										193225
									],
									[
										193259,
										193266
									],
									[
										193323,
										193330
									],
									[
										193364,
										193371
									],
									[
										193428,
										193435
									],
									[
										193479,
										193486
									],
									[
										193520,
										193527
									],
									[
										193584,
										193591
									],
									[
										193615,
										193622
									],
									[
										193651,
										193658
									],
									[
										193692,
										193699
									],
									[
										193756,
										193763
									],
									[
										193797,
										193804
									],
									[
										193861,
										193868
									],
									[
										193902,
										193909
									],
									[
										193966,
										193973
									],
									[
										194007,
										194014
									],
									[
										194071,
										194078
									],
									[
										194123,
										194130
									],
									[
										194164,
										194171
									],
									[
										194228,
										194235
									],
									[
										194259,
										194266
									],
									[
										194295,
										194302
									],
									[
										194336,
										194343
									],
									[
										194400,
										194407
									],
									[
										194441,
										194448
									],
									[
										194505,
										194512
									],
									[
										194546,
										194553
									],
									[
										194610,
										194617
									],
									[
										194651,
										194658
									],
									[
										194715,
										194722
									],
									[
										194767,
										194774
									],
									[
										194808,
										194815
									],
									[
										194872,
										194879
									],
									[
										194903,
										194910
									],
									[
										194939,
										194946
									],
									[
										194980,
										194987
									],
									[
										195044,
										195051
									],
									[
										195085,
										195092
									],
									[
										195149,
										195156
									],
									[
										195190,
										195197
									],
									[
										195254,
										195261
									],
									[
										195295,
										195302
									],
									[
										195359,
										195366
									],
									[
										195411,
										195418
									],
									[
										195452,
										195459
									],
									[
										195516,
										195523
									],
									[
										195547,
										195554
									],
									[
										195583,
										195590
									],
									[
										195624,
										195631
									],
									[
										195688,
										195695
									],
									[
										195729,
										195736
									],
									[
										195793,
										195800
									],
									[
										195834,
										195841
									],
									[
										195898,
										195905
									],
									[
										195939,
										195946
									],
									[
										196003,
										196010
									],
									[
										196055,
										196062
									],
									[
										196096,
										196103
									],
									[
										196160,
										196167
									],
									[
										196191,
										196198
									],
									[
										196227,
										196234
									],
									[
										196268,
										196275
									],
									[
										196332,
										196339
									],
									[
										196373,
										196380
									],
									[
										196437,
										196444
									],
									[
										196478,
										196485
									],
									[
										196542,
										196549
									],
									[
										196583,
										196590
									],
									[
										196647,
										196654
									],
									[
										196699,
										196706
									],
									[
										196740,
										196747
									],
									[
										196804,
										196811
									],
									[
										196835,
										196842
									],
									[
										196871,
										196878
									],
									[
										196912,
										196919
									],
									[
										196976,
										196983
									],
									[
										197017,
										197024
									],
									[
										197081,
										197088
									],
									[
										197122,
										197129
									],
									[
										197186,
										197193
									],
									[
										197227,
										197234
									],
									[
										197327,
										197334
									],
									[
										197364,
										197371
									],
									[
										197396,
										197403
									],
									[
										197433,
										197440
									],
									[
										197465,
										197472
									],
									[
										197502,
										197509
									],
									[
										197534,
										197541
									],
									[
										197571,
										197578
									],
									[
										197603,
										197610
									],
									[
										197640,
										197647
									],
									[
										197672,
										197679
									],
									[
										197709,
										197716
									],
									[
										197741,
										197748
									],
									[
										197778,
										197785
									],
									[
										197810,
										197817
									],
									[
										197847,
										197854
									],
									[
										197918,
										197925
									],
									[
										197975,
										197982
									],
									[
										198026,
										198033
									],
									[
										198067,
										198074
									],
									[
										198131,
										198138
									],
									[
										198162,
										198169
									],
									[
										198198,
										198205
									],
									[
										198239,
										198246
									],
									[
										198303,
										198310
									],
									[
										198344,
										198351
									],
									[
										198408,
										198415
									],
									[
										198449,
										198456
									],
									[
										198513,
										198520
									],
									[
										198554,
										198561
									],
									[
										198618,
										198625
									],
									[
										198669,
										198676
									],
									[
										198710,
										198717
									],
									[
										198774,
										198781
									],
									[
										198805,
										198812
									],
									[
										198841,
										198848
									],
									[
										198882,
										198889
									],
									[
										198946,
										198953
									],
									[
										198987,
										198994
									],
									[
										199051,
										199058
									],
									[
										199092,
										199099
									],
									[
										199156,
										199163
									],
									[
										199197,
										199204
									],
									[
										199261,
										199268
									],
									[
										199312,
										199319
									],
									[
										199353,
										199360
									],
									[
										199417,
										199424
									],
									[
										199448,
										199455
									],
									[
										199485,
										199492
									],
									[
										199526,
										199533
									],
									[
										199590,
										199597
									],
									[
										199631,
										199638
									],
									[
										199695,
										199702
									],
									[
										199736,
										199743
									],
									[
										199800,
										199807
									],
									[
										199841,
										199848
									],
									[
										199905,
										199912
									],
									[
										199957,
										199964
									],
									[
										199998,
										200005
									],
									[
										200062,
										200069
									],
									[
										200093,
										200100
									],
									[
										200130,
										200137
									],
									[
										200171,
										200178
									],
									[
										200235,
										200242
									],
									[
										200276,
										200283
									],
									[
										200340,
										200347
									],
									[
										200381,
										200388
									],
									[
										200445,
										200452
									],
									[
										200486,
										200493
									],
									[
										200550,
										200557
									],
									[
										200602,
										200609
									],
									[
										200643,
										200650
									],
									[
										200707,
										200714
									],
									[
										200738,
										200745
									],
									[
										200775,
										200782
									],
									[
										200816,
										200823
									],
									[
										200880,
										200887
									],
									[
										200921,
										200928
									],
									[
										200985,
										200992
									],
									[
										201026,
										201033
									],
									[
										201090,
										201097
									],
									[
										201131,
										201138
									],
									[
										201195,
										201202
									],
									[
										201247,
										201254
									],
									[
										201288,
										201295
									],
									[
										201352,
										201359
									],
									[
										201383,
										201390
									],
									[
										201420,
										201427
									],
									[
										201461,
										201468
									],
									[
										201525,
										201532
									],
									[
										201566,
										201573
									],
									[
										201630,
										201637
									],
									[
										201671,
										201678
									],
									[
										201735,
										201742
									],
									[
										201776,
										201783
									],
									[
										201840,
										201847
									],
									[
										201892,
										201899
									],
									[
										201933,
										201940
									],
									[
										201997,
										202004
									],
									[
										202028,
										202035
									],
									[
										202065,
										202072
									],
									[
										202106,
										202113
									],
									[
										202170,
										202177
									],
									[
										202211,
										202218
									],
									[
										202275,
										202282
									],
									[
										202316,
										202323
									],
									[
										202380,
										202387
									],
									[
										202421,
										202428
									],
									[
										202485,
										202492
									],
									[
										202537,
										202544
									],
									[
										202578,
										202585
									],
									[
										202642,
										202649
									],
									[
										202673,
										202680
									],
									[
										202710,
										202717
									],
									[
										202751,
										202758
									],
									[
										202815,
										202822
									],
									[
										202856,
										202863
									],
									[
										202920,
										202927
									],
									[
										202961,
										202968
									],
									[
										203025,
										203032
									],
									[
										203066,
										203073
									],
									[
										203166,
										203173
									],
									[
										203203,
										203210
									],
									[
										203235,
										203242
									],
									[
										203272,
										203279
									],
									[
										203304,
										203311
									],
									[
										203341,
										203348
									],
									[
										203374,
										203381
									],
									[
										203411,
										203418
									],
									[
										203444,
										203451
									],
									[
										203481,
										203488
									],
									[
										203514,
										203521
									],
									[
										203551,
										203558
									],
									[
										203584,
										203591
									],
									[
										203621,
										203628
									],
									[
										203654,
										203661
									],
									[
										203691,
										203698
									],
									[
										203927,
										203934
									],
									[
										204325,
										204332
									],
									[
										204382,
										204389
									],
									[
										204433,
										204440
									],
									[
										204474,
										204481
									],
									[
										204538,
										204545
									],
									[
										204569,
										204576
									],
									[
										204605,
										204612
									],
									[
										204646,
										204653
									],
									[
										204710,
										204717
									],
									[
										204751,
										204758
									],
									[
										204815,
										204822
									],
									[
										204856,
										204863
									],
									[
										204920,
										204927
									],
									[
										204961,
										204968
									],
									[
										205025,
										205032
									],
									[
										205076,
										205083
									],
									[
										205117,
										205124
									],
									[
										205181,
										205188
									],
									[
										205212,
										205219
									],
									[
										205248,
										205255
									],
									[
										205289,
										205296
									],
									[
										205353,
										205360
									],
									[
										205394,
										205401
									],
									[
										205458,
										205465
									],
									[
										205499,
										205506
									],
									[
										205563,
										205570
									],
									[
										205604,
										205611
									],
									[
										205668,
										205675
									],
									[
										205719,
										205726
									],
									[
										205760,
										205767
									],
									[
										205824,
										205831
									],
									[
										205855,
										205862
									],
									[
										205891,
										205898
									],
									[
										205932,
										205939
									],
									[
										205996,
										206003
									],
									[
										206037,
										206044
									],
									[
										206101,
										206108
									],
									[
										206142,
										206149
									],
									[
										206206,
										206213
									],
									[
										206247,
										206254
									],
									[
										206311,
										206318
									],
									[
										206363,
										206370
									],
									[
										206404,
										206411
									],
									[
										206468,
										206475
									],
									[
										206499,
										206506
									],
									[
										206535,
										206542
									],
									[
										206576,
										206583
									],
									[
										206640,
										206647
									],
									[
										206681,
										206688
									],
									[
										206745,
										206752
									],
									[
										206786,
										206793
									],
									[
										206850,
										206857
									],
									[
										206891,
										206898
									],
									[
										206955,
										206962
									],
									[
										207007,
										207014
									],
									[
										207048,
										207055
									],
									[
										207112,
										207119
									],
									[
										207143,
										207150
									],
									[
										207179,
										207186
									],
									[
										207220,
										207227
									],
									[
										207284,
										207291
									],
									[
										207325,
										207332
									],
									[
										207389,
										207396
									],
									[
										207430,
										207437
									],
									[
										207494,
										207501
									],
									[
										207535,
										207542
									],
									[
										207599,
										207606
									],
									[
										207651,
										207658
									],
									[
										207692,
										207699
									],
									[
										207756,
										207763
									],
									[
										207787,
										207794
									],
									[
										207823,
										207830
									],
									[
										207864,
										207871
									],
									[
										207928,
										207935
									],
									[
										207969,
										207976
									],
									[
										208033,
										208040
									],
									[
										208074,
										208081
									],
									[
										208138,
										208145
									],
									[
										208179,
										208186
									],
									[
										208243,
										208250
									],
									[
										208295,
										208302
									],
									[
										208336,
										208343
									],
									[
										208400,
										208407
									],
									[
										208431,
										208438
									],
									[
										208467,
										208474
									],
									[
										208508,
										208515
									],
									[
										208572,
										208579
									],
									[
										208613,
										208620
									],
									[
										208677,
										208684
									],
									[
										208718,
										208725
									],
									[
										208782,
										208789
									],
									[
										208823,
										208830
									],
									[
										208887,
										208894
									],
									[
										208939,
										208946
									],
									[
										208980,
										208987
									],
									[
										209044,
										209051
									],
									[
										209075,
										209082
									],
									[
										209111,
										209118
									],
									[
										209152,
										209159
									],
									[
										209216,
										209223
									],
									[
										209257,
										209264
									],
									[
										209321,
										209328
									],
									[
										209362,
										209369
									],
									[
										209426,
										209433
									],
									[
										209467,
										209474
									],
									[
										209567,
										209574
									],
									[
										209604,
										209611
									],
									[
										209636,
										209643
									],
									[
										209673,
										209680
									],
									[
										209705,
										209712
									],
									[
										209742,
										209749
									],
									[
										209774,
										209781
									],
									[
										209811,
										209818
									],
									[
										209843,
										209850
									],
									[
										209880,
										209887
									],
									[
										209912,
										209919
									],
									[
										209949,
										209956
									],
									[
										209981,
										209988
									],
									[
										210018,
										210025
									],
									[
										210050,
										210057
									],
									[
										210087,
										210094
									],
									[
										210158,
										210165
									],
									[
										210215,
										210222
									],
									[
										210266,
										210273
									],
									[
										210307,
										210314
									],
									[
										210371,
										210378
									],
									[
										210402,
										210409
									],
									[
										210438,
										210445
									],
									[
										210479,
										210486
									],
									[
										210543,
										210550
									],
									[
										210584,
										210591
									],
									[
										210648,
										210655
									],
									[
										210689,
										210696
									],
									[
										210753,
										210760
									],
									[
										210794,
										210801
									],
									[
										210858,
										210865
									],
									[
										210909,
										210916
									],
									[
										210950,
										210957
									],
									[
										211014,
										211021
									],
									[
										211045,
										211052
									],
									[
										211081,
										211088
									],
									[
										211122,
										211129
									],
									[
										211186,
										211193
									],
									[
										211227,
										211234
									],
									[
										211291,
										211298
									],
									[
										211332,
										211339
									],
									[
										211396,
										211403
									],
									[
										211437,
										211444
									],
									[
										211501,
										211508
									],
									[
										211552,
										211559
									],
									[
										211593,
										211600
									],
									[
										211657,
										211664
									],
									[
										211688,
										211695
									],
									[
										211725,
										211732
									],
									[
										211766,
										211773
									],
									[
										211830,
										211837
									],
									[
										211871,
										211878
									],
									[
										211935,
										211942
									],
									[
										211976,
										211983
									],
									[
										212040,
										212047
									],
									[
										212081,
										212088
									],
									[
										212145,
										212152
									],
									[
										212197,
										212204
									],
									[
										212238,
										212245
									],
									[
										212302,
										212309
									],
									[
										212333,
										212340
									],
									[
										212370,
										212377
									],
									[
										212411,
										212418
									],
									[
										212475,
										212482
									],
									[
										212516,
										212523
									],
									[
										212580,
										212587
									],
									[
										212621,
										212628
									],
									[
										212685,
										212692
									],
									[
										212726,
										212733
									],
									[
										212790,
										212797
									],
									[
										212842,
										212849
									],
									[
										212883,
										212890
									],
									[
										212947,
										212954
									],
									[
										212978,
										212985
									],
									[
										213015,
										213022
									],
									[
										213056,
										213063
									],
									[
										213120,
										213127
									],
									[
										213161,
										213168
									],
									[
										213225,
										213232
									],
									[
										213266,
										213273
									],
									[
										213330,
										213337
									],
									[
										213371,
										213378
									],
									[
										213435,
										213442
									],
									[
										213487,
										213494
									],
									[
										213528,
										213535
									],
									[
										213592,
										213599
									],
									[
										213623,
										213630
									],
									[
										213660,
										213667
									],
									[
										213701,
										213708
									],
									[
										213765,
										213772
									],
									[
										213806,
										213813
									],
									[
										213870,
										213877
									],
									[
										213911,
										213918
									],
									[
										213975,
										213982
									],
									[
										214016,
										214023
									],
									[
										214080,
										214087
									],
									[
										214132,
										214139
									],
									[
										214173,
										214180
									],
									[
										214237,
										214244
									],
									[
										214268,
										214275
									],
									[
										214305,
										214312
									],
									[
										214346,
										214353
									],
									[
										214410,
										214417
									],
									[
										214451,
										214458
									],
									[
										214515,
										214522
									],
									[
										214556,
										214563
									],
									[
										214620,
										214627
									],
									[
										214661,
										214668
									],
									[
										214725,
										214732
									],
									[
										214777,
										214784
									],
									[
										214818,
										214825
									],
									[
										214882,
										214889
									],
									[
										214913,
										214920
									],
									[
										214950,
										214957
									],
									[
										214991,
										214998
									],
									[
										215055,
										215062
									],
									[
										215096,
										215103
									],
									[
										215160,
										215167
									],
									[
										215201,
										215208
									],
									[
										215265,
										215272
									],
									[
										215306,
										215313
									],
									[
										215406,
										215413
									],
									[
										215443,
										215450
									],
									[
										215475,
										215482
									],
									[
										215512,
										215519
									],
									[
										215544,
										215551
									],
									[
										215581,
										215588
									],
									[
										215614,
										215621
									],
									[
										215651,
										215658
									],
									[
										215684,
										215691
									],
									[
										215721,
										215728
									],
									[
										215754,
										215761
									],
									[
										215791,
										215798
									],
									[
										215824,
										215831
									],
									[
										215861,
										215868
									],
									[
										215894,
										215901
									],
									[
										215931,
										215938
									],
									[
										216167,
										216174
									],
									[
										216565,
										216572
									],
									[
										216622,
										216629
									],
									[
										216673,
										216680
									],
									[
										216714,
										216721
									],
									[
										216778,
										216785
									],
									[
										216809,
										216816
									],
									[
										216845,
										216852
									],
									[
										216886,
										216893
									],
									[
										216950,
										216957
									],
									[
										216991,
										216998
									],
									[
										217055,
										217062
									],
									[
										217096,
										217103
									],
									[
										217160,
										217167
									],
									[
										217201,
										217208
									],
									[
										217265,
										217272
									],
									[
										217316,
										217323
									],
									[
										217357,
										217364
									],
									[
										217421,
										217428
									],
									[
										217452,
										217459
									],
									[
										217488,
										217495
									],
									[
										217529,
										217536
									],
									[
										217593,
										217600
									],
									[
										217634,
										217641
									],
									[
										217698,
										217705
									],
									[
										217739,
										217746
									],
									[
										217803,
										217810
									],
									[
										217844,
										217851
									],
									[
										217908,
										217915
									],
									[
										217959,
										217966
									],
									[
										218000,
										218007
									],
									[
										218064,
										218071
									],
									[
										218095,
										218102
									],
									[
										218131,
										218138
									],
									[
										218172,
										218179
									],
									[
										218236,
										218243
									],
									[
										218277,
										218284
									],
									[
										218341,
										218348
									],
									[
										218382,
										218389
									],
									[
										218446,
										218453
									],
									[
										218487,
										218494
									],
									[
										218551,
										218558
									],
									[
										218603,
										218610
									],
									[
										218644,
										218651
									],
									[
										218708,
										218715
									],
									[
										218739,
										218746
									],
									[
										218775,
										218782
									],
									[
										218816,
										218823
									],
									[
										218880,
										218887
									],
									[
										218921,
										218928
									],
									[
										218985,
										218992
									],
									[
										219026,
										219033
									],
									[
										219090,
										219097
									],
									[
										219131,
										219138
									],
									[
										219195,
										219202
									],
									[
										219247,
										219254
									],
									[
										219288,
										219295
									],
									[
										219352,
										219359
									],
									[
										219383,
										219390
									],
									[
										219419,
										219426
									],
									[
										219460,
										219467
									],
									[
										219524,
										219531
									],
									[
										219565,
										219572
									],
									[
										219629,
										219636
									],
									[
										219670,
										219677
									],
									[
										219734,
										219741
									],
									[
										219775,
										219782
									],
									[
										219839,
										219846
									],
									[
										219891,
										219898
									],
									[
										219932,
										219939
									],
									[
										219996,
										220003
									],
									[
										220027,
										220034
									],
									[
										220063,
										220070
									],
									[
										220104,
										220111
									],
									[
										220168,
										220175
									],
									[
										220209,
										220216
									],
									[
										220273,
										220280
									],
									[
										220314,
										220321
									],
									[
										220378,
										220385
									],
									[
										220419,
										220426
									],
									[
										220483,
										220490
									],
									[
										220535,
										220542
									],
									[
										220576,
										220583
									],
									[
										220640,
										220647
									],
									[
										220671,
										220678
									],
									[
										220707,
										220714
									],
									[
										220748,
										220755
									],
									[
										220812,
										220819
									],
									[
										220853,
										220860
									],
									[
										220917,
										220924
									],
									[
										220958,
										220965
									],
									[
										221022,
										221029
									],
									[
										221063,
										221070
									],
									[
										221127,
										221134
									],
									[
										221179,
										221186
									],
									[
										221220,
										221227
									],
									[
										221284,
										221291
									],
									[
										221315,
										221322
									],
									[
										221351,
										221358
									],
									[
										221392,
										221399
									],
									[
										221456,
										221463
									],
									[
										221497,
										221504
									],
									[
										221561,
										221568
									],
									[
										221602,
										221609
									],
									[
										221666,
										221673
									],
									[
										221707,
										221714
									],
									[
										221807,
										221814
									],
									[
										221844,
										221851
									],
									[
										221876,
										221883
									],
									[
										221913,
										221920
									],
									[
										221945,
										221952
									],
									[
										221982,
										221989
									],
									[
										222014,
										222021
									],
									[
										222051,
										222058
									],
									[
										222083,
										222090
									],
									[
										222120,
										222127
									],
									[
										222152,
										222159
									],
									[
										222189,
										222196
									],
									[
										222221,
										222228
									],
									[
										222258,
										222265
									],
									[
										222290,
										222297
									],
									[
										222327,
										222334
									],
									[
										222398,
										222405
									],
									[
										222455,
										222462
									],
									[
										222506,
										222513
									],
									[
										222547,
										222554
									],
									[
										222611,
										222618
									],
									[
										222642,
										222649
									],
									[
										222678,
										222685
									],
									[
										222719,
										222726
									],
									[
										222783,
										222790
									],
									[
										222824,
										222831
									],
									[
										222888,
										222895
									],
									[
										222929,
										222936
									],
									[
										222993,
										223000
									],
									[
										223034,
										223041
									],
									[
										223098,
										223105
									],
									[
										223149,
										223156
									],
									[
										223190,
										223197
									],
									[
										223254,
										223261
									],
									[
										223285,
										223292
									],
									[
										223321,
										223328
									],
									[
										223362,
										223369
									],
									[
										223426,
										223433
									],
									[
										223467,
										223474
									],
									[
										223531,
										223538
									],
									[
										223572,
										223579
									],
									[
										223636,
										223643
									],
									[
										223677,
										223684
									],
									[
										223741,
										223748
									],
									[
										223792,
										223799
									],
									[
										223833,
										223840
									],
									[
										223897,
										223904
									],
									[
										223928,
										223935
									],
									[
										223965,
										223972
									],
									[
										224006,
										224013
									],
									[
										224070,
										224077
									],
									[
										224111,
										224118
									],
									[
										224175,
										224182
									],
									[
										224216,
										224223
									],
									[
										224280,
										224287
									],
									[
										224321,
										224328
									],
									[
										224385,
										224392
									],
									[
										224437,
										224444
									],
									[
										224478,
										224485
									],
									[
										224542,
										224549
									],
									[
										224573,
										224580
									],
									[
										224610,
										224617
									],
									[
										224651,
										224658
									],
									[
										224715,
										224722
									],
									[
										224756,
										224763
									],
									[
										224820,
										224827
									],
									[
										224861,
										224868
									],
									[
										224925,
										224932
									],
									[
										224966,
										224973
									],
									[
										225030,
										225037
									],
									[
										225082,
										225089
									],
									[
										225123,
										225130
									],
									[
										225187,
										225194
									],
									[
										225218,
										225225
									],
									[
										225255,
										225262
									],
									[
										225296,
										225303
									],
									[
										225360,
										225367
									],
									[
										225401,
										225408
									],
									[
										225465,
										225472
									],
									[
										225506,
										225513
									],
									[
										225570,
										225577
									],
									[
										225611,
										225618
									],
									[
										225675,
										225682
									],
									[
										225727,
										225734
									],
									[
										225768,
										225775
									],
									[
										225832,
										225839
									],
									[
										225863,
										225870
									],
									[
										225900,
										225907
									],
									[
										225941,
										225948
									],
									[
										226005,
										226012
									],
									[
										226046,
										226053
									],
									[
										226110,
										226117
									],
									[
										226151,
										226158
									],
									[
										226215,
										226222
									],
									[
										226256,
										226263
									],
									[
										226320,
										226327
									],
									[
										226372,
										226379
									],
									[
										226413,
										226420
									],
									[
										226477,
										226484
									],
									[
										226508,
										226515
									],
									[
										226545,
										226552
									],
									[
										226586,
										226593
									],
									[
										226650,
										226657
									],
									[
										226691,
										226698
									],
									[
										226755,
										226762
									],
									[
										226796,
										226803
									],
									[
										226860,
										226867
									],
									[
										226901,
										226908
									],
									[
										226965,
										226972
									],
									[
										227017,
										227024
									],
									[
										227058,
										227065
									],
									[
										227122,
										227129
									],
									[
										227153,
										227160
									],
									[
										227190,
										227197
									],
									[
										227231,
										227238
									],
									[
										227295,
										227302
									],
									[
										227336,
										227343
									],
									[
										227400,
										227407
									],
									[
										227441,
										227448
									],
									[
										227505,
										227512
									],
									[
										227546,
										227553
									],
									[
										227646,
										227653
									],
									[
										227683,
										227690
									],
									[
										227715,
										227722
									],
									[
										227752,
										227759
									],
									[
										227784,
										227791
									],
									[
										227821,
										227828
									],
									[
										227854,
										227861
									],
									[
										227891,
										227898
									],
									[
										227924,
										227931
									],
									[
										227961,
										227968
									],
									[
										227994,
										228001
									],
									[
										228031,
										228038
									],
									[
										228064,
										228071
									],
									[
										228101,
										228108
									],
									[
										228134,
										228141
									],
									[
										228171,
										228178
									],
									[
										228407,
										228414
									],
									[
										228805,
										228812
									],
									[
										228862,
										228869
									],
									[
										228913,
										228920
									],
									[
										228954,
										228961
									],
									[
										229018,
										229025
									],
									[
										229049,
										229056
									],
									[
										229085,
										229092
									],
									[
										229126,
										229133
									],
									[
										229190,
										229197
									],
									[
										229231,
										229238
									],
									[
										229295,
										229302
									],
									[
										229336,
										229343
									],
									[
										229400,
										229407
									],
									[
										229441,
										229448
									],
									[
										229505,
										229512
									],
									[
										229556,
										229563
									],
									[
										229597,
										229604
									],
									[
										229661,
										229668
									],
									[
										229692,
										229699
									],
									[
										229728,
										229735
									],
									[
										229769,
										229776
									],
									[
										229833,
										229840
									],
									[
										229874,
										229881
									],
									[
										229938,
										229945
									],
									[
										229979,
										229986
									],
									[
										230043,
										230050
									],
									[
										230084,
										230091
									],
									[
										230148,
										230155
									],
									[
										230199,
										230206
									],
									[
										230240,
										230247
									],
									[
										230304,
										230311
									],
									[
										230335,
										230342
									],
									[
										230371,
										230378
									],
									[
										230412,
										230419
									],
									[
										230476,
										230483
									],
									[
										230517,
										230524
									],
									[
										230581,
										230588
									],
									[
										230622,
										230629
									],
									[
										230686,
										230693
									],
									[
										230727,
										230734
									],
									[
										230791,
										230798
									],
									[
										230843,
										230850
									],
									[
										230884,
										230891
									],
									[
										230948,
										230955
									],
									[
										230979,
										230986
									],
									[
										231015,
										231022
									],
									[
										231056,
										231063
									],
									[
										231120,
										231127
									],
									[
										231161,
										231168
									],
									[
										231225,
										231232
									],
									[
										231266,
										231273
									],
									[
										231330,
										231337
									],
									[
										231371,
										231378
									],
									[
										231435,
										231442
									],
									[
										231487,
										231494
									],
									[
										231528,
										231535
									],
									[
										231592,
										231599
									],
									[
										231623,
										231630
									],
									[
										231659,
										231666
									],
									[
										231700,
										231707
									],
									[
										231764,
										231771
									],
									[
										231805,
										231812
									],
									[
										231869,
										231876
									],
									[
										231910,
										231917
									],
									[
										231974,
										231981
									],
									[
										232015,
										232022
									],
									[
										232079,
										232086
									],
									[
										232131,
										232138
									],
									[
										232172,
										232179
									],
									[
										232236,
										232243
									],
									[
										232267,
										232274
									],
									[
										232303,
										232310
									],
									[
										232344,
										232351
									],
									[
										232408,
										232415
									],
									[
										232449,
										232456
									],
									[
										232513,
										232520
									],
									[
										232554,
										232561
									],
									[
										232618,
										232625
									],
									[
										232659,
										232666
									],
									[
										232723,
										232730
									],
									[
										232775,
										232782
									],
									[
										232816,
										232823
									],
									[
										232880,
										232887
									],
									[
										232911,
										232918
									],
									[
										232947,
										232954
									],
									[
										232988,
										232995
									],
									[
										233052,
										233059
									],
									[
										233093,
										233100
									],
									[
										233157,
										233164
									],
									[
										233198,
										233205
									],
									[
										233262,
										233269
									],
									[
										233303,
										233310
									],
									[
										233367,
										233374
									],
									[
										233419,
										233426
									],
									[
										233460,
										233467
									],
									[
										233524,
										233531
									],
									[
										233555,
										233562
									],
									[
										233591,
										233598
									],
									[
										233632,
										233639
									],
									[
										233696,
										233703
									],
									[
										233737,
										233744
									],
									[
										233801,
										233808
									],
									[
										233842,
										233849
									],
									[
										233906,
										233913
									],
									[
										233947,
										233954
									],
									[
										234047,
										234054
									],
									[
										234084,
										234091
									],
									[
										234116,
										234123
									],
									[
										234153,
										234160
									],
									[
										234185,
										234192
									],
									[
										234222,
										234229
									],
									[
										234254,
										234261
									],
									[
										234291,
										234298
									],
									[
										234323,
										234330
									],
									[
										234360,
										234367
									],
									[
										234392,
										234399
									],
									[
										234429,
										234436
									],
									[
										234461,
										234468
									],
									[
										234498,
										234505
									],
									[
										234530,
										234537
									],
									[
										234567,
										234574
									],
									[
										234638,
										234645
									],
									[
										234695,
										234702
									],
									[
										234746,
										234753
									],
									[
										234787,
										234794
									],
									[
										234851,
										234858
									],
									[
										234882,
										234889
									],
									[
										234918,
										234925
									],
									[
										234959,
										234966
									],
									[
										235023,
										235030
									],
									[
										235064,
										235071
									],
									[
										235128,
										235135
									],
									[
										235169,
										235176
									],
									[
										235233,
										235240
									],
									[
										235274,
										235281
									],
									[
										235338,
										235345
									],
									[
										235389,
										235396
									],
									[
										235430,
										235437
									],
									[
										235494,
										235501
									],
									[
										235525,
										235532
									],
									[
										235561,
										235568
									],
									[
										235602,
										235609
									],
									[
										235666,
										235673
									],
									[
										235707,
										235714
									],
									[
										235771,
										235778
									],
									[
										235812,
										235819
									],
									[
										235876,
										235883
									],
									[
										235917,
										235924
									],
									[
										235981,
										235988
									],
									[
										236032,
										236039
									],
									[
										236073,
										236080
									],
									[
										236137,
										236144
									],
									[
										236168,
										236175
									],
									[
										236205,
										236212
									],
									[
										236246,
										236253
									],
									[
										236310,
										236317
									],
									[
										236351,
										236358
									],
									[
										236415,
										236422
									],
									[
										236456,
										236463
									],
									[
										236520,
										236527
									],
									[
										236561,
										236568
									],
									[
										236625,
										236632
									],
									[
										236677,
										236684
									],
									[
										236718,
										236725
									],
									[
										236782,
										236789
									],
									[
										236813,
										236820
									],
									[
										236850,
										236857
									],
									[
										236891,
										236898
									],
									[
										236955,
										236962
									],
									[
										236996,
										237003
									],
									[
										237060,
										237067
									],
									[
										237101,
										237108
									],
									[
										237165,
										237172
									],
									[
										237206,
										237213
									],
									[
										237270,
										237277
									],
									[
										237322,
										237329
									],
									[
										237363,
										237370
									],
									[
										237427,
										237434
									],
									[
										237458,
										237465
									],
									[
										237495,
										237502
									],
									[
										237536,
										237543
									],
									[
										237600,
										237607
									],
									[
										237641,
										237648
									],
									[
										237705,
										237712
									],
									[
										237746,
										237753
									],
									[
										237810,
										237817
									],
									[
										237851,
										237858
									],
									[
										237915,
										237922
									],
									[
										237967,
										237974
									],
									[
										238008,
										238015
									],
									[
										238072,
										238079
									],
									[
										238103,
										238110
									],
									[
										238140,
										238147
									],
									[
										238181,
										238188
									],
									[
										238245,
										238252
									],
									[
										238286,
										238293
									],
									[
										238350,
										238357
									],
									[
										238391,
										238398
									],
									[
										238455,
										238462
									],
									[
										238496,
										238503
									],
									[
										238560,
										238567
									],
									[
										238612,
										238619
									],
									[
										238653,
										238660
									],
									[
										238717,
										238724
									],
									[
										238748,
										238755
									],
									[
										238785,
										238792
									],
									[
										238826,
										238833
									],
									[
										238890,
										238897
									],
									[
										238931,
										238938
									],
									[
										238995,
										239002
									],
									[
										239036,
										239043
									],
									[
										239100,
										239107
									],
									[
										239141,
										239148
									],
									[
										239205,
										239212
									],
									[
										239257,
										239264
									],
									[
										239298,
										239305
									],
									[
										239362,
										239369
									],
									[
										239393,
										239400
									],
									[
										239430,
										239437
									],
									[
										239471,
										239478
									],
									[
										239535,
										239542
									],
									[
										239576,
										239583
									],
									[
										239640,
										239647
									],
									[
										239681,
										239688
									],
									[
										239745,
										239752
									],
									[
										239786,
										239793
									],
									[
										239886,
										239893
									],
									[
										239923,
										239930
									],
									[
										239955,
										239962
									],
									[
										239992,
										239999
									],
									[
										240024,
										240031
									],
									[
										240061,
										240068
									],
									[
										240094,
										240101
									],
									[
										240131,
										240138
									],
									[
										240164,
										240171
									],
									[
										240201,
										240208
									],
									[
										240234,
										240241
									],
									[
										240271,
										240278
									],
									[
										240304,
										240311
									],
									[
										240341,
										240348
									],
									[
										240374,
										240381
									],
									[
										240411,
										240418
									],
									[
										240647,
										240654
									],
									[
										241045,
										241052
									],
									[
										241102,
										241109
									],
									[
										241153,
										241160
									],
									[
										241194,
										241201
									],
									[
										241258,
										241265
									],
									[
										241289,
										241296
									],
									[
										241325,
										241332
									],
									[
										241366,
										241373
									],
									[
										241430,
										241437
									],
									[
										241471,
										241478
									],
									[
										241535,
										241542
									],
									[
										241576,
										241583
									],
									[
										241640,
										241647
									],
									[
										241681,
										241688
									],
									[
										241745,
										241752
									],
									[
										241796,
										241803
									],
									[
										241837,
										241844
									],
									[
										241901,
										241908
									],
									[
										241932,
										241939
									],
									[
										241968,
										241975
									],
									[
										242009,
										242016
									],
									[
										242073,
										242080
									],
									[
										242114,
										242121
									],
									[
										242178,
										242185
									],
									[
										242219,
										242226
									],
									[
										242283,
										242290
									],
									[
										242324,
										242331
									],
									[
										242388,
										242395
									],
									[
										242439,
										242446
									],
									[
										242480,
										242487
									],
									[
										242544,
										242551
									],
									[
										242575,
										242582
									],
									[
										242611,
										242618
									],
									[
										242652,
										242659
									],
									[
										242716,
										242723
									],
									[
										242757,
										242764
									],
									[
										242821,
										242828
									],
									[
										242862,
										242869
									],
									[
										242926,
										242933
									],
									[
										242967,
										242974
									],
									[
										243031,
										243038
									],
									[
										243083,
										243090
									],
									[
										243124,
										243131
									],
									[
										243188,
										243195
									],
									[
										243219,
										243226
									],
									[
										243255,
										243262
									],
									[
										243296,
										243303
									],
									[
										243360,
										243367
									],
									[
										243401,
										243408
									],
									[
										243465,
										243472
									],
									[
										243506,
										243513
									],
									[
										243570,
										243577
									],
									[
										243611,
										243618
									],
									[
										243675,
										243682
									],
									[
										243727,
										243734
									],
									[
										243768,
										243775
									],
									[
										243832,
										243839
									],
									[
										243863,
										243870
									],
									[
										243899,
										243906
									],
									[
										243940,
										243947
									],
									[
										244004,
										244011
									],
									[
										244045,
										244052
									],
									[
										244109,
										244116
									],
									[
										244150,
										244157
									],
									[
										244214,
										244221
									],
									[
										244255,
										244262
									],
									[
										244319,
										244326
									],
									[
										244371,
										244378
									],
									[
										244412,
										244419
									],
									[
										244476,
										244483
									],
									[
										244507,
										244514
									],
									[
										244543,
										244550
									],
									[
										244584,
										244591
									],
									[
										244648,
										244655
									],
									[
										244689,
										244696
									],
									[
										244753,
										244760
									],
									[
										244794,
										244801
									],
									[
										244858,
										244865
									],
									[
										244899,
										244906
									],
									[
										244963,
										244970
									],
									[
										245015,
										245022
									],
									[
										245056,
										245063
									],
									[
										245120,
										245127
									],
									[
										245151,
										245158
									],
									[
										245187,
										245194
									],
									[
										245228,
										245235
									],
									[
										245292,
										245299
									],
									[
										245333,
										245340
									],
									[
										245397,
										245404
									],
									[
										245438,
										245445
									],
									[
										245502,
										245509
									],
									[
										245543,
										245550
									],
									[
										245607,
										245614
									],
									[
										245659,
										245666
									],
									[
										245700,
										245707
									],
									[
										245764,
										245771
									],
									[
										245795,
										245802
									],
									[
										245831,
										245838
									],
									[
										245872,
										245879
									],
									[
										245936,
										245943
									],
									[
										245977,
										245984
									],
									[
										246041,
										246048
									],
									[
										246082,
										246089
									],
									[
										246146,
										246153
									],
									[
										246187,
										246194
									],
									[
										246287,
										246294
									],
									[
										246324,
										246331
									],
									[
										246356,
										246363
									],
									[
										246393,
										246400
									],
									[
										246425,
										246432
									],
									[
										246462,
										246469
									],
									[
										246494,
										246501
									],
									[
										246531,
										246538
									],
									[
										246563,
										246570
									],
									[
										246600,
										246607
									],
									[
										246632,
										246639
									],
									[
										246669,
										246676
									],
									[
										246701,
										246708
									],
									[
										246738,
										246745
									],
									[
										246770,
										246777
									],
									[
										246807,
										246814
									],
									[
										246878,
										246885
									],
									[
										246935,
										246942
									],
									[
										246986,
										246993
									],
									[
										247027,
										247034
									],
									[
										247091,
										247098
									],
									[
										247122,
										247129
									],
									[
										247158,
										247165
									],
									[
										247199,
										247206
									],
									[
										247263,
										247270
									],
									[
										247304,
										247311
									],
									[
										247368,
										247375
									],
									[
										247409,
										247416
									],
									[
										247473,
										247480
									],
									[
										247514,
										247521
									],
									[
										247578,
										247585
									],
									[
										247629,
										247636
									],
									[
										247670,
										247677
									],
									[
										247734,
										247741
									],
									[
										247765,
										247772
									],
									[
										247801,
										247808
									],
									[
										247842,
										247849
									],
									[
										247906,
										247913
									],
									[
										247947,
										247954
									],
									[
										248011,
										248018
									],
									[
										248052,
										248059
									],
									[
										248116,
										248123
									],
									[
										248157,
										248164
									],
									[
										248221,
										248228
									],
									[
										248272,
										248279
									],
									[
										248313,
										248320
									],
									[
										248377,
										248384
									],
									[
										248408,
										248415
									],
									[
										248445,
										248452
									],
									[
										248486,
										248493
									],
									[
										248550,
										248557
									],
									[
										248591,
										248598
									],
									[
										248655,
										248662
									],
									[
										248696,
										248703
									],
									[
										248760,
										248767
									],
									[
										248801,
										248808
									],
									[
										248865,
										248872
									],
									[
										248917,
										248924
									],
									[
										248958,
										248965
									],
									[
										249022,
										249029
									],
									[
										249053,
										249060
									],
									[
										249090,
										249097
									],
									[
										249131,
										249138
									],
									[
										249195,
										249202
									],
									[
										249236,
										249243
									],
									[
										249300,
										249307
									],
									[
										249341,
										249348
									],
									[
										249405,
										249412
									],
									[
										249446,
										249453
									],
									[
										249510,
										249517
									],
									[
										249562,
										249569
									],
									[
										249603,
										249610
									],
									[
										249667,
										249674
									],
									[
										249698,
										249705
									],
									[
										249735,
										249742
									],
									[
										249776,
										249783
									],
									[
										249840,
										249847
									],
									[
										249881,
										249888
									],
									[
										249945,
										249952
									],
									[
										249986,
										249993
									],
									[
										250050,
										250057
									],
									[
										250091,
										250098
									],
									[
										250155,
										250162
									],
									[
										250207,
										250214
									],
									[
										250248,
										250255
									],
									[
										250312,
										250319
									],
									[
										250343,
										250350
									],
									[
										250380,
										250387
									],
									[
										250421,
										250428
									],
									[
										250485,
										250492
									],
									[
										250526,
										250533
									],
									[
										250590,
										250597
									],
									[
										250631,
										250638
									],
									[
										250695,
										250702
									],
									[
										250736,
										250743
									],
									[
										250800,
										250807
									],
									[
										250852,
										250859
									],
									[
										250893,
										250900
									],
									[
										250957,
										250964
									],
									[
										250988,
										250995
									],
									[
										251025,
										251032
									],
									[
										251066,
										251073
									],
									[
										251130,
										251137
									],
									[
										251171,
										251178
									],
									[
										251235,
										251242
									],
									[
										251276,
										251283
									],
									[
										251340,
										251347
									],
									[
										251381,
										251388
									],
									[
										251445,
										251452
									],
									[
										251497,
										251504
									],
									[
										251538,
										251545
									],
									[
										251602,
										251609
									],
									[
										251633,
										251640
									],
									[
										251670,
										251677
									],
									[
										251711,
										251718
									],
									[
										251775,
										251782
									],
									[
										251816,
										251823
									],
									[
										251880,
										251887
									],
									[
										251921,
										251928
									],
									[
										251985,
										251992
									],
									[
										252026,
										252033
									],
									[
										252126,
										252133
									],
									[
										252163,
										252170
									],
									[
										252195,
										252202
									],
									[
										252232,
										252239
									],
									[
										252264,
										252271
									],
									[
										252301,
										252308
									],
									[
										252334,
										252341
									],
									[
										252371,
										252378
									],
									[
										252404,
										252411
									],
									[
										252441,
										252448
									],
									[
										252474,
										252481
									],
									[
										252511,
										252518
									],
									[
										252544,
										252551
									],
									[
										252581,
										252588
									],
									[
										252614,
										252621
									],
									[
										252651,
										252658
									],
									[
										252887,
										252894
									],
									[
										253229,
										253236
									],
									[
										253348,
										253355
									],
									[
										253467,
										253474
									],
									[
										253586,
										253593
									],
									[
										253771,
										253778
									],
									[
										253891,
										253898
									],
									[
										254011,
										254018
									],
									[
										254106,
										254113
									],
									[
										254201,
										254208
									],
									[
										254311,
										254318
									],
									[
										254406,
										254413
									],
									[
										254501,
										254508
									],
									[
										254662,
										254669
									],
									[
										254756,
										254763
									],
									[
										254850,
										254857
									],
									[
										254944,
										254951
									],
									[
										255063,
										255070
									],
									[
										255182,
										255189
									],
									[
										255276,
										255283
									],
									[
										255370,
										255377
									],
									[
										255490,
										255497
									],
									[
										255610,
										255617
									],
									[
										255720,
										255727
									],
									[
										255830,
										255837
									],
									[
										255966,
										255973
									],
									[
										256076,
										256083
									],
									[
										256212,
										256219
									],
									[
										256306,
										256313
									],
									[
										256466,
										256473
									],
									[
										256588,
										256595
									],
									[
										256710,
										256717
									],
									[
										256806,
										256813
									],
									[
										256927,
										256934
									],
									[
										257075,
										257082
									],
									[
										257226,
										257233
									],
									[
										257350,
										257357
									],
									[
										257446,
										257453
									],
									[
										257540,
										257547
									],
									[
										257700,
										257707
									],
									[
										257796,
										257803
									],
									[
										257892,
										257899
									],
									[
										257988,
										257995
									],
									[
										258084,
										258091
									],
									[
										258193,
										258200
									],
									[
										258289,
										258296
									],
									[
										258385,
										258392
									],
									[
										258506,
										258513
									],
									[
										258688,
										258695
									],
									[
										258787,
										258794
									],
									[
										258911,
										258918
									],
									[
										259035,
										259042
									],
									[
										259134,
										259141
									],
									[
										259233,
										259240
									],
									[
										259342,
										259349
									],
									[
										259467,
										259474
									],
									[
										259592,
										259599
									],
									[
										259757,
										259764
									],
									[
										259856,
										259863
									],
									[
										259955,
										259962
									],
									[
										260079,
										260086
									],
									[
										260203,
										260210
									],
									[
										260328,
										260335
									],
									[
										260453,
										260460
									],
									[
										260562,
										260569
									],
									[
										260671,
										260678
									],
									[
										260780,
										260787
									],
									[
										260879,
										260886
									],
									[
										261044,
										261051
									],
									[
										261140,
										261147
									],
									[
										261236,
										261243
									],
									[
										261358,
										261365
									],
									[
										261506,
										261513
									],
									[
										261654,
										261661
									],
									[
										261837,
										261844
									],
									[
										261933,
										261940
									],
									[
										262029,
										262036
									],
									[
										262125,
										262132
									],
									[
										262247,
										262254
									],
									[
										262395,
										262402
									],
									[
										262543,
										262550
									],
									[
										262665,
										262672
									],
									[
										262786,
										262793
									],
									[
										262907,
										262914
									],
									[
										263003,
										263010
									],
									[
										263125,
										263132
									],
									[
										263308,
										263315
									],
									[
										263404,
										263411
									],
									[
										263500,
										263507
									],
									[
										263596,
										263603
									],
									[
										263706,
										263713
									],
									[
										263816,
										263823
									],
									[
										263926,
										263933
									],
									[
										264049,
										264056
									],
									[
										264234,
										264241
									],
									[
										264330,
										264337
									],
									[
										264426,
										264433
									],
									[
										264522,
										264529
									],
									[
										264618,
										264625
									],
									[
										264714,
										264721
									],
									[
										264825,
										264832
									],
									[
										264964,
										264971
									],
									[
										265165,
										265172
									],
									[
										265288,
										265295
									],
									[
										265411,
										265418
									],
									[
										265507,
										265514
									],
									[
										265603,
										265610
									],
									[
										265712,
										265719
									],
									[
										265875,
										265882
									],
									[
										265971,
										265978
									],
									[
										266067,
										266074
									],
									[
										266176,
										266183
									],
									[
										266312,
										266319
									],
									[
										266465,
										266472
									],
									[
										266591,
										266598
									],
									[
										266749,
										266756
									],
									[
										266872,
										266879
									],
									[
										267033,
										267040
									],
									[
										267128,
										267135
									],
									[
										267224,
										267231
									],
									[
										267319,
										267326
									],
									[
										267413,
										267420
									],
									[
										267538,
										267545
									],
									[
										267725,
										267732
									],
									[
										267833,
										267840
									],
									[
										268052,
										268059
									],
									[
										268151,
										268158
									],
									[
										268250,
										268257
									],
									[
										268349,
										268356
									],
									[
										268448,
										268455
									],
									[
										268547,
										268554
									],
									[
										268646,
										268653
									],
									[
										268745,
										268752
									],
									[
										268844,
										268851
									],
									[
										268943,
										268950
									],
									[
										269042,
										269049
									],
									[
										269142,
										269149
									],
									[
										269242,
										269249
									],
									[
										269342,
										269349
									],
									[
										269442,
										269449
									],
									[
										269542,
										269549
									],
									[
										269810,
										269817
									],
									[
										269852,
										269859
									],
									[
										269894,
										269901
									],
									[
										269936,
										269943
									],
									[
										269978,
										269985
									],
									[
										270020,
										270027
									],
									[
										270062,
										270069
									],
									[
										270104,
										270111
									],
									[
										270146,
										270153
									],
									[
										270188,
										270195
									],
									[
										270230,
										270237
									],
									[
										270273,
										270280
									],
									[
										270316,
										270323
									],
									[
										270359,
										270366
									],
									[
										270402,
										270409
									],
									[
										270445,
										270452
									],
									[
										270641,
										270648
									],
									[
										270910,
										270917
									],
									[
										270952,
										270959
									],
									[
										270994,
										271001
									],
									[
										271036,
										271043
									],
									[
										271078,
										271085
									],
									[
										271120,
										271127
									],
									[
										271162,
										271169
									],
									[
										271204,
										271211
									],
									[
										271246,
										271253
									],
									[
										271288,
										271295
									],
									[
										271330,
										271337
									],
									[
										271373,
										271380
									],
									[
										271416,
										271423
									],
									[
										271459,
										271466
									],
									[
										271502,
										271509
									],
									[
										271545,
										271552
									],
									[
										271753,
										271760
									],
									[
										272009,
										272016
									],
									[
										272051,
										272058
									],
									[
										272093,
										272100
									],
									[
										272135,
										272142
									],
									[
										272177,
										272184
									],
									[
										272219,
										272226
									],
									[
										272261,
										272268
									],
									[
										272303,
										272310
									],
									[
										272345,
										272352
									],
									[
										272387,
										272394
									],
									[
										272429,
										272436
									],
									[
										272472,
										272479
									],
									[
										272515,
										272522
									],
									[
										272558,
										272565
									],
									[
										272601,
										272608
									],
									[
										272644,
										272651
									],
									[
										272841,
										272848
									],
									[
										273123,
										273130
									],
									[
										273165,
										273172
									],
									[
										273207,
										273214
									],
									[
										273249,
										273256
									],
									[
										273291,
										273298
									],
									[
										273333,
										273340
									],
									[
										273375,
										273382
									],
									[
										273417,
										273424
									],
									[
										273459,
										273466
									],
									[
										273501,
										273508
									],
									[
										273543,
										273550
									],
									[
										273586,
										273593
									],
									[
										273629,
										273636
									],
									[
										273672,
										273679
									],
									[
										273715,
										273722
									],
									[
										273758,
										273765
									],
									[
										273967,
										273974
									],
									[
										274248,
										274255
									],
									[
										274290,
										274297
									],
									[
										274320,
										274327
									],
									[
										274362,
										274369
									],
									[
										274442,
										274449
									],
									[
										274484,
										274491
									],
									[
										274516,
										274523
									],
									[
										274558,
										274565
									],
									[
										274640,
										274647
									],
									[
										274682,
										274689
									],
									[
										274714,
										274721
									],
									[
										274756,
										274763
									],
									[
										274838,
										274845
									],
									[
										274880,
										274887
									],
									[
										274911,
										274918
									],
									[
										274953,
										274960
									],
									[
										274984,
										274991
									],
									[
										275026,
										275033
									],
									[
										275058,
										275065
									],
									[
										275100,
										275107
									],
									[
										275131,
										275138
									],
									[
										275173,
										275180
									],
									[
										275205,
										275212
									],
									[
										275247,
										275254
									],
									[
										275510,
										275517
									],
									[
										275529,
										275536
									],
									[
										275562,
										275569
									],
									[
										275581,
										275588
									],
									[
										275614,
										275621
									],
									[
										275633,
										275640
									],
									[
										275838,
										275845
									],
									[
										275880,
										275887
									],
									[
										275911,
										275918
									],
									[
										275953,
										275960
									],
									[
										275984,
										275991
									],
									[
										276026,
										276033
									],
									[
										276277,
										276284
									],
									[
										276319,
										276326
									],
									[
										276586,
										276593
									],
									[
										276643,
										276650
									],
									[
										277020,
										277027
									],
									[
										277383,
										277390
									],
									[
										277472,
										277479
									],
									[
										277561,
										277568
									],
									[
										277650,
										277657
									],
									[
										277739,
										277746
									],
									[
										277828,
										277835
									],
									[
										277917,
										277924
									],
									[
										278006,
										278013
									],
									[
										278095,
										278102
									],
									[
										278184,
										278191
									],
									[
										278273,
										278280
									],
									[
										278362,
										278369
									],
									[
										278451,
										278458
									],
									[
										278540,
										278547
									],
									[
										278629,
										278636
									],
									[
										278718,
										278725
									],
									[
										278925,
										278932
									],
									[
										279207,
										279214
									],
									[
										279515,
										279522
									],
									[
										279737,
										279744
									],
									[
										279965,
										279972
									],
									[
										280187,
										280194
									],
									[
										280410,
										280417
									],
									[
										280632,
										280639
									],
									[
										280854,
										280861
									],
									[
										281076,
										281083
									],
									[
										281361,
										281368
									],
									[
										281795,
										281802
									],
									[
										281852,
										281864
									],
									[
										281903,
										281956
									],
									[
										282008,
										282051
									],
									[
										282075,
										282128
									],
									[
										282180,
										282233
									],
									[
										282285,
										282338
									],
									[
										282390,
										282443
									],
									[
										282495,
										282507
									],
									[
										282546,
										282599
									],
									[
										282651,
										282694
									],
									[
										282718,
										282771
									],
									[
										282823,
										282876
									],
									[
										282928,
										282981
									],
									[
										283033,
										283086
									],
									[
										283138,
										283150
									],
									[
										283189,
										283242
									],
									[
										283294,
										283337
									],
									[
										283361,
										283414
									],
									[
										283466,
										283519
									],
									[
										283571,
										283624
									],
									[
										283676,
										283729
									],
									[
										283781,
										283793
									],
									[
										283833,
										283886
									],
									[
										283938,
										283981
									],
									[
										284005,
										284058
									],
									[
										284110,
										284163
									],
									[
										284215,
										284268
									],
									[
										284320,
										284373
									],
									[
										284425,
										284437
									],
									[
										284477,
										284530
									],
									[
										284582,
										284625
									],
									[
										284649,
										284702
									],
									[
										284754,
										284807
									],
									[
										284859,
										284912
									],
									[
										284964,
										285017
									],
									[
										285069,
										285081
									],
									[
										285121,
										285174
									],
									[
										285226,
										285269
									],
									[
										285293,
										285346
									],
									[
										285398,
										285451
									],
									[
										285503,
										285556
									],
									[
										285608,
										285661
									],
									[
										285713,
										285725
									],
									[
										285765,
										285818
									],
									[
										285870,
										285913
									],
									[
										285937,
										285990
									],
									[
										286042,
										286095
									],
									[
										286147,
										286200
									],
									[
										286252,
										286305
									],
									[
										286357,
										286369
									],
									[
										286409,
										286462
									],
									[
										286514,
										286557
									],
									[
										286581,
										286634
									],
									[
										286686,
										286739
									],
									[
										286791,
										286844
									],
									[
										286896,
										286949
									],
									[
										287037,
										287086
									],
									[
										287106,
										287155
									],
									[
										287175,
										287224
									],
									[
										287244,
										287293
									],
									[
										287313,
										287362
									],
									[
										287382,
										287431
									],
									[
										287451,
										287500
									],
									[
										287520,
										287569
									],
									[
										287628,
										287635
									],
									[
										287685,
										287697
									],
									[
										287736,
										287789
									],
									[
										287841,
										287884
									],
									[
										287908,
										287961
									],
									[
										288013,
										288066
									],
									[
										288118,
										288171
									],
									[
										288223,
										288276
									],
									[
										288328,
										288340
									],
									[
										288379,
										288432
									],
									[
										288484,
										288527
									],
									[
										288551,
										288604
									],
									[
										288656,
										288709
									],
									[
										288761,
										288814
									],
									[
										288866,
										288919
									],
									[
										288971,
										288983
									],
									[
										289022,
										289075
									],
									[
										289127,
										289170
									],
									[
										289195,
										289248
									],
									[
										289300,
										289353
									],
									[
										289405,
										289458
									],
									[
										289510,
										289563
									],
									[
										289615,
										289627
									],
									[
										289667,
										289720
									],
									[
										289772,
										289815
									],
									[
										289840,
										289893
									],
									[
										289945,
										289998
									],
									[
										290050,
										290103
									],
									[
										290155,
										290208
									],
									[
										290260,
										290272
									],
									[
										290312,
										290365
									],
									[
										290417,
										290460
									],
									[
										290485,
										290538
									],
									[
										290590,
										290643
									],
									[
										290695,
										290748
									],
									[
										290800,
										290853
									],
									[
										290905,
										290917
									],
									[
										290957,
										291010
									],
									[
										291062,
										291105
									],
									[
										291130,
										291183
									],
									[
										291235,
										291288
									],
									[
										291340,
										291393
									],
									[
										291445,
										291498
									],
									[
										291550,
										291562
									],
									[
										291602,
										291655
									],
									[
										291707,
										291750
									],
									[
										291775,
										291828
									],
									[
										291880,
										291933
									],
									[
										291985,
										292038
									],
									[
										292090,
										292143
									],
									[
										292195,
										292207
									],
									[
										292247,
										292300
									],
									[
										292352,
										292395
									],
									[
										292420,
										292473
									],
									[
										292525,
										292578
									],
									[
										292630,
										292683
									],
									[
										292735,
										292788
									],
									[
										292876,
										292925
									],
									[
										292945,
										292994
									],
									[
										293014,
										293063
									],
									[
										293084,
										293133
									],
									[
										293154,
										293203
									],
									[
										293224,
										293273
									],
									[
										293294,
										293343
									],
									[
										293364,
										293413
									],
									[
										293641,
										293648
									],
									[
										293708,
										293715
									],
									[
										294106,
										294113
									],
									[
										294163,
										294175
									],
									[
										294214,
										294267
									],
									[
										294319,
										294362
									],
									[
										294386,
										294439
									],
									[
										294491,
										294544
									],
									[
										294596,
										294649
									],
									[
										294701,
										294754
									],
									[
										294806,
										294818
									],
									[
										294857,
										294910
									],
									[
										294962,
										295005
									],
									[
										295029,
										295082
									],
									[
										295134,
										295187
									],
									[
										295239,
										295292
									],
									[
										295344,
										295397
									],
									[
										295449,
										295461
									],
									[
										295500,
										295553
									],
									[
										295605,
										295648
									],
									[
										295672,
										295725
									],
									[
										295777,
										295830
									],
									[
										295882,
										295935
									],
									[
										295987,
										296040
									],
									[
										296092,
										296104
									],
									[
										296144,
										296197
									],
									[
										296249,
										296292
									],
									[
										296316,
										296369
									],
									[
										296421,
										296474
									],
									[
										296526,
										296579
									],
									[
										296631,
										296684
									],
									[
										296736,
										296748
									],
									[
										296788,
										296841
									],
									[
										296893,
										296936
									],
									[
										296960,
										297013
									],
									[
										297065,
										297118
									],
									[
										297170,
										297223
									],
									[
										297275,
										297328
									],
									[
										297380,
										297392
									],
									[
										297432,
										297485
									],
									[
										297537,
										297580
									],
									[
										297604,
										297657
									],
									[
										297709,
										297762
									],
									[
										297814,
										297867
									],
									[
										297919,
										297972
									],
									[
										298024,
										298036
									],
									[
										298076,
										298129
									],
									[
										298181,
										298224
									],
									[
										298248,
										298301
									],
									[
										298353,
										298406
									],
									[
										298458,
										298511
									],
									[
										298563,
										298616
									],
									[
										298668,
										298680
									],
									[
										298720,
										298773
									],
									[
										298825,
										298868
									],
									[
										298892,
										298945
									],
									[
										298997,
										299050
									],
									[
										299102,
										299155
									],
									[
										299207,
										299260
									],
									[
										299348,
										299397
									],
									[
										299417,
										299466
									],
									[
										299486,
										299535
									],
									[
										299555,
										299604
									],
									[
										299624,
										299673
									],
									[
										299693,
										299742
									],
									[
										299762,
										299811
									],
									[
										299831,
										299880
									],
									[
										299939,
										299946
									],
									[
										299996,
										300008
									],
									[
										300047,
										300100
									],
									[
										300152,
										300195
									],
									[
										300219,
										300272
									],
									[
										300324,
										300377
									],
									[
										300429,
										300482
									],
									[
										300534,
										300587
									],
									[
										300639,
										300651
									],
									[
										300690,
										300743
									],
									[
										300795,
										300838
									],
									[
										300862,
										300915
									],
									[
										300967,
										301020
									],
									[
										301072,
										301125
									],
									[
										301177,
										301230
									],
									[
										301282,
										301294
									],
									[
										301333,
										301386
									],
									[
										301438,
										301481
									],
									[
										301506,
										301559
									],
									[
										301611,
										301664
									],
									[
										301716,
										301769
									],
									[
										301821,
										301874
									],
									[
										301926,
										301938
									],
									[
										301978,
										302031
									],
									[
										302083,
										302126
									],
									[
										302151,
										302204
									],
									[
										302256,
										302309
									],
									[
										302361,
										302414
									],
									[
										302466,
										302519
									],
									[
										302571,
										302583
									],
									[
										302623,
										302676
									],
									[
										302728,
										302771
									],
									[
										302796,
										302849
									],
									[
										302901,
										302954
									],
									[
										303006,
										303059
									],
									[
										303111,
										303164
									],
									[
										303216,
										303228
									],
									[
										303268,
										303321
									],
									[
										303373,
										303416
									],
									[
										303441,
										303494
									],
									[
										303546,
										303599
									],
									[
										303651,
										303704
									],
									[
										303756,
										303809
									],
									[
										303861,
										303873
									],
									[
										303913,
										303966
									],
									[
										304018,
										304061
									],
									[
										304086,
										304139
									],
									[
										304191,
										304244
									],
									[
										304296,
										304349
									],
									[
										304401,
										304454
									],
									[
										304506,
										304518
									],
									[
										304558,
										304611
									],
									[
										304663,
										304706
									],
									[
										304731,
										304784
									],
									[
										304836,
										304889
									],
									[
										304941,
										304994
									],
									[
										305046,
										305099
									],
									[
										305187,
										305236
									],
									[
										305256,
										305305
									],
									[
										305325,
										305374
									],
									[
										305395,
										305444
									],
									[
										305465,
										305514
									],
									[
										305535,
										305584
									],
									[
										305605,
										305654
									],
									[
										305675,
										305724
									],
									[
										305952,
										305959
									],
									[
										306019,
										306026
									],
									[
										306417,
										306424
									],
									[
										306474,
										306486
									],
									[
										306525,
										306578
									],
									[
										306630,
										306673
									],
									[
										306697,
										306750
									],
									[
										306802,
										306855
									],
									[
										306907,
										306960
									],
									[
										307012,
										307065
									],
									[
										307117,
										307129
									],
									[
										307168,
										307221
									],
									[
										307273,
										307316
									],
									[
										307340,
										307393
									],
									[
										307445,
										307498
									],
									[
										307550,
										307603
									],
									[
										307655,
										307708
									],
									[
										307760,
										307772
									],
									[
										307811,
										307864
									],
									[
										307916,
										307959
									],
									[
										307983,
										308036
									],
									[
										308088,
										308141
									],
									[
										308193,
										308246
									],
									[
										308298,
										308351
									],
									[
										308403,
										308415
									],
									[
										308455,
										308508
									],
									[
										308560,
										308603
									],
									[
										308627,
										308680
									],
									[
										308732,
										308785
									],
									[
										308837,
										308890
									],
									[
										308942,
										308995
									],
									[
										309047,
										309059
									],
									[
										309099,
										309152
									],
									[
										309204,
										309247
									],
									[
										309271,
										309324
									],
									[
										309376,
										309429
									],
									[
										309481,
										309534
									],
									[
										309586,
										309639
									],
									[
										309691,
										309703
									],
									[
										309743,
										309796
									],
									[
										309848,
										309891
									],
									[
										309915,
										309968
									],
									[
										310020,
										310073
									],
									[
										310125,
										310178
									],
									[
										310230,
										310283
									],
									[
										310335,
										310347
									],
									[
										310387,
										310440
									],
									[
										310492,
										310535
									],
									[
										310559,
										310612
									],
									[
										310664,
										310717
									],
									[
										310769,
										310822
									],
									[
										310874,
										310927
									],
									[
										310979,
										310991
									],
									[
										311031,
										311084
									],
									[
										311136,
										311179
									],
									[
										311203,
										311256
									],
									[
										311308,
										311361
									],
									[
										311413,
										311466
									],
									[
										311518,
										311571
									],
									[
										311659,
										311708
									],
									[
										311728,
										311777
									],
									[
										311797,
										311846
									],
									[
										311866,
										311915
									],
									[
										311935,
										311984
									],
									[
										312004,
										312053
									],
									[
										312073,
										312122
									],
									[
										312142,
										312191
									],
									[
										312250,
										312257
									],
									[
										312307,
										312319
									],
									[
										312358,
										312411
									],
									[
										312463,
										312506
									],
									[
										312530,
										312583
									],
									[
										312635,
										312688
									],
									[
										312740,
										312793
									],
									[
										312845,
										312898
									],
									[
										312950,
										312962
									],
									[
										313001,
										313054
									],
									[
										313106,
										313149
									],
									[
										313173,
										313226
									],
									[
										313278,
										313331
									],
									[
										313383,
										313436
									],
									[
										313488,
										313541
									],
									[
										313593,
										313605
									],
									[
										313644,
										313697
									],
									[
										313749,
										313792
									],
									[
										313817,
										313870
									],
									[
										313922,
										313975
									],
									[
										314027,
										314080
									],
									[
										314132,
										314185
									],
									[
										314237,
										314249
									],
									[
										314289,
										314342
									],
									[
										314394,
										314437
									],
									[
										314462,
										314515
									],
									[
										314567,
										314620
									],
									[
										314672,
										314725
									],
									[
										314777,
										314830
									],
									[
										314882,
										314894
									],
									[
										314934,
										314987
									],
									[
										315039,
										315082
									],
									[
										315107,
										315160
									],
									[
										315212,
										315265
									],
									[
										315317,
										315370
									],
									[
										315422,
										315475
									],
									[
										315527,
										315539
									],
									[
										315579,
										315632
									],
									[
										315684,
										315727
									],
									[
										315752,
										315805
									],
									[
										315857,
										315910
									],
									[
										315962,
										316015
									],
									[
										316067,
										316120
									],
									[
										316172,
										316184
									],
									[
										316224,
										316277
									],
									[
										316329,
										316372
									],
									[
										316397,
										316450
									],
									[
										316502,
										316555
									],
									[
										316607,
										316660
									],
									[
										316712,
										316765
									],
									[
										316817,
										316829
									],
									[
										316869,
										316922
									],
									[
										316974,
										317017
									],
									[
										317042,
										317095
									],
									[
										317147,
										317200
									],
									[
										317252,
										317305
									],
									[
										317357,
										317410
									],
									[
										317498,
										317547
									],
									[
										317567,
										317616
									],
									[
										317636,
										317685
									],
									[
										317706,
										317755
									],
									[
										317776,
										317825
									],
									[
										317846,
										317895
									],
									[
										317916,
										317965
									],
									[
										317986,
										318035
									],
									[
										318263,
										318270
									],
									[
										318330,
										318337
									],
									[
										318728,
										318735
									],
									[
										318785,
										318797
									],
									[
										318836,
										318889
									],
									[
										318941,
										318984
									],
									[
										319008,
										319061
									],
									[
										319113,
										319166
									],
									[
										319218,
										319271
									],
									[
										319323,
										319376
									],
									[
										319428,
										319440
									],
									[
										319479,
										319532
									],
									[
										319584,
										319627
									],
									[
										319651,
										319704
									],
									[
										319756,
										319809
									],
									[
										319861,
										319914
									],
									[
										319966,
										320019
									],
									[
										320071,
										320083
									],
									[
										320122,
										320175
									],
									[
										320227,
										320270
									],
									[
										320294,
										320347
									],
									[
										320399,
										320452
									],
									[
										320504,
										320557
									],
									[
										320609,
										320662
									],
									[
										320714,
										320726
									],
									[
										320766,
										320819
									],
									[
										320871,
										320914
									],
									[
										320938,
										320991
									],
									[
										321043,
										321096
									],
									[
										321148,
										321201
									],
									[
										321253,
										321306
									],
									[
										321358,
										321370
									],
									[
										321410,
										321463
									],
									[
										321515,
										321558
									],
									[
										321582,
										321635
									],
									[
										321687,
										321740
									],
									[
										321792,
										321845
									],
									[
										321897,
										321950
									],
									[
										322002,
										322014
									],
									[
										322054,
										322107
									],
									[
										322159,
										322202
									],
									[
										322226,
										322279
									],
									[
										322331,
										322384
									],
									[
										322436,
										322489
									],
									[
										322541,
										322594
									],
									[
										322646,
										322658
									],
									[
										322698,
										322751
									],
									[
										322803,
										322846
									],
									[
										322870,
										322923
									],
									[
										322975,
										323028
									],
									[
										323080,
										323133
									],
									[
										323185,
										323238
									],
									[
										323290,
										323302
									],
									[
										323342,
										323395
									],
									[
										323447,
										323490
									],
									[
										323514,
										323567
									],
									[
										323619,
										323672
									],
									[
										323724,
										323777
									],
									[
										323829,
										323882
									],
									[
										323970,
										324019
									],
									[
										324039,
										324088
									],
									[
										324108,
										324157
									],
									[
										324177,
										324226
									],
									[
										324246,
										324295
									],
									[
										324315,
										324364
									],
									[
										324384,
										324433
									],
									[
										324453,
										324502
									],
									[
										324561,
										324568
									],
									[
										324618,
										324630
									],
									[
										324669,
										324722
									],
									[
										324774,
										324817
									],
									[
										324841,
										324894
									],
									[
										324946,
										324999
									],
									[
										325051,
										325104
									],
									[
										325156,
										325209
									],
									[
										325261,
										325273
									],
									[
										325312,
										325365
									],
									[
										325417,
										325460
									],
									[
										325484,
										325537
									],
									[
										325589,
										325642
									],
									[
										325694,
										325747
									],
									[
										325799,
										325852
									],
									[
										325904,
										325916
									],
									[
										325955,
										326008
									],
									[
										326060,
										326103
									],
									[
										326128,
										326181
									],
									[
										326233,
										326286
									],
									[
										326338,
										326391
									],
									[
										326443,
										326496
									],
									[
										326548,
										326560
									],
									[
										326600,
										326653
									],
									[
										326705,
										326748
									],
									[
										326773,
										326826
									],
									[
										326878,
										326931
									],
									[
										326983,
										327036
									],
									[
										327088,
										327141
									],
									[
										327193,
										327205
									],
									[
										327245,
										327298
									],
									[
										327350,
										327393
									],
									[
										327418,
										327471
									],
									[
										327523,
										327576
									],
									[
										327628,
										327681
									],
									[
										327733,
										327786
									],
									[
										327838,
										327850
									],
									[
										327890,
										327943
									],
									[
										327995,
										328038
									],
									[
										328063,
										328116
									],
									[
										328168,
										328221
									],
									[
										328273,
										328326
									],
									[
										328378,
										328431
									],
									[
										328483,
										328495
									],
									[
										328535,
										328588
									],
									[
										328640,
										328683
									],
									[
										328708,
										328761
									],
									[
										328813,
										328866
									],
									[
										328918,
										328971
									],
									[
										329023,
										329076
									],
									[
										329128,
										329140
									],
									[
										329180,
										329233
									],
									[
										329285,
										329328
									],
									[
										329353,
										329406
									],
									[
										329458,
										329511
									],
									[
										329563,
										329616
									],
									[
										329668,
										329721
									],
									[
										329809,
										329858
									],
									[
										329878,
										329927
									],
									[
										329947,
										329996
									],
									[
										330017,
										330066
									],
									[
										330087,
										330136
									],
									[
										330157,
										330206
									],
									[
										330227,
										330276
									],
									[
										330297,
										330346
									],
									[
										330574,
										330581
									],
									[
										330641,
										330648
									],
									[
										331039,
										331046
									],
									[
										331096,
										331108
									],
									[
										331147,
										331200
									],
									[
										331252,
										331295
									],
									[
										331319,
										331372
									],
									[
										331424,
										331477
									],
									[
										331529,
										331582
									],
									[
										331634,
										331687
									],
									[
										331739,
										331751
									],
									[
										331790,
										331843
									],
									[
										331895,
										331938
									],
									[
										331962,
										332015
									],
									[
										332067,
										332120
									],
									[
										332172,
										332225
									],
									[
										332277,
										332330
									],
									[
										332382,
										332394
									],
									[
										332433,
										332486
									],
									[
										332538,
										332581
									],
									[
										332605,
										332658
									],
									[
										332710,
										332763
									],
									[
										332815,
										332868
									],
									[
										332920,
										332973
									],
									[
										333025,
										333037
									],
									[
										333077,
										333130
									],
									[
										333182,
										333225
									],
									[
										333249,
										333302
									],
									[
										333354,
										333407
									],
									[
										333459,
										333512
									],
									[
										333564,
										333617
									],
									[
										333669,
										333681
									],
									[
										333721,
										333774
									],
									[
										333826,
										333869
									],
									[
										333893,
										333946
									],
									[
										333998,
										334051
									],
									[
										334103,
										334156
									],
									[
										334208,
										334261
									],
									[
										334313,
										334325
									],
									[
										334365,
										334418
									],
									[
										334470,
										334513
									],
									[
										334537,
										334590
									],
									[
										334642,
										334695
									],
									[
										334747,
										334800
									],
									[
										334852,
										334905
									],
									[
										334957,
										334969
									],
									[
										335009,
										335062
									],
									[
										335114,
										335157
									],
									[
										335181,
										335234
									],
									[
										335286,
										335339
									],
									[
										335391,
										335444
									],
									[
										335496,
										335549
									],
									[
										335601,
										335613
									],
									[
										335653,
										335706
									],
									[
										335758,
										335801
									],
									[
										335825,
										335878
									],
									[
										335930,
										335983
									],
									[
										336035,
										336088
									],
									[
										336140,
										336193
									],
									[
										336281,
										336330
									],
									[
										336350,
										336399
									],
									[
										336419,
										336468
									],
									[
										336488,
										336537
									],
									[
										336557,
										336606
									],
									[
										336626,
										336675
									],
									[
										336695,
										336744
									],
									[
										336764,
										336813
									],
									[
										336872,
										336879
									],
									[
										336929,
										336941
									],
									[
										336980,
										337033
									],
									[
										337085,
										337128
									],
									[
										337152,
										337205
									],
									[
										337257,
										337310
									],
									[
										337362,
										337415
									],
									[
										337467,
										337520
									],
									[
										337572,
										337584
									],
									[
										337623,
										337676
									],
									[
										337728,
										337771
									],
									[
										337795,
										337848
									],
									[
										337900,
										337953
									],
									[
										338005,
										338058
									],
									[
										338110,
										338163
									],
									[
										338215,
										338227
									],
									[
										338266,
										338319
									],
									[
										338371,
										338414
									],
									[
										338439,
										338492
									],
									[
										338544,
										338597
									],
									[
										338649,
										338702
									],
									[
										338754,
										338807
									],
									[
										338859,
										338871
									],
									[
										338911,
										338964
									],
									[
										339016,
										339059
									],
									[
										339084,
										339137
									],
									[
										339189,
										339242
									],
									[
										339294,
										339347
									],
									[
										339399,
										339452
									],
									[
										339504,
										339516
									],
									[
										339556,
										339609
									],
									[
										339661,
										339704
									],
									[
										339729,
										339782
									],
									[
										339834,
										339887
									],
									[
										339939,
										339992
									],
									[
										340044,
										340097
									],
									[
										340149,
										340161
									],
									[
										340201,
										340254
									],
									[
										340306,
										340349
									],
									[
										340374,
										340427
									],
									[
										340479,
										340532
									],
									[
										340584,
										340637
									],
									[
										340689,
										340742
									],
									[
										340794,
										340806
									],
									[
										340846,
										340899
									],
									[
										340951,
										340994
									],
									[
										341019,
										341072
									],
									[
										341124,
										341177
									],
									[
										341229,
										341282
									],
									[
										341334,
										341387
									],
									[
										341439,
										341451
									],
									[
										341491,
										341544
									],
									[
										341596,
										341639
									],
									[
										341664,
										341717
									],
									[
										341769,
										341822
									],
									[
										341874,
										341927
									],
									[
										341979,
										342032
									],
									[
										342120,
										342169
									],
									[
										342189,
										342238
									],
									[
										342258,
										342307
									],
									[
										342328,
										342377
									],
									[
										342398,
										342447
									],
									[
										342468,
										342517
									],
									[
										342538,
										342587
									],
									[
										342608,
										342657
									],
									[
										342885,
										342892
									],
									[
										342952,
										342959
									],
									[
										343350,
										343357
									],
									[
										343407,
										343419
									],
									[
										343458,
										343511
									],
									[
										343563,
										343606
									],
									[
										343630,
										343683
									],
									[
										343735,
										343788
									],
									[
										343840,
										343893
									],
									[
										343945,
										343998
									],
									[
										344050,
										344062
									],
									[
										344101,
										344154
									],
									[
										344206,
										344249
									],
									[
										344273,
										344326
									],
									[
										344378,
										344431
									],
									[
										344483,
										344536
									],
									[
										344588,
										344641
									],
									[
										344693,
										344705
									],
									[
										344744,
										344797
									],
									[
										344849,
										344892
									],
									[
										344916,
										344969
									],
									[
										345021,
										345074
									],
									[
										345126,
										345179
									],
									[
										345231,
										345284
									],
									[
										345336,
										345348
									],
									[
										345388,
										345441
									],
									[
										345493,
										345536
									],
									[
										345560,
										345613
									],
									[
										345665,
										345718
									],
									[
										345770,
										345823
									],
									[
										345875,
										345928
									],
									[
										345980,
										345992
									],
									[
										346032,
										346085
									],
									[
										346137,
										346180
									],
									[
										346204,
										346257
									],
									[
										346309,
										346362
									],
									[
										346414,
										346467
									],
									[
										346519,
										346572
									],
									[
										346624,
										346636
									],
									[
										346676,
										346729
									],
									[
										346781,
										346824
									],
									[
										346848,
										346901
									],
									[
										346953,
										347006
									],
									[
										347058,
										347111
									],
									[
										347163,
										347216
									],
									[
										347268,
										347280
									],
									[
										347320,
										347373
									],
									[
										347425,
										347468
									],
									[
										347492,
										347545
									],
									[
										347597,
										347650
									],
									[
										347702,
										347755
									],
									[
										347807,
										347860
									],
									[
										347912,
										347924
									],
									[
										347964,
										348017
									],
									[
										348069,
										348112
									],
									[
										348136,
										348189
									],
									[
										348241,
										348294
									],
									[
										348346,
										348399
									],
									[
										348451,
										348504
									],
									[
										348592,
										348641
									],
									[
										348661,
										348710
									],
									[
										348730,
										348779
									],
									[
										348799,
										348848
									],
									[
										348868,
										348917
									],
									[
										348937,
										348986
									],
									[
										349006,
										349055
									],
									[
										349075,
										349124
									],
									[
										349183,
										349190
									],
									[
										349240,
										349252
									],
									[
										349291,
										349344
									],
									[
										349396,
										349439
									],
									[
										349463,
										349516
									],
									[
										349568,
										349621
									],
									[
										349673,
										349726
									],
									[
										349778,
										349831
									],
									[
										349883,
										349895
									],
									[
										349934,
										349987
									],
									[
										350039,
										350082
									],
									[
										350106,
										350159
									],
									[
										350211,
										350264
									],
									[
										350316,
										350369
									],
									[
										350421,
										350474
									],
									[
										350526,
										350538
									],
									[
										350577,
										350630
									],
									[
										350682,
										350725
									],
									[
										350750,
										350803
									],
									[
										350855,
										350908
									],
									[
										350960,
										351013
									],
									[
										351065,
										351118
									],
									[
										351170,
										351182
									],
									[
										351222,
										351275
									],
									[
										351327,
										351370
									],
									[
										351395,
										351448
									],
									[
										351500,
										351553
									],
									[
										351605,
										351658
									],
									[
										351710,
										351763
									],
									[
										351815,
										351827
									],
									[
										351867,
										351920
									],
									[
										351972,
										352015
									],
									[
										352040,
										352093
									],
									[
										352145,
										352198
									],
									[
										352250,
										352303
									],
									[
										352355,
										352408
									],
									[
										352460,
										352472
									],
									[
										352512,
										352565
									],
									[
										352617,
										352660
									],
									[
										352685,
										352738
									],
									[
										352790,
										352843
									],
									[
										352895,
										352948
									],
									[
										353000,
										353053
									],
									[
										353105,
										353117
									],
									[
										353157,
										353210
									],
									[
										353262,
										353305
									],
									[
										353330,
										353383
									],
									[
										353435,
										353488
									],
									[
										353540,
										353593
									],
									[
										353645,
										353698
									],
									[
										353750,
										353762
									],
									[
										353802,
										353855
									],
									[
										353907,
										353950
									],
									[
										353975,
										354028
									],
									[
										354080,
										354133
									],
									[
										354185,
										354238
									],
									[
										354290,
										354343
									],
									[
										354431,
										354480
									],
									[
										354500,
										354549
									],
									[
										354569,
										354618
									],
									[
										354639,
										354688
									],
									[
										354709,
										354758
									],
									[
										354779,
										354828
									],
									[
										354849,
										354898
									],
									[
										354919,
										354968
									],
									[
										355196,
										355203
									],
									[
										355263,
										355270
									],
									[
										355661,
										355668
									],
									[
										355718,
										355730
									],
									[
										355769,
										355822
									],
									[
										355874,
										355917
									],
									[
										355941,
										355994
									],
									[
										356046,
										356099
									],
									[
										356151,
										356204
									],
									[
										356256,
										356309
									],
									[
										356361,
										356373
									],
									[
										356412,
										356465
									],
									[
										356517,
										356560
									],
									[
										356584,
										356637
									],
									[
										356689,
										356742
									],
									[
										356794,
										356847
									],
									[
										356899,
										356952
									],
									[
										357004,
										357016
									],
									[
										357055,
										357108
									],
									[
										357160,
										357203
									],
									[
										357227,
										357280
									],
									[
										357332,
										357385
									],
									[
										357437,
										357490
									],
									[
										357542,
										357595
									],
									[
										357647,
										357659
									],
									[
										357699,
										357752
									],
									[
										357804,
										357847
									],
									[
										357871,
										357924
									],
									[
										357976,
										358029
									],
									[
										358081,
										358134
									],
									[
										358186,
										358239
									],
									[
										358291,
										358303
									],
									[
										358343,
										358396
									],
									[
										358448,
										358491
									],
									[
										358515,
										358568
									],
									[
										358620,
										358673
									],
									[
										358725,
										358778
									],
									[
										358830,
										358883
									],
									[
										358935,
										358947
									],
									[
										358987,
										359040
									],
									[
										359092,
										359135
									],
									[
										359159,
										359212
									],
									[
										359264,
										359317
									],
									[
										359369,
										359422
									],
									[
										359474,
										359527
									],
									[
										359579,
										359591
									],
									[
										359631,
										359684
									],
									[
										359736,
										359779
									],
									[
										359803,
										359856
									],
									[
										359908,
										359961
									],
									[
										360013,
										360066
									],
									[
										360118,
										360171
									],
									[
										360223,
										360235
									],
									[
										360275,
										360328
									],
									[
										360380,
										360423
									],
									[
										360447,
										360500
									],
									[
										360552,
										360605
									],
									[
										360657,
										360710
									],
									[
										360762,
										360815
									],
									[
										360903,
										360952
									],
									[
										360972,
										361021
									],
									[
										361041,
										361090
									],
									[
										361110,
										361159
									],
									[
										361179,
										361228
									],
									[
										361248,
										361297
									],
									[
										361317,
										361366
									],
									[
										361386,
										361435
									],
									[
										361494,
										361501
									],
									[
										361551,
										361563
									],
									[
										361602,
										361655
									],
									[
										361707,
										361750
									],
									[
										361774,
										361827
									],
									[
										361879,
										361932
									],
									[
										361984,
										362037
									],
									[
										362089,
										362142
									],
									[
										362194,
										362206
									],
									[
										362245,
										362298
									],
									[
										362350,
										362393
									],
									[
										362417,
										362470
									],
									[
										362522,
										362575
									],
									[
										362627,
										362680
									],
									[
										362732,
										362785
									],
									[
										362837,
										362849
									],
									[
										362888,
										362941
									],
									[
										362993,
										363036
									],
									[
										363061,
										363114
									],
									[
										363166,
										363219
									],
									[
										363271,
										363324
									],
									[
										363376,
										363429
									],
									[
										363481,
										363493
									],
									[
										363533,
										363586
									],
									[
										363638,
										363681
									],
									[
										363706,
										363759
									],
									[
										363811,
										363864
									],
									[
										363916,
										363969
									],
									[
										364021,
										364074
									],
									[
										364126,
										364138
									],
									[
										364178,
										364231
									],
									[
										364283,
										364326
									],
									[
										364351,
										364404
									],
									[
										364456,
										364509
									],
									[
										364561,
										364614
									],
									[
										364666,
										364719
									],
									[
										364771,
										364783
									],
									[
										364823,
										364876
									],
									[
										364928,
										364971
									],
									[
										364996,
										365049
									],
									[
										365101,
										365154
									],
									[
										365206,
										365259
									],
									[
										365311,
										365364
									],
									[
										365416,
										365428
									],
									[
										365468,
										365521
									],
									[
										365573,
										365616
									],
									[
										365641,
										365694
									],
									[
										365746,
										365799
									],
									[
										365851,
										365904
									],
									[
										365956,
										366009
									],
									[
										366061,
										366073
									],
									[
										366113,
										366166
									],
									[
										366218,
										366261
									],
									[
										366286,
										366339
									],
									[
										366391,
										366444
									],
									[
										366496,
										366549
									],
									[
										366601,
										366654
									],
									[
										366742,
										366791
									],
									[
										366811,
										366860
									],
									[
										366880,
										366929
									],
									[
										366950,
										366999
									],
									[
										367020,
										367069
									],
									[
										367090,
										367139
									],
									[
										367160,
										367209
									],
									[
										367230,
										367279
									],
									[
										367507,
										367514
									],
									[
										367574,
										367581
									],
									[
										367972,
										367979
									],
									[
										368029,
										368041
									],
									[
										368080,
										368133
									],
									[
										368185,
										368228
									],
									[
										368252,
										368305
									],
									[
										368357,
										368410
									],
									[
										368462,
										368515
									],
									[
										368567,
										368620
									],
									[
										368672,
										368684
									],
									[
										368723,
										368776
									],
									[
										368828,
										368871
									],
									[
										368895,
										368948
									],
									[
										369000,
										369053
									],
									[
										369105,
										369158
									],
									[
										369210,
										369263
									],
									[
										369315,
										369327
									],
									[
										369366,
										369419
									],
									[
										369471,
										369514
									],
									[
										369538,
										369591
									],
									[
										369643,
										369696
									],
									[
										369748,
										369801
									],
									[
										369853,
										369906
									],
									[
										369958,
										369970
									],
									[
										370010,
										370063
									],
									[
										370115,
										370158
									],
									[
										370182,
										370235
									],
									[
										370287,
										370340
									],
									[
										370392,
										370445
									],
									[
										370497,
										370550
									],
									[
										370602,
										370614
									],
									[
										370654,
										370707
									],
									[
										370759,
										370802
									],
									[
										370826,
										370879
									],
									[
										370931,
										370984
									],
									[
										371036,
										371089
									],
									[
										371141,
										371194
									],
									[
										371246,
										371258
									],
									[
										371298,
										371351
									],
									[
										371403,
										371446
									],
									[
										371470,
										371523
									],
									[
										371575,
										371628
									],
									[
										371680,
										371733
									],
									[
										371785,
										371838
									],
									[
										371890,
										371902
									],
									[
										371942,
										371995
									],
									[
										372047,
										372090
									],
									[
										372114,
										372167
									],
									[
										372219,
										372272
									],
									[
										372324,
										372377
									],
									[
										372429,
										372482
									],
									[
										372534,
										372546
									],
									[
										372586,
										372639
									],
									[
										372691,
										372734
									],
									[
										372758,
										372811
									],
									[
										372863,
										372916
									],
									[
										372968,
										373021
									],
									[
										373073,
										373126
									],
									[
										373214,
										373263
									],
									[
										373283,
										373332
									],
									[
										373352,
										373401
									],
									[
										373421,
										373470
									],
									[
										373490,
										373539
									],
									[
										373559,
										373608
									],
									[
										373628,
										373677
									],
									[
										373697,
										373746
									],
									[
										373805,
										373812
									],
									[
										373862,
										373874
									],
									[
										373913,
										373966
									],
									[
										374018,
										374061
									],
									[
										374085,
										374138
									],
									[
										374190,
										374243
									],
									[
										374295,
										374348
									],
									[
										374400,
										374453
									],
									[
										374505,
										374517
									],
									[
										374556,
										374609
									],
									[
										374661,
										374704
									],
									[
										374728,
										374781
									],
									[
										374833,
										374886
									],
									[
										374938,
										374991
									],
									[
										375043,
										375096
									],
									[
										375148,
										375160
									],
									[
										375199,
										375252
									],
									[
										375304,
										375347
									],
									[
										375372,
										375425
									],
									[
										375477,
										375530
									],
									[
										375582,
										375635
									],
									[
										375687,
										375740
									],
									[
										375792,
										375804
									],
									[
										375844,
										375897
									],
									[
										375949,
										375992
									],
									[
										376017,
										376070
									],
									[
										376122,
										376175
									],
									[
										376227,
										376280
									],
									[
										376332,
										376385
									],
									[
										376437,
										376449
									],
									[
										376489,
										376542
									],
									[
										376594,
										376637
									],
									[
										376662,
										376715
									],
									[
										376767,
										376820
									],
									[
										376872,
										376925
									],
									[
										376977,
										377030
									],
									[
										377082,
										377094
									],
									[
										377134,
										377187
									],
									[
										377239,
										377282
									],
									[
										377307,
										377360
									],
									[
										377412,
										377465
									],
									[
										377517,
										377570
									],
									[
										377622,
										377675
									],
									[
										377727,
										377739
									],
									[
										377779,
										377832
									],
									[
										377884,
										377927
									],
									[
										377952,
										378005
									],
									[
										378057,
										378110
									],
									[
										378162,
										378215
									],
									[
										378267,
										378320
									],
									[
										378372,
										378384
									],
									[
										378424,
										378477
									],
									[
										378529,
										378572
									],
									[
										378597,
										378650
									],
									[
										378702,
										378755
									],
									[
										378807,
										378860
									],
									[
										378912,
										378965
									],
									[
										379053,
										379102
									],
									[
										379122,
										379171
									],
									[
										379191,
										379240
									],
									[
										379261,
										379310
									],
									[
										379331,
										379380
									],
									[
										379401,
										379450
									],
									[
										379471,
										379520
									],
									[
										379541,
										379590
									],
									[
										379818,
										379825
									],
									[
										379885,
										379892
									],
									[
										380412,
										380424
									],
									[
										380529,
										380541
									],
									[
										381120,
										381132
									],
									[
										381213,
										381225
									],
									[
										381617,
										381624
									],
									[
										381736,
										381743
									],
									[
										381855,
										381862
									],
									[
										381974,
										381981
									],
									[
										382159,
										382166
									],
									[
										382279,
										382286
									],
									[
										382399,
										382406
									],
									[
										382494,
										382501
									],
									[
										382589,
										382596
									],
									[
										382699,
										382706
									],
									[
										382794,
										382801
									],
									[
										382889,
										382896
									],
									[
										383050,
										383057
									],
									[
										383144,
										383151
									],
									[
										383238,
										383245
									],
									[
										383332,
										383339
									],
									[
										383451,
										383458
									],
									[
										383570,
										383577
									],
									[
										383664,
										383671
									],
									[
										383758,
										383765
									],
									[
										383878,
										383885
									],
									[
										383998,
										384005
									],
									[
										384108,
										384115
									],
									[
										384218,
										384225
									],
									[
										384354,
										384361
									],
									[
										384464,
										384471
									],
									[
										384600,
										384607
									],
									[
										384694,
										384701
									],
									[
										384854,
										384861
									],
									[
										384976,
										384983
									],
									[
										385098,
										385105
									],
									[
										385194,
										385201
									],
									[
										385315,
										385322
									],
									[
										385463,
										385470
									],
									[
										385614,
										385621
									],
									[
										385738,
										385745
									],
									[
										385834,
										385841
									],
									[
										385928,
										385935
									],
									[
										386088,
										386095
									],
									[
										386184,
										386191
									],
									[
										386280,
										386287
									],
									[
										386376,
										386383
									],
									[
										386472,
										386479
									],
									[
										386581,
										386588
									],
									[
										386677,
										386684
									],
									[
										386773,
										386780
									],
									[
										386894,
										386901
									],
									[
										387076,
										387083
									],
									[
										387175,
										387182
									],
									[
										387299,
										387306
									],
									[
										387423,
										387430
									],
									[
										387522,
										387529
									],
									[
										387621,
										387628
									],
									[
										387730,
										387737
									],
									[
										387855,
										387862
									],
									[
										387980,
										387987
									],
									[
										388145,
										388152
									],
									[
										388244,
										388251
									],
									[
										388343,
										388350
									],
									[
										388467,
										388474
									],
									[
										388591,
										388598
									],
									[
										388716,
										388723
									],
									[
										388841,
										388848
									],
									[
										388950,
										388957
									],
									[
										389059,
										389066
									],
									[
										389168,
										389175
									],
									[
										389267,
										389274
									],
									[
										389432,
										389439
									],
									[
										389528,
										389535
									],
									[
										389624,
										389631
									],
									[
										389746,
										389753
									],
									[
										389894,
										389901
									],
									[
										390042,
										390049
									],
									[
										390225,
										390232
									],
									[
										390321,
										390328
									],
									[
										390417,
										390424
									],
									[
										390513,
										390520
									],
									[
										390635,
										390642
									],
									[
										390783,
										390790
									],
									[
										390931,
										390938
									],
									[
										391053,
										391060
									],
									[
										391174,
										391181
									],
									[
										391295,
										391302
									],
									[
										391391,
										391398
									],
									[
										391513,
										391520
									],
									[
										391696,
										391703
									],
									[
										391792,
										391799
									],
									[
										391888,
										391895
									],
									[
										391984,
										391991
									],
									[
										392094,
										392101
									],
									[
										392204,
										392211
									],
									[
										392314,
										392321
									],
									[
										392437,
										392444
									],
									[
										392622,
										392629
									],
									[
										392718,
										392725
									],
									[
										392814,
										392821
									],
									[
										392910,
										392917
									],
									[
										393006,
										393013
									],
									[
										393102,
										393109
									],
									[
										393213,
										393220
									],
									[
										393352,
										393359
									],
									[
										393553,
										393560
									],
									[
										393676,
										393683
									],
									[
										393799,
										393806
									],
									[
										393895,
										393902
									],
									[
										393991,
										393998
									],
									[
										394100,
										394107
									],
									[
										394263,
										394270
									],
									[
										394359,
										394366
									],
									[
										394455,
										394462
									],
									[
										394564,
										394571
									],
									[
										394700,
										394707
									],
									[
										394853,
										394860
									],
									[
										394979,
										394986
									],
									[
										395137,
										395144
									],
									[
										395260,
										395267
									],
									[
										395421,
										395428
									],
									[
										395516,
										395523
									],
									[
										395612,
										395619
									],
									[
										395707,
										395714
									],
									[
										395801,
										395808
									],
									[
										395926,
										395933
									],
									[
										396113,
										396120
									],
									[
										396221,
										396239
									],
									[
										396572,
										396582
									],
									[
										396604,
										396614
									],
									[
										396636,
										396646
									],
									[
										396669,
										396679
									],
									[
										396897,
										396910
									],
									[
										396957,
										397074
									],
									[
										397173,
										397186
									],
									[
										397250,
										397257
									],
									[
										397349,
										397356
									],
									[
										397448,
										397455
									],
									[
										397547,
										397554
									],
									[
										397646,
										397653
									],
									[
										397745,
										397752
									],
									[
										397844,
										397851
									],
									[
										397943,
										397950
									],
									[
										398042,
										398049
									],
									[
										398141,
										398148
									],
									[
										398240,
										398247
									],
									[
										398340,
										398347
									],
									[
										398440,
										398447
									],
									[
										398540,
										398547
									],
									[
										398640,
										398647
									],
									[
										398740,
										398747
									],
									[
										399048,
										399058
									],
									[
										399336,
										399343
									],
									[
										399378,
										399385
									],
									[
										399420,
										399427
									],
									[
										399462,
										399469
									],
									[
										399504,
										399511
									],
									[
										399546,
										399553
									],
									[
										399588,
										399595
									],
									[
										399630,
										399637
									],
									[
										399672,
										399679
									],
									[
										399714,
										399721
									],
									[
										399756,
										399763
									],
									[
										399799,
										399806
									],
									[
										399842,
										399849
									],
									[
										399885,
										399892
									],
									[
										399928,
										399935
									],
									[
										399971,
										399978
									],
									[
										400049,
										400059
									],
									[
										400151,
										400179
									],
									[
										400454,
										400464
									],
									[
										400732,
										400739
									],
									[
										400774,
										400781
									],
									[
										400816,
										400823
									],
									[
										400858,
										400865
									],
									[
										400900,
										400907
									],
									[
										400942,
										400949
									],
									[
										400984,
										400991
									],
									[
										401026,
										401033
									],
									[
										401068,
										401075
									],
									[
										401110,
										401117
									],
									[
										401152,
										401159
									],
									[
										401195,
										401202
									],
									[
										401238,
										401245
									],
									[
										401281,
										401288
									],
									[
										401324,
										401331
									],
									[
										401367,
										401374
									],
									[
										401425,
										401435
									],
									[
										401523,
										401532
									],
									[
										401575,
										401587
									],
									[
										401870,
										401880
									],
									[
										402160,
										402167
									],
									[
										402202,
										402209
									],
									[
										402244,
										402251
									],
									[
										402286,
										402293
									],
									[
										402328,
										402335
									],
									[
										402370,
										402377
									],
									[
										402412,
										402419
									],
									[
										402454,
										402461
									],
									[
										402496,
										402503
									],
									[
										402538,
										402545
									],
									[
										402580,
										402587
									],
									[
										402623,
										402630
									],
									[
										402666,
										402673
									],
									[
										402709,
										402716
									],
									[
										402752,
										402759
									],
									[
										402795,
										402802
									],
									[
										402873,
										402883
									],
									[
										402976,
										403004
									],
									[
										403358,
										403368
									],
									[
										403638,
										403645
									],
									[
										403680,
										403687
									],
									[
										403722,
										403729
									],
									[
										403764,
										403771
									],
									[
										403806,
										403813
									],
									[
										403848,
										403855
									],
									[
										403890,
										403897
									],
									[
										403932,
										403939
									],
									[
										403974,
										403981
									],
									[
										404016,
										404023
									],
									[
										404058,
										404065
									],
									[
										404101,
										404108
									],
									[
										404144,
										404151
									],
									[
										404187,
										404194
									],
									[
										404230,
										404237
									],
									[
										404273,
										404280
									],
									[
										404331,
										404341
									],
									[
										404430,
										404439
									],
									[
										404482,
										404494
									],
									[
										404763,
										404812
									],
									[
										404835,
										404884
									],
									[
										404957,
										405006
									],
									[
										405031,
										405080
									],
									[
										405155,
										405204
									],
									[
										405229,
										405278
									],
									[
										405353,
										405402
									],
									[
										405426,
										405475
									],
									[
										405499,
										405548
									],
									[
										405573,
										405622
									],
									[
										405646,
										405695
									],
									[
										405720,
										405769
									],
									[
										406025,
										406051
									],
									[
										406077,
										406103
									],
									[
										406129,
										406155
									],
									[
										406353,
										406402
									],
									[
										406426,
										406475
									],
									[
										406499,
										406548
									],
									[
										406792,
										406841
									],
									[
										407174,
										407249
									],
									[
										407275,
										407350
									],
									[
										407514,
										407585
									],
									[
										407698,
										407705
									],
									[
										407755,
										407762
									],
									[
										407894,
										407903
									],
									[
										408076,
										408085
									],
									[
										408235,
										408244
									],
									[
										408565,
										408601
									],
									[
										408965,
										409000
									],
									[
										409119,
										409154
									],
									[
										409461,
										409517
									],
									[
										409599,
										409606
									],
									[
										409688,
										409695
									],
									[
										409777,
										409784
									],
									[
										409866,
										409873
									],
									[
										409955,
										409962
									],
									[
										410044,
										410051
									],
									[
										410133,
										410140
									],
									[
										410222,
										410229
									],
									[
										410311,
										410318
									],
									[
										410400,
										410407
									],
									[
										410489,
										410496
									],
									[
										410578,
										410585
									],
									[
										410667,
										410674
									],
									[
										410756,
										410763
									],
									[
										410845,
										410852
									],
									[
										410974,
										410984
									],
									[
										411114,
										411124
									],
									[
										411348,
										411388
									],
									[
										411594,
										411629
									],
									[
										411754,
										411789
									],
									[
										412018,
										412053
									],
									[
										412172,
										412207
									],
									[
										412331,
										412366
									],
									[
										412485,
										412520
									],
									[
										412688,
										412723
									],
									[
										412848,
										412883
									],
									[
										413026,
										413061
									],
									[
										413180,
										413215
									],
									[
										413350,
										413385
									],
									[
										413504,
										413539
									],
									[
										413715,
										413750
									],
									[
										413869,
										413904
									],
									[
										414080,
										414115
									],
									[
										414234,
										414269
									],
									[
										414424,
										414459
									],
									[
										414578,
										414613
									],
									[
										414896,
										414908
									],
									[
										415028,
										415035
									],
									[
										415396,
										415409
									],
									[
										415447,
										415501
									],
									[
										415552,
										415596
									],
									[
										415619,
										415673
									],
									[
										415724,
										415778
									],
									[
										415829,
										415883
									],
									[
										415934,
										415988
									],
									[
										416039,
										416052
									],
									[
										416090,
										416144
									],
									[
										416195,
										416239
									],
									[
										416262,
										416316
									],
									[
										416367,
										416421
									],
									[
										416472,
										416526
									],
									[
										416577,
										416631
									],
									[
										416682,
										416695
									],
									[
										416733,
										416787
									],
									[
										416838,
										416882
									],
									[
										416905,
										416959
									],
									[
										417010,
										417064
									],
									[
										417115,
										417169
									],
									[
										417220,
										417274
									],
									[
										417325,
										417338
									],
									[
										417377,
										417431
									],
									[
										417482,
										417526
									],
									[
										417549,
										417603
									],
									[
										417654,
										417708
									],
									[
										417759,
										417813
									],
									[
										417864,
										417918
									],
									[
										417969,
										417982
									],
									[
										418021,
										418075
									],
									[
										418126,
										418170
									],
									[
										418193,
										418247
									],
									[
										418298,
										418352
									],
									[
										418403,
										418457
									],
									[
										418508,
										418562
									],
									[
										418613,
										418626
									],
									[
										418665,
										418719
									],
									[
										418770,
										418814
									],
									[
										418837,
										418891
									],
									[
										418942,
										418996
									],
									[
										419047,
										419101
									],
									[
										419152,
										419206
									],
									[
										419257,
										419270
									],
									[
										419309,
										419363
									],
									[
										419414,
										419458
									],
									[
										419481,
										419535
									],
									[
										419586,
										419640
									],
									[
										419691,
										419745
									],
									[
										419796,
										419850
									],
									[
										419901,
										419914
									],
									[
										419953,
										420007
									],
									[
										420058,
										420102
									],
									[
										420125,
										420179
									],
									[
										420230,
										420284
									],
									[
										420335,
										420389
									],
									[
										420440,
										420494
									],
									[
										420581,
										420631
									],
									[
										420650,
										420700
									],
									[
										420719,
										420769
									],
									[
										420788,
										420838
									],
									[
										420857,
										420907
									],
									[
										420926,
										420976
									],
									[
										420995,
										421045
									],
									[
										421064,
										421114
									],
									[
										421229,
										421242
									],
									[
										421280,
										421334
									],
									[
										421385,
										421429
									],
									[
										421452,
										421506
									],
									[
										421557,
										421611
									],
									[
										421662,
										421716
									],
									[
										421767,
										421821
									],
									[
										421872,
										421885
									],
									[
										421923,
										421977
									],
									[
										422028,
										422072
									],
									[
										422095,
										422149
									],
									[
										422200,
										422254
									],
									[
										422305,
										422359
									],
									[
										422410,
										422464
									],
									[
										422515,
										422528
									],
									[
										422566,
										422620
									],
									[
										422671,
										422715
									],
									[
										422739,
										422793
									],
									[
										422844,
										422898
									],
									[
										422949,
										423003
									],
									[
										423054,
										423108
									],
									[
										423159,
										423172
									],
									[
										423211,
										423265
									],
									[
										423316,
										423360
									],
									[
										423384,
										423438
									],
									[
										423489,
										423543
									],
									[
										423594,
										423648
									],
									[
										423699,
										423753
									],
									[
										423804,
										423817
									],
									[
										423856,
										423910
									],
									[
										423961,
										424005
									],
									[
										424029,
										424083
									],
									[
										424134,
										424188
									],
									[
										424239,
										424293
									],
									[
										424344,
										424398
									],
									[
										424449,
										424462
									],
									[
										424501,
										424555
									],
									[
										424606,
										424650
									],
									[
										424674,
										424728
									],
									[
										424779,
										424833
									],
									[
										424884,
										424938
									],
									[
										424989,
										425043
									],
									[
										425094,
										425107
									],
									[
										425146,
										425200
									],
									[
										425251,
										425295
									],
									[
										425319,
										425373
									],
									[
										425424,
										425478
									],
									[
										425529,
										425583
									],
									[
										425634,
										425688
									],
									[
										425739,
										425752
									],
									[
										425791,
										425845
									],
									[
										425896,
										425940
									],
									[
										425964,
										426018
									],
									[
										426069,
										426123
									],
									[
										426174,
										426228
									],
									[
										426279,
										426333
									],
									[
										426420,
										426470
									],
									[
										426489,
										426539
									],
									[
										426558,
										426608
									],
									[
										426628,
										426678
									],
									[
										426698,
										426748
									],
									[
										426768,
										426818
									],
									[
										426838,
										426888
									],
									[
										426908,
										426958
									],
									[
										427290,
										427303
									],
									[
										427341,
										427395
									],
									[
										427446,
										427490
									],
									[
										427513,
										427567
									],
									[
										427618,
										427672
									],
									[
										427723,
										427777
									],
									[
										427828,
										427882
									],
									[
										427933,
										427946
									],
									[
										427984,
										428038
									],
									[
										428089,
										428133
									],
									[
										428156,
										428210
									],
									[
										428261,
										428315
									],
									[
										428366,
										428420
									],
									[
										428471,
										428525
									],
									[
										428576,
										428589
									],
									[
										428627,
										428681
									],
									[
										428732,
										428776
									],
									[
										428799,
										428853
									],
									[
										428904,
										428958
									],
									[
										429009,
										429063
									],
									[
										429114,
										429168
									],
									[
										429219,
										429232
									],
									[
										429271,
										429325
									],
									[
										429376,
										429420
									],
									[
										429443,
										429497
									],
									[
										429548,
										429602
									],
									[
										429653,
										429707
									],
									[
										429758,
										429812
									],
									[
										429863,
										429876
									],
									[
										429915,
										429969
									],
									[
										430020,
										430064
									],
									[
										430087,
										430141
									],
									[
										430192,
										430246
									],
									[
										430297,
										430351
									],
									[
										430402,
										430456
									],
									[
										430507,
										430520
									],
									[
										430559,
										430613
									],
									[
										430664,
										430708
									],
									[
										430731,
										430785
									],
									[
										430836,
										430890
									],
									[
										430941,
										430995
									],
									[
										431046,
										431100
									],
									[
										431151,
										431164
									],
									[
										431203,
										431257
									],
									[
										431308,
										431352
									],
									[
										431375,
										431429
									],
									[
										431480,
										431534
									],
									[
										431585,
										431639
									],
									[
										431690,
										431744
									],
									[
										431795,
										431808
									],
									[
										431847,
										431901
									],
									[
										431952,
										431996
									],
									[
										432019,
										432073
									],
									[
										432124,
										432178
									],
									[
										432229,
										432283
									],
									[
										432334,
										432388
									],
									[
										432475,
										432525
									],
									[
										432544,
										432594
									],
									[
										432613,
										432663
									],
									[
										432682,
										432732
									],
									[
										432751,
										432801
									],
									[
										432820,
										432870
									],
									[
										432889,
										432939
									],
									[
										432958,
										433008
									],
									[
										433123,
										433136
									],
									[
										433174,
										433228
									],
									[
										433279,
										433323
									],
									[
										433346,
										433400
									],
									[
										433451,
										433505
									],
									[
										433556,
										433610
									],
									[
										433661,
										433715
									],
									[
										433766,
										433779
									],
									[
										433817,
										433871
									],
									[
										433922,
										433966
									],
									[
										433989,
										434043
									],
									[
										434094,
										434148
									],
									[
										434199,
										434253
									],
									[
										434304,
										434358
									],
									[
										434409,
										434422
									],
									[
										434460,
										434514
									],
									[
										434565,
										434609
									],
									[
										434633,
										434687
									],
									[
										434738,
										434792
									],
									[
										434843,
										434897
									],
									[
										434948,
										435002
									],
									[
										435053,
										435066
									],
									[
										435105,
										435159
									],
									[
										435210,
										435254
									],
									[
										435278,
										435332
									],
									[
										435383,
										435437
									],
									[
										435488,
										435542
									],
									[
										435593,
										435647
									],
									[
										435698,
										435711
									],
									[
										435750,
										435804
									],
									[
										435855,
										435899
									],
									[
										435923,
										435977
									],
									[
										436028,
										436082
									],
									[
										436133,
										436187
									],
									[
										436238,
										436292
									],
									[
										436343,
										436356
									],
									[
										436395,
										436449
									],
									[
										436500,
										436544
									],
									[
										436568,
										436622
									],
									[
										436673,
										436727
									],
									[
										436778,
										436832
									],
									[
										436883,
										436937
									],
									[
										436988,
										437001
									],
									[
										437040,
										437094
									],
									[
										437145,
										437189
									],
									[
										437213,
										437267
									],
									[
										437318,
										437372
									],
									[
										437423,
										437477
									],
									[
										437528,
										437582
									],
									[
										437633,
										437646
									],
									[
										437685,
										437739
									],
									[
										437790,
										437834
									],
									[
										437858,
										437912
									],
									[
										437963,
										438017
									],
									[
										438068,
										438122
									],
									[
										438173,
										438227
									],
									[
										438314,
										438364
									],
									[
										438383,
										438433
									],
									[
										438452,
										438502
									],
									[
										438522,
										438572
									],
									[
										438592,
										438642
									],
									[
										438662,
										438712
									],
									[
										438732,
										438782
									],
									[
										438802,
										438852
									],
									[
										439184,
										439197
									],
									[
										439235,
										439289
									],
									[
										439340,
										439384
									],
									[
										439407,
										439461
									],
									[
										439512,
										439566
									],
									[
										439617,
										439671
									],
									[
										439722,
										439776
									],
									[
										439827,
										439840
									],
									[
										439878,
										439932
									],
									[
										439983,
										440027
									],
									[
										440050,
										440104
									],
									[
										440155,
										440209
									],
									[
										440260,
										440314
									],
									[
										440365,
										440419
									],
									[
										440470,
										440483
									],
									[
										440521,
										440575
									],
									[
										440626,
										440670
									],
									[
										440693,
										440747
									],
									[
										440798,
										440852
									],
									[
										440903,
										440957
									],
									[
										441008,
										441062
									],
									[
										441113,
										441126
									],
									[
										441165,
										441219
									],
									[
										441270,
										441314
									],
									[
										441337,
										441391
									],
									[
										441442,
										441496
									],
									[
										441547,
										441601
									],
									[
										441652,
										441706
									],
									[
										441757,
										441770
									],
									[
										441809,
										441863
									],
									[
										441914,
										441958
									],
									[
										441981,
										442035
									],
									[
										442086,
										442140
									],
									[
										442191,
										442245
									],
									[
										442296,
										442350
									],
									[
										442401,
										442414
									],
									[
										442453,
										442507
									],
									[
										442558,
										442602
									],
									[
										442625,
										442679
									],
									[
										442730,
										442784
									],
									[
										442835,
										442889
									],
									[
										442940,
										442994
									],
									[
										443045,
										443058
									],
									[
										443097,
										443151
									],
									[
										443202,
										443246
									],
									[
										443269,
										443323
									],
									[
										443374,
										443428
									],
									[
										443479,
										443533
									],
									[
										443584,
										443638
									],
									[
										443689,
										443702
									],
									[
										443741,
										443795
									],
									[
										443846,
										443890
									],
									[
										443913,
										443967
									],
									[
										444018,
										444072
									],
									[
										444123,
										444177
									],
									[
										444228,
										444282
									],
									[
										444369,
										444419
									],
									[
										444438,
										444488
									],
									[
										444507,
										444557
									],
									[
										444576,
										444626
									],
									[
										444645,
										444695
									],
									[
										444714,
										444764
									],
									[
										444783,
										444833
									],
									[
										444852,
										444902
									],
									[
										445017,
										445030
									],
									[
										445068,
										445122
									],
									[
										445173,
										445217
									],
									[
										445240,
										445294
									],
									[
										445345,
										445399
									],
									[
										445450,
										445504
									],
									[
										445555,
										445609
									],
									[
										445660,
										445673
									],
									[
										445711,
										445765
									],
									[
										445816,
										445860
									],
									[
										445883,
										445937
									],
									[
										445988,
										446042
									],
									[
										446093,
										446147
									],
									[
										446198,
										446252
									],
									[
										446303,
										446316
									],
									[
										446354,
										446408
									],
									[
										446459,
										446503
									],
									[
										446527,
										446581
									],
									[
										446632,
										446686
									],
									[
										446737,
										446791
									],
									[
										446842,
										446896
									],
									[
										446947,
										446960
									],
									[
										446999,
										447053
									],
									[
										447104,
										447148
									],
									[
										447172,
										447226
									],
									[
										447277,
										447331
									],
									[
										447382,
										447436
									],
									[
										447487,
										447541
									],
									[
										447592,
										447605
									],
									[
										447644,
										447698
									],
									[
										447749,
										447793
									],
									[
										447817,
										447871
									],
									[
										447922,
										447976
									],
									[
										448027,
										448081
									],
									[
										448132,
										448186
									],
									[
										448237,
										448250
									],
									[
										448289,
										448343
									],
									[
										448394,
										448438
									],
									[
										448462,
										448516
									],
									[
										448567,
										448621
									],
									[
										448672,
										448726
									],
									[
										448777,
										448831
									],
									[
										448882,
										448895
									],
									[
										448934,
										448988
									],
									[
										449039,
										449083
									],
									[
										449107,
										449161
									],
									[
										449212,
										449266
									],
									[
										449317,
										449371
									],
									[
										449422,
										449476
									],
									[
										449527,
										449540
									],
									[
										449579,
										449633
									],
									[
										449684,
										449728
									],
									[
										449752,
										449806
									],
									[
										449857,
										449911
									],
									[
										449962,
										450016
									],
									[
										450067,
										450121
									],
									[
										450208,
										450258
									],
									[
										450277,
										450327
									],
									[
										450346,
										450396
									],
									[
										450416,
										450466
									],
									[
										450486,
										450536
									],
									[
										450556,
										450606
									],
									[
										450626,
										450676
									],
									[
										450696,
										450746
									],
									[
										451078,
										451091
									],
									[
										451129,
										451183
									],
									[
										451234,
										451278
									],
									[
										451301,
										451355
									],
									[
										451406,
										451460
									],
									[
										451511,
										451565
									],
									[
										451616,
										451670
									],
									[
										451721,
										451734
									],
									[
										451772,
										451826
									],
									[
										451877,
										451921
									],
									[
										451944,
										451998
									],
									[
										452049,
										452103
									],
									[
										452154,
										452208
									],
									[
										452259,
										452313
									],
									[
										452364,
										452377
									],
									[
										452415,
										452469
									],
									[
										452520,
										452564
									],
									[
										452587,
										452641
									],
									[
										452692,
										452746
									],
									[
										452797,
										452851
									],
									[
										452902,
										452956
									],
									[
										453007,
										453020
									],
									[
										453059,
										453113
									],
									[
										453164,
										453208
									],
									[
										453231,
										453285
									],
									[
										453336,
										453390
									],
									[
										453441,
										453495
									],
									[
										453546,
										453600
									],
									[
										453651,
										453664
									],
									[
										453703,
										453757
									],
									[
										453808,
										453852
									],
									[
										453875,
										453929
									],
									[
										453980,
										454034
									],
									[
										454085,
										454139
									],
									[
										454190,
										454244
									],
									[
										454295,
										454308
									],
									[
										454347,
										454401
									],
									[
										454452,
										454496
									],
									[
										454519,
										454573
									],
									[
										454624,
										454678
									],
									[
										454729,
										454783
									],
									[
										454834,
										454888
									],
									[
										454939,
										454952
									],
									[
										454991,
										455045
									],
									[
										455096,
										455140
									],
									[
										455163,
										455217
									],
									[
										455268,
										455322
									],
									[
										455373,
										455427
									],
									[
										455478,
										455532
									],
									[
										455583,
										455596
									],
									[
										455635,
										455689
									],
									[
										455740,
										455784
									],
									[
										455807,
										455861
									],
									[
										455912,
										455966
									],
									[
										456017,
										456071
									],
									[
										456122,
										456176
									],
									[
										456263,
										456313
									],
									[
										456332,
										456382
									],
									[
										456401,
										456451
									],
									[
										456470,
										456520
									],
									[
										456539,
										456589
									],
									[
										456608,
										456658
									],
									[
										456677,
										456727
									],
									[
										456746,
										456796
									],
									[
										456911,
										456924
									],
									[
										456962,
										457016
									],
									[
										457067,
										457111
									],
									[
										457134,
										457188
									],
									[
										457239,
										457293
									],
									[
										457344,
										457398
									],
									[
										457449,
										457503
									],
									[
										457554,
										457567
									],
									[
										457605,
										457659
									],
									[
										457710,
										457754
									],
									[
										457777,
										457831
									],
									[
										457882,
										457936
									],
									[
										457987,
										458041
									],
									[
										458092,
										458146
									],
									[
										458197,
										458210
									],
									[
										458248,
										458302
									],
									[
										458353,
										458397
									],
									[
										458421,
										458475
									],
									[
										458526,
										458580
									],
									[
										458631,
										458685
									],
									[
										458736,
										458790
									],
									[
										458841,
										458854
									],
									[
										458893,
										458947
									],
									[
										458998,
										459042
									],
									[
										459066,
										459120
									],
									[
										459171,
										459225
									],
									[
										459276,
										459330
									],
									[
										459381,
										459435
									],
									[
										459486,
										459499
									],
									[
										459538,
										459592
									],
									[
										459643,
										459687
									],
									[
										459711,
										459765
									],
									[
										459816,
										459870
									],
									[
										459921,
										459975
									],
									[
										460026,
										460080
									],
									[
										460131,
										460144
									],
									[
										460183,
										460237
									],
									[
										460288,
										460332
									],
									[
										460356,
										460410
									],
									[
										460461,
										460515
									],
									[
										460566,
										460620
									],
									[
										460671,
										460725
									],
									[
										460776,
										460789
									],
									[
										460828,
										460882
									],
									[
										460933,
										460977
									],
									[
										461001,
										461055
									],
									[
										461106,
										461160
									],
									[
										461211,
										461265
									],
									[
										461316,
										461370
									],
									[
										461421,
										461434
									],
									[
										461473,
										461527
									],
									[
										461578,
										461622
									],
									[
										461646,
										461700
									],
									[
										461751,
										461805
									],
									[
										461856,
										461910
									],
									[
										461961,
										462015
									],
									[
										462102,
										462152
									],
									[
										462171,
										462221
									],
									[
										462240,
										462290
									],
									[
										462310,
										462360
									],
									[
										462380,
										462430
									],
									[
										462450,
										462500
									],
									[
										462520,
										462570
									],
									[
										462590,
										462640
									],
									[
										462972,
										462985
									],
									[
										463023,
										463077
									],
									[
										463128,
										463172
									],
									[
										463195,
										463249
									],
									[
										463300,
										463354
									],
									[
										463405,
										463459
									],
									[
										463510,
										463564
									],
									[
										463615,
										463628
									],
									[
										463666,
										463720
									],
									[
										463771,
										463815
									],
									[
										463838,
										463892
									],
									[
										463943,
										463997
									],
									[
										464048,
										464102
									],
									[
										464153,
										464207
									],
									[
										464258,
										464271
									],
									[
										464309,
										464363
									],
									[
										464414,
										464458
									],
									[
										464481,
										464535
									],
									[
										464586,
										464640
									],
									[
										464691,
										464745
									],
									[
										464796,
										464850
									],
									[
										464901,
										464914
									],
									[
										464953,
										465007
									],
									[
										465058,
										465102
									],
									[
										465125,
										465179
									],
									[
										465230,
										465284
									],
									[
										465335,
										465389
									],
									[
										465440,
										465494
									],
									[
										465545,
										465558
									],
									[
										465597,
										465651
									],
									[
										465702,
										465746
									],
									[
										465769,
										465823
									],
									[
										465874,
										465928
									],
									[
										465979,
										466033
									],
									[
										466084,
										466138
									],
									[
										466189,
										466202
									],
									[
										466241,
										466295
									],
									[
										466346,
										466390
									],
									[
										466413,
										466467
									],
									[
										466518,
										466572
									],
									[
										466623,
										466677
									],
									[
										466728,
										466782
									],
									[
										466833,
										466846
									],
									[
										466885,
										466939
									],
									[
										466990,
										467034
									],
									[
										467057,
										467111
									],
									[
										467162,
										467216
									],
									[
										467267,
										467321
									],
									[
										467372,
										467426
									],
									[
										467477,
										467490
									],
									[
										467529,
										467583
									],
									[
										467634,
										467678
									],
									[
										467701,
										467755
									],
									[
										467806,
										467860
									],
									[
										467911,
										467965
									],
									[
										468016,
										468070
									],
									[
										468157,
										468207
									],
									[
										468226,
										468276
									],
									[
										468295,
										468345
									],
									[
										468364,
										468414
									],
									[
										468433,
										468483
									],
									[
										468502,
										468552
									],
									[
										468571,
										468621
									],
									[
										468640,
										468690
									],
									[
										468805,
										468818
									],
									[
										468856,
										468910
									],
									[
										468961,
										469005
									],
									[
										469028,
										469082
									],
									[
										469133,
										469187
									],
									[
										469238,
										469292
									],
									[
										469343,
										469397
									],
									[
										469448,
										469461
									],
									[
										469499,
										469553
									],
									[
										469604,
										469648
									],
									[
										469671,
										469725
									],
									[
										469776,
										469830
									],
									[
										469881,
										469935
									],
									[
										469986,
										470040
									],
									[
										470091,
										470104
									],
									[
										470142,
										470196
									],
									[
										470247,
										470291
									],
									[
										470315,
										470369
									],
									[
										470420,
										470474
									],
									[
										470525,
										470579
									],
									[
										470630,
										470684
									],
									[
										470735,
										470748
									],
									[
										470787,
										470841
									],
									[
										470892,
										470936
									],
									[
										470960,
										471014
									],
									[
										471065,
										471119
									],
									[
										471170,
										471224
									],
									[
										471275,
										471329
									],
									[
										471380,
										471393
									],
									[
										471432,
										471486
									],
									[
										471537,
										471581
									],
									[
										471605,
										471659
									],
									[
										471710,
										471764
									],
									[
										471815,
										471869
									],
									[
										471920,
										471974
									],
									[
										472025,
										472038
									],
									[
										472077,
										472131
									],
									[
										472182,
										472226
									],
									[
										472250,
										472304
									],
									[
										472355,
										472409
									],
									[
										472460,
										472514
									],
									[
										472565,
										472619
									],
									[
										472670,
										472683
									],
									[
										472722,
										472776
									],
									[
										472827,
										472871
									],
									[
										472895,
										472949
									],
									[
										473000,
										473054
									],
									[
										473105,
										473159
									],
									[
										473210,
										473264
									],
									[
										473315,
										473328
									],
									[
										473367,
										473421
									],
									[
										473472,
										473516
									],
									[
										473540,
										473594
									],
									[
										473645,
										473699
									],
									[
										473750,
										473804
									],
									[
										473855,
										473909
									],
									[
										473996,
										474046
									],
									[
										474065,
										474115
									],
									[
										474134,
										474184
									],
									[
										474204,
										474254
									],
									[
										474274,
										474324
									],
									[
										474344,
										474394
									],
									[
										474414,
										474464
									],
									[
										474484,
										474534
									],
									[
										474866,
										474879
									],
									[
										474917,
										474971
									],
									[
										475022,
										475066
									],
									[
										475089,
										475143
									],
									[
										475194,
										475248
									],
									[
										475299,
										475353
									],
									[
										475404,
										475458
									],
									[
										475509,
										475522
									],
									[
										475560,
										475614
									],
									[
										475665,
										475709
									],
									[
										475732,
										475786
									],
									[
										475837,
										475891
									],
									[
										475942,
										475996
									],
									[
										476047,
										476101
									],
									[
										476152,
										476165
									],
									[
										476203,
										476257
									],
									[
										476308,
										476352
									],
									[
										476375,
										476429
									],
									[
										476480,
										476534
									],
									[
										476585,
										476639
									],
									[
										476690,
										476744
									],
									[
										476795,
										476808
									],
									[
										476847,
										476901
									],
									[
										476952,
										476996
									],
									[
										477019,
										477073
									],
									[
										477124,
										477178
									],
									[
										477229,
										477283
									],
									[
										477334,
										477388
									],
									[
										477439,
										477452
									],
									[
										477491,
										477545
									],
									[
										477596,
										477640
									],
									[
										477663,
										477717
									],
									[
										477768,
										477822
									],
									[
										477873,
										477927
									],
									[
										477978,
										478032
									],
									[
										478083,
										478096
									],
									[
										478135,
										478189
									],
									[
										478240,
										478284
									],
									[
										478307,
										478361
									],
									[
										478412,
										478466
									],
									[
										478517,
										478571
									],
									[
										478622,
										478676
									],
									[
										478727,
										478740
									],
									[
										478779,
										478833
									],
									[
										478884,
										478928
									],
									[
										478951,
										479005
									],
									[
										479056,
										479110
									],
									[
										479161,
										479215
									],
									[
										479266,
										479320
									],
									[
										479371,
										479384
									],
									[
										479423,
										479477
									],
									[
										479528,
										479572
									],
									[
										479595,
										479649
									],
									[
										479700,
										479754
									],
									[
										479805,
										479859
									],
									[
										479910,
										479964
									],
									[
										480051,
										480101
									],
									[
										480120,
										480170
									],
									[
										480189,
										480239
									],
									[
										480258,
										480308
									],
									[
										480327,
										480377
									],
									[
										480396,
										480446
									],
									[
										480465,
										480515
									],
									[
										480534,
										480584
									],
									[
										480699,
										480712
									],
									[
										480750,
										480804
									],
									[
										480855,
										480899
									],
									[
										480922,
										480976
									],
									[
										481027,
										481081
									],
									[
										481132,
										481186
									],
									[
										481237,
										481291
									],
									[
										481342,
										481355
									],
									[
										481393,
										481447
									],
									[
										481498,
										481542
									],
									[
										481565,
										481619
									],
									[
										481670,
										481724
									],
									[
										481775,
										481829
									],
									[
										481880,
										481934
									],
									[
										481985,
										481998
									],
									[
										482036,
										482090
									],
									[
										482141,
										482185
									],
									[
										482209,
										482263
									],
									[
										482314,
										482368
									],
									[
										482419,
										482473
									],
									[
										482524,
										482578
									],
									[
										482629,
										482642
									],
									[
										482681,
										482735
									],
									[
										482786,
										482830
									],
									[
										482854,
										482908
									],
									[
										482959,
										483013
									],
									[
										483064,
										483118
									],
									[
										483169,
										483223
									],
									[
										483274,
										483287
									],
									[
										483326,
										483380
									],
									[
										483431,
										483475
									],
									[
										483499,
										483553
									],
									[
										483604,
										483658
									],
									[
										483709,
										483763
									],
									[
										483814,
										483868
									],
									[
										483919,
										483932
									],
									[
										483971,
										484025
									],
									[
										484076,
										484120
									],
									[
										484144,
										484198
									],
									[
										484249,
										484303
									],
									[
										484354,
										484408
									],
									[
										484459,
										484513
									],
									[
										484564,
										484577
									],
									[
										484616,
										484670
									],
									[
										484721,
										484765
									],
									[
										484789,
										484843
									],
									[
										484894,
										484948
									],
									[
										484999,
										485053
									],
									[
										485104,
										485158
									],
									[
										485209,
										485222
									],
									[
										485261,
										485315
									],
									[
										485366,
										485410
									],
									[
										485434,
										485488
									],
									[
										485539,
										485593
									],
									[
										485644,
										485698
									],
									[
										485749,
										485803
									],
									[
										485890,
										485940
									],
									[
										485959,
										486009
									],
									[
										486028,
										486078
									],
									[
										486098,
										486148
									],
									[
										486168,
										486218
									],
									[
										486238,
										486288
									],
									[
										486308,
										486358
									],
									[
										486378,
										486428
									],
									[
										486760,
										486773
									],
									[
										486811,
										486865
									],
									[
										486916,
										486960
									],
									[
										486983,
										487037
									],
									[
										487088,
										487142
									],
									[
										487193,
										487247
									],
									[
										487298,
										487352
									],
									[
										487403,
										487416
									],
									[
										487454,
										487508
									],
									[
										487559,
										487603
									],
									[
										487626,
										487680
									],
									[
										487731,
										487785
									],
									[
										487836,
										487890
									],
									[
										487941,
										487995
									],
									[
										488046,
										488059
									],
									[
										488097,
										488151
									],
									[
										488202,
										488246
									],
									[
										488269,
										488323
									],
									[
										488374,
										488428
									],
									[
										488479,
										488533
									],
									[
										488584,
										488638
									],
									[
										488689,
										488702
									],
									[
										488741,
										488795
									],
									[
										488846,
										488890
									],
									[
										488913,
										488967
									],
									[
										489018,
										489072
									],
									[
										489123,
										489177
									],
									[
										489228,
										489282
									],
									[
										489333,
										489346
									],
									[
										489385,
										489439
									],
									[
										489490,
										489534
									],
									[
										489557,
										489611
									],
									[
										489662,
										489716
									],
									[
										489767,
										489821
									],
									[
										489872,
										489926
									],
									[
										489977,
										489990
									],
									[
										490029,
										490083
									],
									[
										490134,
										490178
									],
									[
										490201,
										490255
									],
									[
										490306,
										490360
									],
									[
										490411,
										490465
									],
									[
										490516,
										490570
									],
									[
										490621,
										490634
									],
									[
										490673,
										490727
									],
									[
										490778,
										490822
									],
									[
										490845,
										490899
									],
									[
										490950,
										491004
									],
									[
										491055,
										491109
									],
									[
										491160,
										491214
									],
									[
										491265,
										491278
									],
									[
										491317,
										491371
									],
									[
										491422,
										491466
									],
									[
										491489,
										491543
									],
									[
										491594,
										491648
									],
									[
										491699,
										491753
									],
									[
										491804,
										491858
									],
									[
										491945,
										491995
									],
									[
										492014,
										492064
									],
									[
										492083,
										492133
									],
									[
										492152,
										492202
									],
									[
										492221,
										492271
									],
									[
										492290,
										492340
									],
									[
										492359,
										492409
									],
									[
										492428,
										492478
									],
									[
										492593,
										492606
									],
									[
										492644,
										492698
									],
									[
										492749,
										492793
									],
									[
										492816,
										492870
									],
									[
										492921,
										492975
									],
									[
										493026,
										493080
									],
									[
										493131,
										493185
									],
									[
										493236,
										493249
									],
									[
										493287,
										493341
									],
									[
										493392,
										493436
									],
									[
										493459,
										493513
									],
									[
										493564,
										493618
									],
									[
										493669,
										493723
									],
									[
										493774,
										493828
									],
									[
										493879,
										493892
									],
									[
										493930,
										493984
									],
									[
										494035,
										494079
									],
									[
										494103,
										494157
									],
									[
										494208,
										494262
									],
									[
										494313,
										494367
									],
									[
										494418,
										494472
									],
									[
										494523,
										494536
									],
									[
										494575,
										494629
									],
									[
										494680,
										494724
									],
									[
										494748,
										494802
									],
									[
										494853,
										494907
									],
									[
										494958,
										495012
									],
									[
										495063,
										495117
									],
									[
										495168,
										495181
									],
									[
										495220,
										495274
									],
									[
										495325,
										495369
									],
									[
										495393,
										495447
									],
									[
										495498,
										495552
									],
									[
										495603,
										495657
									],
									[
										495708,
										495762
									],
									[
										495813,
										495826
									],
									[
										495865,
										495919
									],
									[
										495970,
										496014
									],
									[
										496038,
										496092
									],
									[
										496143,
										496197
									],
									[
										496248,
										496302
									],
									[
										496353,
										496407
									],
									[
										496458,
										496471
									],
									[
										496510,
										496564
									],
									[
										496615,
										496659
									],
									[
										496683,
										496737
									],
									[
										496788,
										496842
									],
									[
										496893,
										496947
									],
									[
										496998,
										497052
									],
									[
										497103,
										497116
									],
									[
										497155,
										497209
									],
									[
										497260,
										497304
									],
									[
										497328,
										497382
									],
									[
										497433,
										497487
									],
									[
										497538,
										497592
									],
									[
										497643,
										497697
									],
									[
										497784,
										497834
									],
									[
										497853,
										497903
									],
									[
										497922,
										497972
									],
									[
										497992,
										498042
									],
									[
										498062,
										498112
									],
									[
										498132,
										498182
									],
									[
										498202,
										498252
									],
									[
										498272,
										498322
									],
									[
										498654,
										498667
									],
									[
										498705,
										498759
									],
									[
										498810,
										498854
									],
									[
										498877,
										498931
									],
									[
										498982,
										499036
									],
									[
										499087,
										499141
									],
									[
										499192,
										499246
									],
									[
										499297,
										499310
									],
									[
										499348,
										499402
									],
									[
										499453,
										499497
									],
									[
										499520,
										499574
									],
									[
										499625,
										499679
									],
									[
										499730,
										499784
									],
									[
										499835,
										499889
									],
									[
										499940,
										499953
									],
									[
										499991,
										500045
									],
									[
										500096,
										500140
									],
									[
										500163,
										500217
									],
									[
										500268,
										500322
									],
									[
										500373,
										500427
									],
									[
										500478,
										500532
									],
									[
										500583,
										500596
									],
									[
										500635,
										500689
									],
									[
										500740,
										500784
									],
									[
										500807,
										500861
									],
									[
										500912,
										500966
									],
									[
										501017,
										501071
									],
									[
										501122,
										501176
									],
									[
										501227,
										501240
									],
									[
										501279,
										501333
									],
									[
										501384,
										501428
									],
									[
										501451,
										501505
									],
									[
										501556,
										501610
									],
									[
										501661,
										501715
									],
									[
										501766,
										501820
									],
									[
										501871,
										501884
									],
									[
										501923,
										501977
									],
									[
										502028,
										502072
									],
									[
										502095,
										502149
									],
									[
										502200,
										502254
									],
									[
										502305,
										502359
									],
									[
										502410,
										502464
									],
									[
										502515,
										502528
									],
									[
										502567,
										502621
									],
									[
										502672,
										502716
									],
									[
										502739,
										502793
									],
									[
										502844,
										502898
									],
									[
										502949,
										503003
									],
									[
										503054,
										503108
									],
									[
										503159,
										503172
									],
									[
										503211,
										503265
									],
									[
										503316,
										503360
									],
									[
										503383,
										503437
									],
									[
										503488,
										503542
									],
									[
										503593,
										503647
									],
									[
										503698,
										503752
									],
									[
										503839,
										503889
									],
									[
										503908,
										503958
									],
									[
										503977,
										504027
									],
									[
										504046,
										504096
									],
									[
										504115,
										504165
									],
									[
										504184,
										504234
									],
									[
										504253,
										504303
									],
									[
										504322,
										504372
									],
									[
										504487,
										504500
									],
									[
										504538,
										504592
									],
									[
										504643,
										504687
									],
									[
										504710,
										504764
									],
									[
										504815,
										504869
									],
									[
										504920,
										504974
									],
									[
										505025,
										505079
									],
									[
										505130,
										505143
									],
									[
										505181,
										505235
									],
									[
										505286,
										505330
									],
									[
										505353,
										505407
									],
									[
										505458,
										505512
									],
									[
										505563,
										505617
									],
									[
										505668,
										505722
									],
									[
										505773,
										505786
									],
									[
										505824,
										505878
									],
									[
										505929,
										505973
									],
									[
										505997,
										506051
									],
									[
										506102,
										506156
									],
									[
										506207,
										506261
									],
									[
										506312,
										506366
									],
									[
										506417,
										506430
									],
									[
										506469,
										506523
									],
									[
										506574,
										506618
									],
									[
										506642,
										506696
									],
									[
										506747,
										506801
									],
									[
										506852,
										506906
									],
									[
										506957,
										507011
									],
									[
										507062,
										507075
									],
									[
										507114,
										507168
									],
									[
										507219,
										507263
									],
									[
										507287,
										507341
									],
									[
										507392,
										507446
									],
									[
										507497,
										507551
									],
									[
										507602,
										507656
									],
									[
										507707,
										507720
									],
									[
										507759,
										507813
									],
									[
										507864,
										507908
									],
									[
										507932,
										507986
									],
									[
										508037,
										508091
									],
									[
										508142,
										508196
									],
									[
										508247,
										508301
									],
									[
										508352,
										508365
									],
									[
										508404,
										508458
									],
									[
										508509,
										508553
									],
									[
										508577,
										508631
									],
									[
										508682,
										508736
									],
									[
										508787,
										508841
									],
									[
										508892,
										508946
									],
									[
										508997,
										509010
									],
									[
										509049,
										509103
									],
									[
										509154,
										509198
									],
									[
										509222,
										509276
									],
									[
										509327,
										509381
									],
									[
										509432,
										509486
									],
									[
										509537,
										509591
									],
									[
										509678,
										509728
									],
									[
										509747,
										509797
									],
									[
										509816,
										509866
									],
									[
										509886,
										509936
									],
									[
										509956,
										510006
									],
									[
										510026,
										510076
									],
									[
										510096,
										510146
									],
									[
										510166,
										510216
									],
									[
										510567,
										510596
									],
									[
										510804,
										510817
									],
									[
										511038,
										511067
									],
									[
										511287,
										511300
									],
									[
										511755,
										511791
									],
									[
										511807,
										511824
									],
									[
										511859,
										511895
									],
									[
										512139,
										512193
									],
									[
										512448,
										512492
									],
									[
										512762,
										512778
									],
									[
										513261,
										513297
									],
									[
										513313,
										513330
									],
									[
										513365,
										513401
									],
									[
										513792,
										513836
									],
									[
										514106,
										514122
									],
									[
										514602,
										514634
									],
									[
										514654,
										514686
									],
									[
										514706,
										514738
									],
									[
										515133,
										515174
									],
									[
										515447,
										515460
									],
									[
										515826,
										515838
									],
									[
										516196,
										516208
									],
									[
										516444,
										516456
									],
									[
										516717,
										516729
									],
									[
										517187,
										517198
									],
									[
										517388,
										517399
									],
									[
										517862,
										517873
									],
									[
										518063,
										518074
									],
									[
										518537,
										518548
									],
									[
										518738,
										518749
									],
									[
										519212,
										519223
									],
									[
										519413,
										519424
									],
									[
										519887,
										519898
									],
									[
										520088,
										520099
									],
									[
										520562,
										520573
									],
									[
										520763,
										520774
									],
									[
										521237,
										521248
									],
									[
										521438,
										521449
									],
									[
										521912,
										521923
									],
									[
										522110,
										522121
									],
									[
										522437,
										522448
									],
									[
										522740,
										522751
									],
									[
										522817,
										522828
									],
									[
										522902,
										522913
									],
									[
										522968,
										522979
									],
									[
										523032,
										523043
									],
									[
										523115,
										523126
									],
									[
										523191,
										523202
									],
									[
										523252,
										523263
									],
									[
										523332,
										523343
									],
									[
										523419,
										523430
									],
									[
										523499,
										523510
									],
									[
										523579,
										523590
									],
									[
										523686,
										523697
									],
									[
										523775,
										523786
									],
									[
										523856,
										523867
									],
									[
										523938,
										523949
									],
									[
										524015,
										524026
									],
									[
										524078,
										524089
									],
									[
										524138,
										524149
									],
									[
										524200,
										524211
									],
									[
										524281,
										524292
									],
									[
										524355,
										524366
									],
									[
										524426,
										524437
									],
									[
										524514,
										524525
									],
									[
										524584,
										524595
									],
									[
										524664,
										524675
									],
									[
										524762,
										524773
									],
									[
										524834,
										524845
									],
									[
										524879,
										524890
									],
									[
										524983,
										524994
									],
									[
										525293,
										525304
									],
									[
										525480,
										525491
									],
									[
										525655,
										525666
									],
									[
										525776,
										525787
									],
									[
										525977,
										525988
									],
									[
										526250,
										526261
									],
									[
										526453,
										526464
									],
									[
										526607,
										526618
									],
									[
										526761,
										526772
									],
									[
										526958,
										526969
									],
									[
										527158,
										527169
									],
									[
										527352,
										527363
									],
									[
										527545,
										527556
									],
									[
										527729,
										527740
									],
									[
										527913,
										527924
									],
									[
										528086,
										528097
									],
									[
										528251,
										528262
									],
									[
										528483,
										528494
									],
									[
										528690,
										528701
									],
									[
										528857,
										528868
									],
									[
										529029,
										529040
									],
									[
										529207,
										529218
									],
									[
										529369,
										529380
									],
									[
										529575,
										529586
									],
									[
										529779,
										529790
									],
									[
										529926,
										529937
									],
									[
										530108,
										530119
									],
									[
										530310,
										530321
									],
									[
										530525,
										530536
									],
									[
										530705,
										530716
									],
									[
										530905,
										530916
									],
									[
										531110,
										531121
									],
									[
										531288,
										531299
									],
									[
										531436,
										531447
									],
									[
										531642,
										531653
									],
									[
										531949,
										531960
									],
									[
										531978,
										531989
									],
									[
										532191,
										532202
									],
									[
										532362,
										532373
									],
									[
										532603,
										532614
									],
									[
										533043,
										533049
									],
									[
										533647,
										533653
									],
									[
										534335,
										534341
									],
									[
										534838,
										534844
									],
									[
										535104,
										535110
									],
									[
										535545,
										535551
									],
									[
										535866,
										535872
									],
									[
										536021,
										536027
									],
									[
										536188,
										536194
									],
									[
										536493,
										536499
									],
									[
										536695,
										536701
									],
									[
										536992,
										536998
									],
									[
										537223,
										537229
									],
									[
										537669,
										537675
									],
									[
										538076,
										538082
									],
									[
										538603,
										538609
									],
									[
										539003,
										539009
									],
									[
										539363,
										539369
									],
									[
										539766,
										539772
									],
									[
										540088,
										540094
									],
									[
										540317,
										540323
									],
									[
										540531,
										540537
									],
									[
										540927,
										540939
									],
									[
										541282,
										541294
									],
									[
										541518,
										541530
									],
									[
										541927,
										541939
									],
									[
										542412,
										542424
									],
									[
										542863,
										542875
									],
									[
										543173,
										543185
									],
									[
										543332,
										543344
									],
									[
										543633,
										543645
									],
									[
										544287,
										544299
									],
									[
										544736,
										544748
									],
									[
										545143,
										545155
									],
									[
										545438,
										545450
									],
									[
										545905,
										545925
									],
									[
										546076,
										546096
									],
									[
										546195,
										546215
									],
									[
										546406,
										546426
									],
									[
										546657,
										546677
									],
									[
										546693,
										546713
									],
									[
										546783,
										546803
									],
									[
										546911,
										546931
									],
									[
										547057,
										547077
									],
									[
										547437,
										547457
									],
									[
										547553,
										547573
									],
									[
										547763,
										547783
									],
									[
										548008,
										548028
									],
									[
										548306,
										548326
									],
									[
										548752,
										548768
									],
									[
										548946,
										548962
									],
									[
										549336,
										549352
									],
									[
										549719,
										549735
									],
									[
										550120,
										550133
									],
									[
										550588,
										550597
									],
									[
										550644,
										550653
									],
									[
										550700,
										550709
									],
									[
										551034,
										551043
									],
									[
										551084,
										551093
									],
									[
										551134,
										551143
									],
									[
										551386,
										551395
									],
									[
										551437,
										551446
									],
									[
										551488,
										551497
									],
									[
										551755,
										551764
									],
									[
										552146,
										552154
									],
									[
										552604,
										552612
									],
									[
										553062,
										553070
									],
									[
										553520,
										553528
									],
									[
										553978,
										553986
									],
									[
										554436,
										554444
									],
									[
										554894,
										554902
									],
									[
										555352,
										555360
									],
									[
										555761,
										555769
									],
									[
										555791,
										555799
									],
									[
										555938,
										555946
									],
									[
										556096,
										556104
									],
									[
										556260,
										556268
									],
									[
										556580,
										556606
									],
									[
										556875,
										556901
									],
									[
										557332,
										557358
									],
									[
										557804,
										557815
									],
									[
										558357,
										558368
									],
									[
										558726,
										558737
									],
									[
										558952,
										558963
									],
									[
										559178,
										559189
									],
									[
										559404,
										559415
									],
									[
										559630,
										559641
									],
									[
										559856,
										559867
									],
									[
										560082,
										560093
									],
									[
										560308,
										560319
									],
									[
										560534,
										560545
									],
									[
										560760,
										560771
									],
									[
										560986,
										560997
									],
									[
										561212,
										561223
									],
									[
										561438,
										561449
									],
									[
										561664,
										561675
									],
									[
										561890,
										561901
									],
									[
										562116,
										562127
									],
									[
										562342,
										562353
									],
									[
										562648,
										562659
									],
									[
										562873,
										562884
									],
									[
										563176,
										563187
									],
									[
										563393,
										563404
									],
									[
										563688,
										563699
									],
									[
										563902,
										563913
									],
									[
										564185,
										564196
									],
									[
										564277,
										564288
									],
									[
										564590,
										564601
									],
									[
										564802,
										564813
									],
									[
										565061,
										565072
									],
									[
										565510,
										565528
									],
									[
										565806,
										565824
									],
									[
										565885,
										565903
									],
									[
										566014,
										566032
									],
									[
										566153,
										566171
									],
									[
										566344,
										566362
									],
									[
										566473,
										566491
									],
									[
										566755,
										566773
									],
									[
										567109,
										567135
									],
									[
										567378,
										567404
									],
									[
										567705,
										567731
									],
									[
										567930,
										567956
									],
									[
										568239,
										568265
									],
									[
										568565,
										568591
									],
									[
										568901,
										568918
									],
									[
										569173,
										569190
									],
									[
										569633,
										569650
									],
									[
										569865,
										569882
									],
									[
										569944,
										569961
									],
									[
										570072,
										570089
									],
									[
										570252,
										570269
									],
									[
										570428,
										570445
									],
									[
										570579,
										570596
									],
									[
										570855,
										570872
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								569950,
								569950
							]
						],
						"settings":
						{
							"SL.183.region_keys":
							[
							],
							"SL.205.region_keys":
							[
							],
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 31,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 203320.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "stm32-servo-firmware/src/usbd/usb_device.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2151,
						"regions":
						{
						},
						"selection":
						[
							[
								1233,
								1314
							]
						],
						"settings":
						{
							"SL.362.region_keys":
							[
								"SL.gcc.Highlights.|667eb0648d35f003d82020dc0ee5a2aef24beee04f4c0e8d5ba4674886f4d86d|region.redish markup.error.sublime_linter|32",
								"sublime_linter.protected_regions",
								"SL.gcc.Gutter.|region.redish markup.error.sublime_linter|dot"
							],
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 90.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "firmware48/Middlewares/USBDevice/Class/CDC/usbd_cdc.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 19131,
						"regions":
						{
						},
						"selection":
						[
							[
								18290,
								18290
							]
						],
						"settings":
						{
							"SL.374.region_keys":
							[
								"sublime_linter.protected_regions",
								"SL.gcc.Gutter.|region.redish markup.error.sublime_linter|dot",
								"SL.gcc.Highlights.|8e3db731e60bdb761b5c6f398fa6fee0393a123eb94bf6815f8fded96b50e432|region.redish markup.error.sublime_linter|32"
							],
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 8335.0,
						"zoom_level": 1.0
					},
					"stack_index": 17,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "firmware48/Middlewares/USBDevice/Device/usbd_ep.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6564,
						"regions":
						{
						},
						"selection":
						[
							[
								2207,
								2207
							]
						],
						"settings":
						{
							"SL.379.region_keys":
							[
								"SL.gcc.Highlights.|637d8e9d38cf10a8d65d9bc36127bee3c5bf88d218254a60ddb51f6485aee6ca|region.redish markup.error.sublime_linter|32",
								"sublime_linter.protected_regions",
								"SL.gcc.Gutter.|region.redish markup.error.sublime_linter|dot"
							],
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 444.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "firmware48/Middlewares/USBDevice/Device/usbd_ctrl.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7272,
						"regions":
						{
						},
						"selection":
						[
							[
								5849,
								5849
							]
						],
						"settings":
						{
							"SL.380.region_keys":
							[
								"sublime_linter.protected_regions",
								"SL.gcc.Gutter.|region.redish markup.error.sublime_linter|dot",
								"SL.gcc.Highlights.|a83bb478d2bd8b0b43416cb9dedd24332834731b654af4311386b99afed6d77b|region.redish markup.error.sublime_linter|32"
							],
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2416.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "firmware48/Middlewares/USBDevice/docs/usbd_pd_if.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4695,
						"regions":
						{
						},
						"selection":
						[
							[
								3893,
								3893
							]
						],
						"settings":
						{
							"SL.381.region_keys":
							[
								"sublime_linter.protected_regions",
								"SL.g++.Gutter.|region.redish markup.error.sublime_linter|dot",
								"SL.g++.Highlights.|bd008a23d9f16025364e06a4c1b50ae83a9660056535781a76a1c702b8d484f0|region.redish markup.error.sublime_linter|32"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1178.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "firmware48/Middlewares/USBDevice/PDs/STM32_XPD/usbd_pd_if.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3137,
						"regions":
						{
						},
						"selection":
						[
							[
								2672,
								2672
							]
						],
						"settings":
						{
							"SL.382.region_keys":
							[
								"SL.g++.Highlights.|597fb76304fd0f4619f4eeba29f9c14db09dc523fe15b6658a0da97f78a096a5|region.redish markup.error.sublime_linter|32",
								"SL.g++.Gutter.|region.redish markup.error.sublime_linter|dot",
								"sublime_linter.protected_regions"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 294.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "firmware48/Middlewares/USBDevice4Cube/XPD_USB/xpd_usb.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 32070,
						"regions":
						{
						},
						"selection":
						[
							[
								18989,
								18989
							]
						],
						"settings":
						{
							"SL.383.region_keys":
							[
								"sublime_linter.protected_regions",
								"SL.gcc.Gutter.|region.redish markup.error.sublime_linter|dot",
								"SL.gcc.Highlights.|e7c7142c9b4f5252fdc43bef7e70d9ce41335d44739d4b79443746dcb06277e4|region.redish markup.error.sublime_linter|32"
							],
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 11052.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "firmware48/Middlewares/USBDevice/Include/usb_types.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 16895,
						"regions":
						{
						},
						"selection":
						[
							[
								14378,
								14390
							]
						],
						"settings":
						{
							"SL.327.region_keys":
							[
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4045.0,
						"zoom_level": 1.0
					},
					"stack_index": 29,
					"type": "text"
				},
				{
					"buffer": 18,
					"file": "firmware48/Middlewares/USBDevice/Device/usbd_desc.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11597,
						"regions":
						{
						},
						"selection":
						[
							[
								1730,
								1730
							]
						],
						"settings":
						{
							"SL.325.region_keys":
							[
								"SL.gcc.Highlights.|6b85156745219e2176144bcb4222259c40ac956eca13a7c2694c0459aa2cff0f|region.redish markup.error.sublime_linter|32",
								"sublime_linter.protected_regions",
								"SL.gcc.Gutter.|region.redish markup.error.sublime_linter|dot"
							],
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 393.0,
						"zoom_level": 1.0
					},
					"stack_index": 24,
					"type": "text"
				},
				{
					"buffer": 19,
					"file": "firmware48/Middlewares/USBDevice/Include/usbd_types.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10936,
						"regions":
						{
						},
						"selection":
						[
							[
								1203,
								1203
							]
						],
						"settings":
						{
							"SL.328.region_keys":
							[
								"sublime_linter.protected_regions",
								"SL.g++.Gutter.|region.redish markup.error.sublime_linter|dot",
								"SL.g++.Highlights.|ede24791c92992b07425adf0d5cfe6a1a8971b14f0ef3ac59e2d27ab9c159394|region.redish markup.error.sublime_linter|32"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 23,
					"type": "text"
				},
				{
					"buffer": 20,
					"file": "firmware48/Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_def.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11393,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"SL.309.region_keys":
							[
								"SL.g++.Highlights.|8fe37489362868d34b6c8510ac69268af41abca566c09a70d050aeb421db18aa|region.redish markup.error.sublime_linter|32",
								"sublime_linter.protected_regions",
								"SL.g++.Gutter.|region.redish markup.error.sublime_linter|dot"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1665.0,
						"zoom_level": 1.0
					},
					"stack_index": 30,
					"type": "text"
				},
				{
					"buffer": 21,
					"file": "firmware48/Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g431xx.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 990298,
						"regions":
						{
						},
						"selection":
						[
							[
								64489,
								64489
							]
						],
						"settings":
						{
							"SL.246.region_keys":
							[
								"sublime_linter.protected_regions",
								"SL.g++.Gutter.|region.redish markup.error.sublime_linter|dot",
								"SL.g++.Highlights.|e45b80bb0c4465fe9bc92e6ef327b9c30a4b6f058ffb363cfdc10d75e0718c34|region.redish markup.error.sublime_linter|32"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 23868.0,
						"zoom_level": 1.0
					},
					"stack_index": 25,
					"type": "text"
				},
				{
					"buffer": 22,
					"file": "firmware48/Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g441xx.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1007201,
						"regions":
						{
						},
						"selection":
						[
							[
								61687,
								61698
							]
						],
						"settings":
						{
							"SL.288.region_keys":
							[
								"SL.g++.Highlights.|1824107711fc695b97a5c9f8bedf3ce5f9d7231f889370c6ab5e73d24037716a|region.redish markup.error.sublime_linter|32",
								"sublime_linter.protected_regions",
								"SL.g++.Gutter.|region.redish markup.error.sublime_linter|dot"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 22393.0,
						"zoom_level": 1.0
					},
					"stack_index": 31,
					"type": "text"
				},
				{
					"buffer": 23,
					"file": "firmware48/Drivers/STM32G4xx_HAL_Driver/Inc/Legacy/stm32_hal_legacy.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 209427,
						"regions":
						{
						},
						"selection":
						[
							[
								28910,
								28910
							]
						],
						"settings":
						{
							"SL.279.region_keys":
							[
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 9822.0,
						"zoom_level": 1.0
					},
					"stack_index": 32,
					"type": "text"
				},
				{
					"buffer": 24,
					"file": "firmware48/Middlewares/ST/STM32_USB_Device_Library/Core/Src/usbd_desc_template.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9453,
						"regions":
						{
						},
						"selection":
						[
							[
								1234,
								1234
							]
						],
						"settings":
						{
							"SL.253.region_keys":
							[
								"SL.gcc.Highlights.|2cad1dae7af039afefb9327fcd70a8d2dc2a219eefb1df358d549be91a01e938|region.redish markup.error.sublime_linter|32",
								"sublime_linter.protected_regions",
								"SL.gcc.Gutter.|region.redish markup.error.sublime_linter|dot"
							],
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 450.0,
						"zoom_level": 1.0
					},
					"stack_index": 33,
					"type": "text"
				}
			]
		},
		{
			"selected": 3,
			"sheets":
			[
				{
					"buffer": 25,
					"file": "firmware48/Src/main.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 26433,
						"regions":
						{
						},
						"selection":
						[
							[
								23242,
								23242
							]
						],
						"settings":
						{
							"SL.185.region_keys":
							[
							],
							"SL.207.region_keys":
							[
							],
							"SL.301.region_keys":
							[
								"SL.gcc.Gutter.|region.redish markup.error.sublime_linter|dot",
								"sublime_linter.protected_regions",
								"SL.gcc.Highlights.|02928372617465ef61f2e8d8d52320c9b39e917ce4e35ce22ad341e510ffb6d8|region.redish markup.error.sublime_linter|32"
							],
							"SL.83.region_keys":
							[
								"sublime_linter.protected_regions",
								"SL.gcc.Gutter.|region.redish markup.error.sublime_linter|dot",
								"SL.gcc.Highlights.|0eaa1f4b8e248f38fa260451ec5584f99bb2446e34c0d3a9b2c6c4102dafc486|region.redish markup.error.sublime_linter|32"
							],
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 14838.0,
						"zoom_level": 1.0
					},
					"stack_index": 22,
					"type": "text"
				},
				{
					"buffer": 26,
					"file": "stm32-servo-firmware/src/usbd/usbd_config.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 623,
						"regions":
						{
						},
						"selection":
						[
							[
								576,
								576
							]
						],
						"settings":
						{
							"SL.320.region_keys":
							[
								"sublime_linter.protected_regions"
							],
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 27,
					"file": "firmware48/Middlewares/USBDevice/README.md",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5061,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"SL.351.region_keys":
							[
							],
							"syntax": "Packages/Markdown/Markdown.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 18,
					"type": "text"
				},
				{
					"buffer": 28,
					"file": "firmware48/Middlewares/USBDevice/Templates/console_if.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7278,
						"regions":
						{
						},
						"selection":
						[
							[
								5283,
								5283
							]
						],
						"settings":
						{
							"SL.371.region_keys":
							[
								"SL.gcc.Highlights.|190e18a4443a3263d3dd5e66df94170bb038e63b683aca0c426d50fd45700dee|region.redish markup.error.sublime_linter|32",
								"sublime_linter.protected_regions",
								"SL.gcc.Gutter.|region.redish markup.error.sublime_linter|dot"
							],
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3699.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "firmware48/Middlewares/USBDevice/Class/CDC/usbd_cdc.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 19131,
						"regions":
						{
						},
						"selection":
						[
							[
								18290,
								18290
							]
						],
						"settings":
						{
							"SL.374.region_keys":
							[
								"sublime_linter.protected_regions",
								"SL.gcc.Gutter.|region.redish markup.error.sublime_linter|dot",
								"SL.gcc.Highlights.|8e3db731e60bdb761b5c6f398fa6fee0393a123eb94bf6815f8fded96b50e432|region.redish markup.error.sublime_linter|32"
							],
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 8335.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 29,
					"file": "firmware48/Middlewares/USBDevice/Include/usbd_cdc.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10454,
						"regions":
						{
						},
						"selection":
						[
							[
								933,
								943
							]
						],
						"settings":
						{
							"SL.372.region_keys":
							[
								"SL.g++.Highlights.|88ad0ebcbdff5964bcba9bbffc7993106ccf83bb37412a9a1d48e73737d3d687|region.redish markup.error.sublime_linter|32",
								"sublime_linter.protected_regions",
								"SL.g++.Gutter.|region.redish markup.error.sublime_linter|dot"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 19,
					"file": "firmware48/Middlewares/USBDevice/Include/usbd_types.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10936,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"SL.328.region_keys":
							[
								"sublime_linter.protected_regions",
								"SL.g++.Gutter.|region.redish markup.error.sublime_linter|dot",
								"SL.g++.Highlights.|ede24791c92992b07425adf0d5cfe6a1a8971b14f0ef3ac59e2d27ab9c159394|region.redish markup.error.sublime_linter|32"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 30,
					"file": "stm32-servo-firmware/src/usbd/usb_device.h",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 189,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"SL.364.region_keys":
							[
								"sublime_linter.protected_regions",
								"SL.g++.Gutter.|region.redish markup.error.sublime_linter|dot",
								"SL.g++.Highlights.|cb519ae9a3be6d4f6cc6271d50643119a17cbd26d14f8448bf7aafb6f0edba09|region.redish markup.error.sublime_linter|32"
							],
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 19,
					"type": "text"
				},
				{
					"buffer": 31,
					"file": "firmware48/Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pcd.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 47783,
						"regions":
						{
						},
						"selection":
						[
							[
								5429,
								5429
							]
						],
						"settings":
						{
							"SL.361.region_keys":
							[
								"sublime_linter.protected_regions",
								"SL.gcc.Gutter.|region.redish markup.error.sublime_linter|dot",
								"SL.gcc.Highlights.|1fea21555db3a0a968bca17b2a2fd3dba2b64e3133b19625c3ff4d134b9eb81b|region.redish markup.error.sublime_linter|32"
							],
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1856.0,
						"zoom_level": 1.0
					},
					"stack_index": 21,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 38.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.5,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.SublimeLinter Messages":
	{
		"height": 114.0
	},
	"output.exec":
	{
		"height": 30.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/User/minispeck-stm32f030.sublime-build",
	"project": "stm32-nema17-servo.sublime-project",
	"replace":
	{
		"height": 48.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"usbd ty",
				"stm32-nema17-servo/firmware48/Middlewares/USBDevice/Include/usbd_types.h"
			],
			[
				"usbd cdc h",
				"stm32-nema17-servo/firmware48/Middlewares/USBDevice/Include/usbd_cdc.h"
			],
			[
				"console",
				"stm32-nema17-servo/firmware48/Middlewares/USBDevice/Templates/console_if.c"
			],
			[
				"hal msp",
				"stm32-nema17-servo/firmware48/Src/stm32g4xx_hal_msp.c"
			],
			[
				"stm32g431",
				"stm32-nema17-servo/firmware48/Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g431xx.h"
			],
			[
				"usbd_def",
				"stm32-nema17-servo/firmware48/Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_def.h"
			],
			[
				"hal def",
				"stm32-nema17-servo/firmware48/Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_def.h"
			],
			[
				"xpd comm",
				"stm32-nema17-servo/firmware48/Middlewares/USBDevice4Cube/XPD_USB/xpd_common.h"
			],
			[
				"sercom",
				"stm32-nema17-servo/mechaduino-firmware/asf_mechaduino/samd21a/include/component/sercom.h"
			],
			[
				"spi.h",
				"stm32-nema17-servo/mechaduino-firmware/asf_mechaduino/hal/include/hpl_spi.h"
			],
			[
				"tc.h",
				"stm32-nema17-servo/mechaduino-firmware/asf_mechaduino/samd21a/include/component/tc.h"
			],
			[
				"atmel_st",
				"stm32-nema17-servo/mechaduino-firmware/asf_mechaduino/atmel_start.h"
			],
			[
				"hpl_usb.c",
				"stm32-nema17-servo/mechaduino-firmware/asf_mechaduino/hpl/usb/hpl_usb.c"
			],
			[
				"perf h",
				"minispeck-sensor-firmware/minispeck-stm32/src/perf.h"
			],
			[
				"perf",
				"minispeck-sensor-firmware/minispeck-stm32/src/perf.c"
			],
			[
				"cobs",
				"beedance/src/cobs.c"
			],
			[
				"minispeck an",
				"minispeck-sensor-firmware/minispeck-stm32/src/minispeck_analog.c"
			],
			[
				"beed md",
				"beedance/beedance.md"
			],
			[
				"beedance ho",
				"beedance/src/beedance_honeybee.h"
			],
			[
				"minispec ana",
				"minispeck-sensor-firmware/minispeck-stm32/src/minispeck_analog.h"
			],
			[
				"beed",
				"beedance/src/beedance.h"
			],
			[
				"hal spix",
				"stm32f030f4/minispeck-stm32f030f4/Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_spi_ex.h"
			],
			[
				"gsn soft timer",
				"Embedded/geps/inc/modules/soft_timer/gsn_soft_timer.h"
			],
			[
				"app data send c",
				"Embedded/adk/tls/src/tls/app_data_send.c"
			],
			[
				"dfu.c",
				"HoneyBee/src/dfu.c"
			],
			[
				"wifi.c",
				"HoneyBee/src/wifi.c"
			],
			[
				"dfuc",
				"HoneyBee/src/dfu.c"
			],
			[
				"wifi d",
				"HoneyBee/src/wifi_dfu.c"
			],
			[
				"version inf",
				"HoneyBee/src/version_info.c"
			],
			[
				"main lo",
				"HoneyBee/src/main_loop.c"
			],
			[
				"http",
				"HoneyBee/src/http.c"
			],
			[
				"git ash c",
				"HoneyBee/src/git-hash.c"
			],
			[
				"main c",
				"HoneyBee/src/main.c"
			],
			[
				"blu",
				"HoneyBee/src/bluetooth.c"
			],
			[
				"Make",
				"HoneyBee/Makefile"
			],
			[
				"main l",
				"HoneyBee/src/main_loop.c"
			],
			[
				"main.c",
				"HoneyBee/src/main.c"
			],
			[
				"http.c",
				"HoneyBee/src/http.c"
			],
			[
				"Mak",
				"HoneyBee/Makefile"
			],
			[
				"wifi h",
				"HoneyBee/src/wifi.h"
			],
			[
				"winc1500",
				"xdk-asf-3.40.0/common/components/wifi/winc1500/chip_info_example/main.c"
			],
			[
				"wifi c",
				"HoneyBee/src/wifi.c"
			],
			[
				"beedan",
				"beedance/beedance.md"
			],
			[
				"security wpa2",
				"xdk-asf-3.40.0/common/components/wifi/winc1500/security_wpa2_example/main.c"
			],
			[
				"makef",
				"HoneyBee/Makefile"
			],
			[
				"debug c",
				"HoneyBee/src/debug.c"
			],
			[
				"bluetooth.c",
				"HoneyBee/src/bluetooth.c"
			],
			[
				"flashlog",
				"HoneyBee/src/flashlog.c"
			],
			[
				"flash c",
				"HoneyBee/src/flash.c"
			],
			[
				"flash ",
				"HoneyBee/src/flash.h"
			],
			[
				"datalog c",
				"HoneyBee/src/datalog.c"
			],
			[
				"Makefile",
				"HoneyBee/Makefile"
			],
			[
				"data",
				"HoneyBee/src/datalog.c"
			],
			[
				"wifi",
				"HoneyBee/src/wifi.c"
			],
			[
				"bluet",
				"HoneyBee/src/bluetooth.c"
			],
			[
				"readm",
				"HoneyBee/README.md"
			],
			[
				"dfu",
				"HoneyBee/src/dfu.h"
			],
			[
				"dfu h",
				"HoneyBee/src/dfu.c"
			],
			[
				"atm",
				"HoneyBee/atmel.mk"
			],
			[
				"dfu c",
				"HoneyBee/src/dfu.c"
			],
			[
				"atmel",
				"HoneyBee/atmel.mk"
			],
			[
				"wifi dfu",
				"HoneyBee/src/wifi_dfu.c"
			],
			[
				"git ",
				"HoneyBee/src/git-hash.h"
			],
			[
				"beedance md",
				"beedance/beedance.md"
			],
			[
				"honeybee.h",
				"HoneyBee/src/honeybee.h"
			],
			[
				"gpio.h",
				"xdk-asf-3.35.1/common/services/gpio/gpio.h"
			],
			[
				"nm_bus_wrapper_sam4s.c",
				"xdk-asf-3.35.1/common/components/wifi/winc1500/bus_wrapper/source/nm_bus_wrapper_sam4s.c"
			],
			[
				"rtc ",
				"HoneyBee/src/rtc.c"
			],
			[
				"make",
				"HoneyBee/Makefile"
			],
			[
				"aef",
				"airviz-embedded-framework/inc/aef_debug.h"
			],
			[
				"blue",
				"HoneyBee/src/bluetooth.c"
			],
			[
				"beedance m",
				"beedance/beedance.md"
			],
			[
				"open",
				"HoneyBee/openocd.cfg"
			],
			[
				"user board",
				"HoneyBee/src/ASF/common/boards/user_board/user_board.h"
			],
			[
				"flash log",
				"HoneyBee/src/flashlog.c"
			],
			[
				"flash y",
				"HoneyBee/src/flash_types.h"
			],
			[
				"hone",
				"HoneyBee/src/honeybee.c"
			],
			[
				"main h",
				"HoneyBee/src/main.h"
			],
			[
				"startup sam4s",
				"HoneyBee/src/ASF/sam/utils/cmsis/sam4s/source/templates/gcc/startup_sam4s.c"
			],
			[
				"system sam4",
				"HoneyBee/src/ASF/sam/utils/cmsis/sam4s/source/templates/system_sam4s.c"
			],
			[
				"aef d",
				"airviz-embedded-framework/inc/aef_debug.h"
			],
			[
				"http c",
				"HoneyBee/src/http.c"
			],
			[
				"init c",
				"HoneyBee/src/ASF/common/boards/user_board/init.c"
			],
			[
				"user boar",
				"HoneyBee/src/ASF/common/boards/user_board/user_board.h"
			],
			[
				"syscl",
				"HoneyBee/src/ASF/common/services/clock/sysclk.h"
			],
			[
				"beed h",
				"beedance/src/beedance.h"
			],
			[
				"atmel.mk",
				"HoneyBee/atmel.mk"
			],
			[
				"makefile",
				"HoneyBee/Makefile"
			],
			[
				"debug h",
				"HoneyBee/src/debug.c"
			],
			[
				".ld",
				"include/c++/6.3.1/ext/pb_ds/detail/gp_hash_table_map_/constructor_destructor_no_store_hash_fn_imps.hpp"
			],
			[
				"hsoc",
				"HoneyBee/src/hsock.c"
			],
			[
				"blueto",
				"HoneyBee/src/bluetooth.c"
			],
			[
				"wifipri",
				"HoneyBee/src/wifi_private.h"
			],
			[
				"wifih",
				"HoneyBee/src/wifi.h"
			],
			[
				"wifidf",
				"HoneyBee/src/wifi_dfu.c"
			],
			[
				"wific",
				"HoneyBee/src/wifi.c"
			],
			[
				"debug",
				"HoneyBee/src/debug.c"
			],
			[
				"datalogc",
				"HoneyBee/src/datalog.c"
			],
			[
				"flashh",
				"HoneyBee/src/flash.h"
			],
			[
				"debugc",
				"HoneyBee/src/debug.c"
			],
			[
				"dylosc",
				"HoneyBee/src/dylos.c"
			],
			[
				"datalog",
				"HoneyBee/src/datalog.c"
			],
			[
				"msgpackjs",
				"HoneyBee/src/msgpack_json.c"
			],
			[
				"msgpackc",
				"HoneyBee/src/msgpack.c"
			],
			[
				"msgp",
				"HoneyBee/src/msgpack.h"
			],
			[
				"loop",
				"HoneyBee/src/main_loop.c"
			],
			[
				"cobsc",
				"HoneyBee/src/cobs.c"
			],
			[
				"cobsh",
				"HoneyBee/src/cobs.h"
			],
			[
				"main",
				"HoneyBee/src/main.c"
			],
			[
				"voc",
				"HoneyBee/src/vocTestboard.c"
			],
			[
				"fakel",
				"HoneyBee/src/fakelog.c"
			],
			[
				"minspc",
				"HoneyBee/src/miniSpeck.c"
			],
			[
				"minish",
				"HoneyBee/src/miniSpeck.h"
			],
			[
				"voch",
				"HoneyBee/src/vocTestboard.h"
			],
			[
				"dylosh",
				"HoneyBee/src/dylos.h"
			],
			[
				"fakelogh",
				"HoneyBee/src/fakelog.h"
			],
			[
				"datalogh",
				"HoneyBee/src/datalog.h"
			],
			[
				"hsockh",
				"HoneyBee/src/hsock.h"
			],
			[
				"hsockc",
				"HoneyBee/src/hsock.c"
			],
			[
				"flashld",
				"HoneyBee/src/ASF/sam/utils/linker_scripts/sam4s/sam4s8/gcc/flash.ld"
			],
			[
				"startup",
				"HoneyBee/src/ASF/sam/utils/cmsis/sam4s/source/templates/gcc/startup_sam4s.c"
			],
			[
				"rstch",
				"HoneyBee/src/ASF/sam/drivers/rstc/rstc.h"
			],
			[
				"mainloo",
				"HoneyBee/src/main_loop.c"
			],
			[
				"dfu.h",
				"HoneyBee/src/dfu.h"
			],
			[
				"flasht",
				"HoneyBee/src/flash_types.h"
			],
			[
				"mainc",
				"HoneyBee/src/main.c"
			],
			[
				"esdrh",
				"HoneyBee/src/esdr.h"
			],
			[
				"esdrc",
				"HoneyBee/src/esdr.c"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 297.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
